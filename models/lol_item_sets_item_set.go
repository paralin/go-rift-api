// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolItemSetsItemSet lol item sets item set
// swagger:model LolItemSetsItemSet
type LolItemSetsItemSet struct {

	// associated champions
	AssociatedChampions []int32 `json:"associatedChampions"`

	// associated maps
	AssociatedMaps []int32 `json:"associatedMaps"`

	// blocks
	Blocks []*LolItemSetsItemSetBlock `json:"blocks"`

	// map
	Map string `json:"map,omitempty"`

	// mode
	Mode string `json:"mode,omitempty"`

	// preferred item slots
	PreferredItemSlots []*LolItemSetsPreferredItemSlot `json:"preferredItemSlots"`

	// sortrank
	Sortrank int32 `json:"sortrank,omitempty"`

	// started from
	StartedFrom string `json:"startedFrom,omitempty"`

	// title
	Title string `json:"title,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// uid
	UID string `json:"uid,omitempty"`
}

// Validate validates this lol item sets item set
func (m *LolItemSetsItemSet) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBlocks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePreferredItemSlots(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolItemSetsItemSet) validateBlocks(formats strfmt.Registry) error {

	if swag.IsZero(m.Blocks) { // not required
		return nil
	}

	for i := 0; i < len(m.Blocks); i++ {
		if swag.IsZero(m.Blocks[i]) { // not required
			continue
		}

		if m.Blocks[i] != nil {
			if err := m.Blocks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("blocks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolItemSetsItemSet) validatePreferredItemSlots(formats strfmt.Registry) error {

	if swag.IsZero(m.PreferredItemSlots) { // not required
		return nil
	}

	for i := 0; i < len(m.PreferredItemSlots); i++ {
		if swag.IsZero(m.PreferredItemSlots[i]) { // not required
			continue
		}

		if m.PreferredItemSlots[i] != nil {
			if err := m.PreferredItemSlots[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("preferredItemSlots" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolItemSetsItemSet) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolItemSetsItemSet) UnmarshalBinary(b []byte) error {
	var res LolItemSetsItemSet
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
