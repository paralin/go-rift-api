// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolHonorV2LoginSessionStates lol honor v2 login session states
// swagger:model LolHonorV2LoginSessionStates
type LolHonorV2LoginSessionStates string

const (

	// LolHonorV2LoginSessionStatesINPROGRESS captures enum value "IN_PROGRESS"
	LolHonorV2LoginSessionStatesINPROGRESS LolHonorV2LoginSessionStates = "IN_PROGRESS"

	// LolHonorV2LoginSessionStatesSUCCEEDED captures enum value "SUCCEEDED"
	LolHonorV2LoginSessionStatesSUCCEEDED LolHonorV2LoginSessionStates = "SUCCEEDED"

	// LolHonorV2LoginSessionStatesLOGGINGOUT captures enum value "LOGGING_OUT"
	LolHonorV2LoginSessionStatesLOGGINGOUT LolHonorV2LoginSessionStates = "LOGGING_OUT"

	// LolHonorV2LoginSessionStatesERROR captures enum value "ERROR"
	LolHonorV2LoginSessionStatesERROR LolHonorV2LoginSessionStates = "ERROR"
)

// for schema
var lolHonorV2LoginSessionStatesEnum []interface{}

func init() {
	var res []LolHonorV2LoginSessionStates
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","SUCCEEDED","LOGGING_OUT","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolHonorV2LoginSessionStatesEnum = append(lolHonorV2LoginSessionStatesEnum, v)
	}
}

func (m LolHonorV2LoginSessionStates) validateLolHonorV2LoginSessionStatesEnum(path, location string, value LolHonorV2LoginSessionStates) error {
	if err := validate.Enum(path, location, value, lolHonorV2LoginSessionStatesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol honor v2 login session states
func (m LolHonorV2LoginSessionStates) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolHonorV2LoginSessionStatesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
