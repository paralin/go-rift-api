// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolRsoAuthRSOAuthorizationTrustLevel lol rso auth r s o authorization trust level
// swagger:model LolRsoAuthRSOAuthorizationTrustLevel
type LolRsoAuthRSOAuthorizationTrustLevel string

const (

	// LolRsoAuthRSOAuthorizationTrustLevelAlwaysTrusted captures enum value "always_trusted"
	LolRsoAuthRSOAuthorizationTrustLevelAlwaysTrusted LolRsoAuthRSOAuthorizationTrustLevel = "always_trusted"

	// LolRsoAuthRSOAuthorizationTrustLevelTrustedDevice captures enum value "trusted_device"
	LolRsoAuthRSOAuthorizationTrustLevelTrustedDevice LolRsoAuthRSOAuthorizationTrustLevel = "trusted_device"

	// LolRsoAuthRSOAuthorizationTrustLevelAlwaysVerify captures enum value "always_verify"
	LolRsoAuthRSOAuthorizationTrustLevelAlwaysVerify LolRsoAuthRSOAuthorizationTrustLevel = "always_verify"
)

// for schema
var lolRsoAuthRSOAuthorizationTrustLevelEnum []interface{}

func init() {
	var res []LolRsoAuthRSOAuthorizationTrustLevel
	if err := json.Unmarshal([]byte(`["always_trusted","trusted_device","always_verify"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolRsoAuthRSOAuthorizationTrustLevelEnum = append(lolRsoAuthRSOAuthorizationTrustLevelEnum, v)
	}
}

func (m LolRsoAuthRSOAuthorizationTrustLevel) validateLolRsoAuthRSOAuthorizationTrustLevelEnum(path, location string, value LolRsoAuthRSOAuthorizationTrustLevel) error {
	if err := validate.Enum(path, location, value, lolRsoAuthRSOAuthorizationTrustLevelEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol rso auth r s o authorization trust level
func (m LolRsoAuthRSOAuthorizationTrustLevel) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolRsoAuthRSOAuthorizationTrustLevelEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
