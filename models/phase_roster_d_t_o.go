// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// PhaseRosterDTO phase roster d t o
// swagger:model PhaseRosterDTO
type PhaseRosterDTO struct {

	// bracket d t o
	BracketDTO *Bracket `json:"bracketDTO,omitempty"`

	// bracket Id
	BracketID int64 `json:"bracketId,omitempty"`

	// checkin time
	CheckinTime int64 `json:"checkinTime,omitempty"`

	// period
	Period int32 `json:"period,omitempty"`

	// phase Id
	PhaseID int64 `json:"phaseId,omitempty"`

	// phase roster subs
	PhaseRosterSubs []*PhaseRosterSubDTO `json:"phaseRosterSubs"`
}

// Validate validates this phase roster d t o
func (m *PhaseRosterDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBracketDTO(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePhaseRosterSubs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PhaseRosterDTO) validateBracketDTO(formats strfmt.Registry) error {

	if swag.IsZero(m.BracketDTO) { // not required
		return nil
	}

	if m.BracketDTO != nil {
		if err := m.BracketDTO.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("bracketDTO")
			}
			return err
		}
	}

	return nil
}

func (m *PhaseRosterDTO) validatePhaseRosterSubs(formats strfmt.Registry) error {

	if swag.IsZero(m.PhaseRosterSubs) { // not required
		return nil
	}

	for i := 0; i < len(m.PhaseRosterSubs); i++ {
		if swag.IsZero(m.PhaseRosterSubs[i]) { // not required
			continue
		}

		if m.PhaseRosterSubs[i] != nil {
			if err := m.PhaseRosterSubs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("phaseRosterSubs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *PhaseRosterDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PhaseRosterDTO) UnmarshalBinary(b []byte) error {
	var res PhaseRosterDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
