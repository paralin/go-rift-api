// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolChatConfigReadinessEnum lol chat config readiness enum
// swagger:model LolChatConfigReadinessEnum
type LolChatConfigReadinessEnum string

const (

	// LolChatConfigReadinessEnumNotReady captures enum value "NotReady"
	LolChatConfigReadinessEnumNotReady LolChatConfigReadinessEnum = "NotReady"

	// LolChatConfigReadinessEnumReady captures enum value "Ready"
	LolChatConfigReadinessEnumReady LolChatConfigReadinessEnum = "Ready"

	// LolChatConfigReadinessEnumDisabled captures enum value "Disabled"
	LolChatConfigReadinessEnumDisabled LolChatConfigReadinessEnum = "Disabled"
)

// for schema
var lolChatConfigReadinessEnumEnum []interface{}

func init() {
	var res []LolChatConfigReadinessEnum
	if err := json.Unmarshal([]byte(`["NotReady","Ready","Disabled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolChatConfigReadinessEnumEnum = append(lolChatConfigReadinessEnumEnum, v)
	}
}

func (m LolChatConfigReadinessEnum) validateLolChatConfigReadinessEnumEnum(path, location string, value LolChatConfigReadinessEnum) error {
	if err := validate.Enum(path, location, value, lolChatConfigReadinessEnumEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol chat config readiness enum
func (m LolChatConfigReadinessEnum) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolChatConfigReadinessEnumEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
