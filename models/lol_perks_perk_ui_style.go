// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolPerksPerkUIStyle lol perks perk UI style
// swagger:model LolPerksPerkUIStyle
type LolPerksPerkUIStyle struct {

	// allowed sub styles
	AllowedSubStyles []int32 `json:"allowedSubStyles"`

	// asset map
	AssetMap map[string]string `json:"assetMap,omitempty"`

	// default page name
	DefaultPageName string `json:"defaultPageName,omitempty"`

	// default perks
	DefaultPerks []int32 `json:"defaultPerks"`

	// default sub style
	DefaultSubStyle int32 `json:"defaultSubStyle,omitempty"`

	// icon path
	IconPath string `json:"iconPath,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// slots
	Slots []*LolPerksPerkUISlot `json:"slots"`

	// sub style bonus
	SubStyleBonus []*LolPerksPerkSubStyleBonusResource `json:"subStyleBonus"`

	// tooltip
	Tooltip string `json:"tooltip,omitempty"`
}

// Validate validates this lol perks perk UI style
func (m *LolPerksPerkUIStyle) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSlots(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSubStyleBonus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolPerksPerkUIStyle) validateSlots(formats strfmt.Registry) error {

	if swag.IsZero(m.Slots) { // not required
		return nil
	}

	for i := 0; i < len(m.Slots); i++ {
		if swag.IsZero(m.Slots[i]) { // not required
			continue
		}

		if m.Slots[i] != nil {
			if err := m.Slots[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("slots" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolPerksPerkUIStyle) validateSubStyleBonus(formats strfmt.Registry) error {

	if swag.IsZero(m.SubStyleBonus) { // not required
		return nil
	}

	for i := 0; i < len(m.SubStyleBonus); i++ {
		if swag.IsZero(m.SubStyleBonus[i]) { // not required
			continue
		}

		if m.SubStyleBonus[i] != nil {
			if err := m.SubStyleBonus[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("subStyleBonus" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolPerksPerkUIStyle) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolPerksPerkUIStyle) UnmarshalBinary(b []byte) error {
	var res LolPerksPerkUIStyle
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
