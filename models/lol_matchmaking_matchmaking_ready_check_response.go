// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolMatchmakingMatchmakingReadyCheckResponse lol matchmaking matchmaking ready check response
// swagger:model LolMatchmakingMatchmakingReadyCheckResponse
type LolMatchmakingMatchmakingReadyCheckResponse string

const (

	// LolMatchmakingMatchmakingReadyCheckResponseNone captures enum value "None"
	LolMatchmakingMatchmakingReadyCheckResponseNone LolMatchmakingMatchmakingReadyCheckResponse = "None"

	// LolMatchmakingMatchmakingReadyCheckResponseAccepted captures enum value "Accepted"
	LolMatchmakingMatchmakingReadyCheckResponseAccepted LolMatchmakingMatchmakingReadyCheckResponse = "Accepted"

	// LolMatchmakingMatchmakingReadyCheckResponseDeclined captures enum value "Declined"
	LolMatchmakingMatchmakingReadyCheckResponseDeclined LolMatchmakingMatchmakingReadyCheckResponse = "Declined"
)

// for schema
var lolMatchmakingMatchmakingReadyCheckResponseEnum []interface{}

func init() {
	var res []LolMatchmakingMatchmakingReadyCheckResponse
	if err := json.Unmarshal([]byte(`["None","Accepted","Declined"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolMatchmakingMatchmakingReadyCheckResponseEnum = append(lolMatchmakingMatchmakingReadyCheckResponseEnum, v)
	}
}

func (m LolMatchmakingMatchmakingReadyCheckResponse) validateLolMatchmakingMatchmakingReadyCheckResponseEnum(path, location string, value LolMatchmakingMatchmakingReadyCheckResponse) error {
	if err := validate.Enum(path, location, value, lolMatchmakingMatchmakingReadyCheckResponseEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol matchmaking matchmaking ready check response
func (m LolMatchmakingMatchmakingReadyCheckResponse) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolMatchmakingMatchmakingReadyCheckResponseEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
