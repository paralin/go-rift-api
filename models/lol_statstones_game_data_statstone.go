// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolStatstonesGameDataStatstone lol statstones game data statstone
// swagger:model LolStatstonesGameDataStatstone
type LolStatstonesGameDataStatstone struct {

	// bound champion
	BoundChampion *LolStatstonesGameDataItemReference `json:"boundChampion,omitempty"`

	// category
	Category string `json:"category,omitempty"`

	// content Id
	ContentID string `json:"contentId,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// icon full
	IconFull string `json:"iconFull,omitempty"`

	// icon lit
	IconLit string `json:"iconLit,omitempty"`

	// icon unlit
	IconUnlit string `json:"iconUnlit,omitempty"`

	// icon unowned
	IconUnowned string `json:"iconUnowned,omitempty"`

	// is epic
	IsEpic bool `json:"isEpic,omitempty"`

	// is retired
	IsRetired bool `json:"isRetired,omitempty"`

	// item Id
	ItemID int32 `json:"itemId,omitempty"`

	// milestones
	Milestones []int32 `json:"milestones"`

	// name
	Name string `json:"name,omitempty"`

	// tracking type
	TrackingType int32 `json:"trackingType,omitempty"`
}

// Validate validates this lol statstones game data statstone
func (m *LolStatstonesGameDataStatstone) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBoundChampion(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolStatstonesGameDataStatstone) validateBoundChampion(formats strfmt.Registry) error {

	if swag.IsZero(m.BoundChampion) { // not required
		return nil
	}

	if m.BoundChampion != nil {
		if err := m.BoundChampion.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("boundChampion")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolStatstonesGameDataStatstone) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolStatstonesGameDataStatstone) UnmarshalBinary(b []byte) error {
	var res LolStatstonesGameDataStatstone
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
