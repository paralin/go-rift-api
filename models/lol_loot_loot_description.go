// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolLootLootDescription lol loot loot description
// swagger:model LolLootLootDescription
type LolLootLootDescription struct {

	// child loot table names
	ChildLootTableNames []string `json:"childLootTableNames"`

	// children descriptions
	ChildrenDescriptions []*LolLootLootDescription `json:"childrenDescriptions"`

	// image path
	ImagePath string `json:"imagePath,omitempty"`

	// localized description
	LocalizedDescription string `json:"localizedDescription,omitempty"`

	// localized description long
	LocalizedDescriptionLong string `json:"localizedDescriptionLong,omitempty"`

	// loot name
	LootName string `json:"lootName,omitempty"`
}

// Validate validates this lol loot loot description
func (m *LolLootLootDescription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChildrenDescriptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolLootLootDescription) validateChildrenDescriptions(formats strfmt.Registry) error {

	if swag.IsZero(m.ChildrenDescriptions) { // not required
		return nil
	}

	for i := 0; i < len(m.ChildrenDescriptions); i++ {
		if swag.IsZero(m.ChildrenDescriptions[i]) { // not required
			continue
		}

		if m.ChildrenDescriptions[i] != nil {
			if err := m.ChildrenDescriptions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("childrenDescriptions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolLootLootDescription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolLootLootDescription) UnmarshalBinary(b []byte) error {
	var res LolLootLootDescription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
