// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolPatchComponentStateWorkType lol patch component state work type
// swagger:model LolPatchComponentStateWorkType
type LolPatchComponentStateWorkType string

const (

	// LolPatchComponentStateWorkTypeScanning captures enum value "Scanning"
	LolPatchComponentStateWorkTypeScanning LolPatchComponentStateWorkType = "Scanning"

	// LolPatchComponentStateWorkTypeNetwork captures enum value "Network"
	LolPatchComponentStateWorkTypeNetwork LolPatchComponentStateWorkType = "Network"

	// LolPatchComponentStateWorkTypeDisk captures enum value "Disk"
	LolPatchComponentStateWorkTypeDisk LolPatchComponentStateWorkType = "Disk"
)

// for schema
var lolPatchComponentStateWorkTypeEnum []interface{}

func init() {
	var res []LolPatchComponentStateWorkType
	if err := json.Unmarshal([]byte(`["Scanning","Network","Disk"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolPatchComponentStateWorkTypeEnum = append(lolPatchComponentStateWorkTypeEnum, v)
	}
}

func (m LolPatchComponentStateWorkType) validateLolPatchComponentStateWorkTypeEnum(path, location string, value LolPatchComponentStateWorkType) error {
	if err := validate.Enum(path, location, value, lolPatchComponentStateWorkTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol patch component state work type
func (m LolPatchComponentStateWorkType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolPatchComponentStateWorkTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
