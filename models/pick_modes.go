// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// PickModes pick modes
// swagger:model PickModes
type PickModes string

const (

	// PickModesNOTPICKING captures enum value "NOT_PICKING"
	PickModesNOTPICKING PickModes = "NOT_PICKING"

	// PickModesINPROGRESS captures enum value "IN_PROGRESS"
	PickModesINPROGRESS PickModes = "IN_PROGRESS"

	// PickModesDONE captures enum value "DONE"
	PickModesDONE PickModes = "DONE"
)

// for schema
var pickModesEnum []interface{}

func init() {
	var res []PickModes
	if err := json.Unmarshal([]byte(`["NOT_PICKING","IN_PROGRESS","DONE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		pickModesEnum = append(pickModesEnum, v)
	}
}

func (m PickModes) validatePickModesEnum(path, location string, value PickModes) error {
	if err := validate.Enum(path, location, value, pickModesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this pick modes
func (m PickModes) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validatePickModesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
