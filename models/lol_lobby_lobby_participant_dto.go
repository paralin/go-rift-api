// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolLobbyLobbyParticipantDto lol lobby lobby participant dto
// swagger:model LolLobbyLobbyParticipantDto
type LolLobbyLobbyParticipantDto struct {

	// allowed change activity
	AllowedChangeActivity bool `json:"allowedChangeActivity,omitempty"`

	// allowed invite others
	AllowedInviteOthers bool `json:"allowedInviteOthers,omitempty"`

	// allowed kick others
	AllowedKickOthers bool `json:"allowedKickOthers,omitempty"`

	// allowed start activity
	AllowedStartActivity bool `json:"allowedStartActivity,omitempty"`

	// allowed toggle invite
	AllowedToggleInvite bool `json:"allowedToggleInvite,omitempty"`

	// auto fill eligible
	AutoFillEligible bool `json:"autoFillEligible,omitempty"`

	// auto fill protected for promos
	AutoFillProtectedForPromos bool `json:"autoFillProtectedForPromos,omitempty"`

	// auto fill protected for soloing
	AutoFillProtectedForSoloing bool `json:"autoFillProtectedForSoloing,omitempty"`

	// auto fill protected for streaking
	AutoFillProtectedForStreaking bool `json:"autoFillProtectedForStreaking,omitempty"`

	// bot champion Id
	BotChampionID int32 `json:"botChampionId,omitempty"`

	// bot difficulty
	BotDifficulty LolLobbyLobbyBotDifficulty `json:"botDifficulty,omitempty"`

	// bot Id
	BotID string `json:"botId,omitempty"`

	// first position preference
	FirstPositionPreference string `json:"firstPositionPreference,omitempty"`

	// is bot
	IsBot bool `json:"isBot,omitempty"`

	// is leader
	IsLeader bool `json:"isLeader,omitempty"`

	// is spectator
	IsSpectator bool `json:"isSpectator,omitempty"`

	// puuid
	Puuid string `json:"puuid,omitempty"`

	// ready
	Ready bool `json:"ready,omitempty"`

	// second position preference
	SecondPositionPreference string `json:"secondPositionPreference,omitempty"`

	// show ghosted banner
	ShowGhostedBanner bool `json:"showGhostedBanner,omitempty"`

	// summoner icon Id
	SummonerIconID int32 `json:"summonerIconId,omitempty"`

	// summoner Id
	SummonerID int64 `json:"summonerId,omitempty"`

	// summoner internal name
	SummonerInternalName string `json:"summonerInternalName,omitempty"`

	// summoner level
	SummonerLevel int32 `json:"summonerLevel,omitempty"`

	// summoner name
	SummonerName string `json:"summonerName,omitempty"`

	// team Id
	TeamID int32 `json:"teamId,omitempty"`
}

// Validate validates this lol lobby lobby participant dto
func (m *LolLobbyLobbyParticipantDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBotDifficulty(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolLobbyLobbyParticipantDto) validateBotDifficulty(formats strfmt.Registry) error {

	if swag.IsZero(m.BotDifficulty) { // not required
		return nil
	}

	if err := m.BotDifficulty.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("botDifficulty")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolLobbyLobbyParticipantDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolLobbyLobbyParticipantDto) UnmarshalBinary(b []byte) error {
	var res LolLobbyLobbyParticipantDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
