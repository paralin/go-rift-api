// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolLoginLoginConnectionMode lol login login connection mode
// swagger:model LolLoginLoginConnectionMode
type LolLoginLoginConnectionMode string

const (

	// LolLoginLoginConnectionModePreparing captures enum value "Preparing"
	LolLoginLoginConnectionModePreparing LolLoginLoginConnectionMode = "Preparing"

	// LolLoginLoginConnectionModeLegacy captures enum value "Legacy"
	LolLoginLoginConnectionModeLegacy LolLoginLoginConnectionMode = "Legacy"

	// LolLoginLoginConnectionModePartner captures enum value "Partner"
	LolLoginLoginConnectionModePartner LolLoginLoginConnectionMode = "Partner"

	// LolLoginLoginConnectionModeRiotClient captures enum value "RiotClient"
	LolLoginLoginConnectionModeRiotClient LolLoginLoginConnectionMode = "RiotClient"
)

// for schema
var lolLoginLoginConnectionModeEnum []interface{}

func init() {
	var res []LolLoginLoginConnectionMode
	if err := json.Unmarshal([]byte(`["Preparing","Legacy","Partner","RiotClient"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolLoginLoginConnectionModeEnum = append(lolLoginLoginConnectionModeEnum, v)
	}
}

func (m LolLoginLoginConnectionMode) validateLolLoginLoginConnectionModeEnum(path, location string, value LolLoginLoginConnectionMode) error {
	if err := validate.Enum(path, location, value, lolLoginLoginConnectionModeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol login login connection mode
func (m LolLoginLoginConnectionMode) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolLoginLoginConnectionModeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
