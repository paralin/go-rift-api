// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolShutdownShutdownReason lol shutdown shutdown reason
// swagger:model LolShutdownShutdownReason
type LolShutdownShutdownReason string

const (

	// LolShutdownShutdownReasonInvalid captures enum value "Invalid"
	LolShutdownShutdownReasonInvalid LolShutdownShutdownReason = "Invalid"

	// LolShutdownShutdownReasonPlatformMaintenance captures enum value "PlatformMaintenance"
	LolShutdownShutdownReasonPlatformMaintenance LolShutdownShutdownReason = "PlatformMaintenance"

	// LolShutdownShutdownReasonLcuAlphaDisabled captures enum value "LcuAlphaDisabled"
	LolShutdownShutdownReasonLcuAlphaDisabled LolShutdownShutdownReason = "LcuAlphaDisabled"

	// LolShutdownShutdownReasonPlayerBanned captures enum value "PlayerBanned"
	LolShutdownShutdownReasonPlayerBanned LolShutdownShutdownReason = "PlayerBanned"
)

// for schema
var lolShutdownShutdownReasonEnum []interface{}

func init() {
	var res []LolShutdownShutdownReason
	if err := json.Unmarshal([]byte(`["Invalid","PlatformMaintenance","LcuAlphaDisabled","PlayerBanned"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolShutdownShutdownReasonEnum = append(lolShutdownShutdownReasonEnum, v)
	}
}

func (m LolShutdownShutdownReason) validateLolShutdownShutdownReasonEnum(path, location string, value LolShutdownShutdownReason) error {
	if err := validate.Enum(path, location, value, lolShutdownShutdownReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol shutdown shutdown reason
func (m LolShutdownShutdownReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolShutdownShutdownReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
