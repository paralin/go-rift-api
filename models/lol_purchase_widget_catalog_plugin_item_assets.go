// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolPurchaseWidgetCatalogPluginItemAssets lol purchase widget catalog plugin item assets
// swagger:model LolPurchaseWidgetCatalogPluginItemAssets
type LolPurchaseWidgetCatalogPluginItemAssets struct {

	// colors
	Colors []string `json:"colors"`

	// emblems
	Emblems []*LolPurchaseWidgetChampionSkinEmblem `json:"emblems"`

	// icon path
	IconPath string `json:"iconPath,omitempty"`

	// splash path
	SplashPath string `json:"splashPath,omitempty"`

	// tile path
	TilePath string `json:"tilePath,omitempty"`
}

// Validate validates this lol purchase widget catalog plugin item assets
func (m *LolPurchaseWidgetCatalogPluginItemAssets) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEmblems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolPurchaseWidgetCatalogPluginItemAssets) validateEmblems(formats strfmt.Registry) error {

	if swag.IsZero(m.Emblems) { // not required
		return nil
	}

	for i := 0; i < len(m.Emblems); i++ {
		if swag.IsZero(m.Emblems[i]) { // not required
			continue
		}

		if m.Emblems[i] != nil {
			if err := m.Emblems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("emblems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolPurchaseWidgetCatalogPluginItemAssets) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolPurchaseWidgetCatalogPluginItemAssets) UnmarshalBinary(b []byte) error {
	var res LolPurchaseWidgetCatalogPluginItemAssets
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
