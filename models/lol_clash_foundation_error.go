// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolClashFoundationError lol clash foundation error
// swagger:model LolClashFoundationError
type LolClashFoundationError string

const (

	// LolClashFoundationErrorCLASHNOTINITIALIZED captures enum value "CLASH_NOT_INITIALIZED"
	LolClashFoundationErrorCLASHNOTINITIALIZED LolClashFoundationError = "CLASH_NOT_INITIALIZED"

	// LolClashFoundationErrorCLASHDISABLED captures enum value "CLASH_DISABLED"
	LolClashFoundationErrorCLASHDISABLED LolClashFoundationError = "CLASH_DISABLED"

	// LolClashFoundationErrorDESERIALIZATIONFAILED captures enum value "DESERIALIZATION_FAILED"
	LolClashFoundationErrorDESERIALIZATIONFAILED LolClashFoundationError = "DESERIALIZATION_FAILED"

	// LolClashFoundationErrorGAMEFLOWUNAVAILABLE captures enum value "GAMEFLOW_UNAVAILABLE"
	LolClashFoundationErrorGAMEFLOWUNAVAILABLE LolClashFoundationError = "GAMEFLOW_UNAVAILABLE"

	// LolClashFoundationErrorLOLINVENTORYNOTREADY captures enum value "LOL_INVENTORY_NOT_READY"
	LolClashFoundationErrorLOLINVENTORYNOTREADY LolClashFoundationError = "LOL_INVENTORY_NOT_READY"

	// LolClashFoundationErrorINVALIDSIMPLESTATEFLAG captures enum value "INVALID_SIMPLE_STATE_FLAG"
	LolClashFoundationErrorINVALIDSIMPLESTATEFLAG LolClashFoundationError = "INVALID_SIMPLE_STATE_FLAG"
)

// for schema
var lolClashFoundationErrorEnum []interface{}

func init() {
	var res []LolClashFoundationError
	if err := json.Unmarshal([]byte(`["CLASH_NOT_INITIALIZED","CLASH_DISABLED","DESERIALIZATION_FAILED","GAMEFLOW_UNAVAILABLE","LOL_INVENTORY_NOT_READY","INVALID_SIMPLE_STATE_FLAG"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolClashFoundationErrorEnum = append(lolClashFoundationErrorEnum, v)
	}
}

func (m LolClashFoundationError) validateLolClashFoundationErrorEnum(path, location string, value LolClashFoundationError) error {
	if err := validate.Enum(path, location, value, lolClashFoundationErrorEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol clash foundation error
func (m LolClashFoundationError) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolClashFoundationErrorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
