// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolKrShutdownLawPolicyType lol kr shutdown law policy type
// swagger:model LolKrShutdownLawPolicyType
type LolKrShutdownLawPolicyType string

const (

	// LolKrShutdownLawPolicyTypeShutdown captures enum value "shutdown"
	LolKrShutdownLawPolicyTypeShutdown LolKrShutdownLawPolicyType = "shutdown"

	// LolKrShutdownLawPolicyTypePlayTime captures enum value "playTime"
	LolKrShutdownLawPolicyTypePlayTime LolKrShutdownLawPolicyType = "playTime"

	// LolKrShutdownLawPolicyTypeWarningMessage captures enum value "warningMessage"
	LolKrShutdownLawPolicyTypeWarningMessage LolKrShutdownLawPolicyType = "warningMessage"

	// LolKrShutdownLawPolicyTypeDisableMatchMaking captures enum value "disableMatchMaking"
	LolKrShutdownLawPolicyTypeDisableMatchMaking LolKrShutdownLawPolicyType = "disableMatchMaking"
)

// for schema
var lolKrShutdownLawPolicyTypeEnum []interface{}

func init() {
	var res []LolKrShutdownLawPolicyType
	if err := json.Unmarshal([]byte(`["shutdown","playTime","warningMessage","disableMatchMaking"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolKrShutdownLawPolicyTypeEnum = append(lolKrShutdownLawPolicyTypeEnum, v)
	}
}

func (m LolKrShutdownLawPolicyType) validateLolKrShutdownLawPolicyTypeEnum(path, location string, value LolKrShutdownLawPolicyType) error {
	if err := validate.Enum(path, location, value, lolKrShutdownLawPolicyTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol kr shutdown law policy type
func (m LolKrShutdownLawPolicyType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolKrShutdownLawPolicyTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
