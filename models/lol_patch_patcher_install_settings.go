// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// LolPatchPatcherInstallSettings lol patch patcher install settings
// swagger:model LolPatchPatcherInstallSettings
type LolPatchPatcherInstallSettings struct {

	// client patch url
	ClientPatchURL string `json:"client_patch_url,omitempty"`

	// client patcher
	ClientPatcher string `json:"client_patcher,omitempty"`

	// client patcher available
	ClientPatcherAvailable bool `json:"client_patcher_available,omitempty"`

	// game patch url
	GamePatchURL string `json:"game_patch_url,omitempty"`

	// game patcher
	GamePatcher string `json:"game_patcher,omitempty"`

	// game patcher available
	GamePatcherAvailable bool `json:"game_patcher_available,omitempty"`

	// locales
	Locales []string `json:"locales"`

	// max download speed mbps
	MaxDownloadSpeedMbps int32 `json:"max_download_speed_mbps,omitempty"`
}

// Validate validates this lol patch patcher install settings
func (m *LolPatchPatcherInstallSettings) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LolPatchPatcherInstallSettings) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolPatchPatcherInstallSettings) UnmarshalBinary(b []byte) error {
	var res LolPatchPatcherInstallSettings
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
