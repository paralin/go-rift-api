// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolClubsClubPermission lol clubs club permission
// swagger:model LolClubsClubPermission
type LolClubsClubPermission string

const (

	// LolClubsClubPermissionINVITE captures enum value "INVITE"
	LolClubsClubPermissionINVITE LolClubsClubPermission = "INVITE"

	// LolClubsClubPermissionPROMOTE captures enum value "PROMOTE"
	LolClubsClubPermissionPROMOTE LolClubsClubPermission = "PROMOTE"

	// LolClubsClubPermissionDEMOTE captures enum value "DEMOTE"
	LolClubsClubPermissionDEMOTE LolClubsClubPermission = "DEMOTE"

	// LolClubsClubPermissionKICKMEMBER captures enum value "KICK_MEMBER"
	LolClubsClubPermissionKICKMEMBER LolClubsClubPermission = "KICK_MEMBER"

	// LolClubsClubPermissionKICKOFFICER captures enum value "KICK_OFFICER"
	LolClubsClubPermissionKICKOFFICER LolClubsClubPermission = "KICK_OFFICER"

	// LolClubsClubPermissionOWNERSHIPTRANSFER captures enum value "OWNERSHIP_TRANSFER"
	LolClubsClubPermissionOWNERSHIPTRANSFER LolClubsClubPermission = "OWNERSHIP_TRANSFER"

	// LolClubsClubPermissionNOMINATE captures enum value "NOMINATE"
	LolClubsClubPermissionNOMINATE LolClubsClubPermission = "NOMINATE"

	// LolClubsClubPermissionSETMOTD captures enum value "SET_MOTD"
	LolClubsClubPermissionSETMOTD LolClubsClubPermission = "SET_MOTD"

	// LolClubsClubPermissionSETDESCRIPTION captures enum value "SET_DESCRIPTION"
	LolClubsClubPermissionSETDESCRIPTION LolClubsClubPermission = "SET_DESCRIPTION"
)

// for schema
var lolClubsClubPermissionEnum []interface{}

func init() {
	var res []LolClubsClubPermission
	if err := json.Unmarshal([]byte(`["INVITE","PROMOTE","DEMOTE","KICK_MEMBER","KICK_OFFICER","OWNERSHIP_TRANSFER","NOMINATE","SET_MOTD","SET_DESCRIPTION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolClubsClubPermissionEnum = append(lolClubsClubPermissionEnum, v)
	}
}

func (m LolClubsClubPermission) validateLolClubsClubPermissionEnum(path, location string, value LolClubsClubPermission) error {
	if err := validate.Enum(path, location, value, lolClubsClubPermissionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol clubs club permission
func (m LolClubsClubPermission) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolClubsClubPermissionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
