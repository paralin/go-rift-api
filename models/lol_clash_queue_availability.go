// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolClashQueueAvailability lol clash queue availability
// swagger:model LolClashQueueAvailability
type LolClashQueueAvailability string

const (

	// LolClashQueueAvailabilityAvailable captures enum value "Available"
	LolClashQueueAvailabilityAvailable LolClashQueueAvailability = "Available"

	// LolClashQueueAvailabilityPlatformDisabled captures enum value "PlatformDisabled"
	LolClashQueueAvailabilityPlatformDisabled LolClashQueueAvailability = "PlatformDisabled"

	// LolClashQueueAvailabilityDoesntMeetRequirements captures enum value "DoesntMeetRequirements"
	LolClashQueueAvailabilityDoesntMeetRequirements LolClashQueueAvailability = "DoesntMeetRequirements"
)

// for schema
var lolClashQueueAvailabilityEnum []interface{}

func init() {
	var res []LolClashQueueAvailability
	if err := json.Unmarshal([]byte(`["Available","PlatformDisabled","DoesntMeetRequirements"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolClashQueueAvailabilityEnum = append(lolClashQueueAvailabilityEnum, v)
	}
}

func (m LolClashQueueAvailability) validateLolClashQueueAvailabilityEnum(path, location string, value LolClashQueueAvailability) error {
	if err := validate.Enum(path, location, value, lolClashQueueAvailabilityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol clash queue availability
func (m LolClashQueueAvailability) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolClashQueueAvailabilityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
