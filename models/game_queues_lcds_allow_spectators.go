// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// GameQueuesLcdsAllowSpectators game queues lcds allow spectators
// swagger:model GameQueuesLcdsAllowSpectators
type GameQueuesLcdsAllowSpectators string

const (

	// GameQueuesLcdsAllowSpectatorsNONE captures enum value "NONE"
	GameQueuesLcdsAllowSpectatorsNONE GameQueuesLcdsAllowSpectators = "NONE"

	// GameQueuesLcdsAllowSpectatorsLOBBYONLY captures enum value "LOBBYONLY"
	GameQueuesLcdsAllowSpectatorsLOBBYONLY GameQueuesLcdsAllowSpectators = "LOBBYONLY"

	// GameQueuesLcdsAllowSpectatorsDROPINONLY captures enum value "DROPINONLY"
	GameQueuesLcdsAllowSpectatorsDROPINONLY GameQueuesLcdsAllowSpectators = "DROPINONLY"

	// GameQueuesLcdsAllowSpectatorsALL captures enum value "ALL"
	GameQueuesLcdsAllowSpectatorsALL GameQueuesLcdsAllowSpectators = "ALL"
)

// for schema
var gameQueuesLcdsAllowSpectatorsEnum []interface{}

func init() {
	var res []GameQueuesLcdsAllowSpectators
	if err := json.Unmarshal([]byte(`["NONE","LOBBYONLY","DROPINONLY","ALL"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		gameQueuesLcdsAllowSpectatorsEnum = append(gameQueuesLcdsAllowSpectatorsEnum, v)
	}
}

func (m GameQueuesLcdsAllowSpectators) validateGameQueuesLcdsAllowSpectatorsEnum(path, location string, value GameQueuesLcdsAllowSpectators) error {
	if err := validate.Enum(path, location, value, gameQueuesLcdsAllowSpectatorsEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this game queues lcds allow spectators
func (m GameQueuesLcdsAllowSpectators) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateGameQueuesLcdsAllowSpectatorsEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
