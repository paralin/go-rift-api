// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RosterAggregatedStatsDTO roster aggregated stats d t o
// swagger:model RosterAggregatedStatsDTO
type RosterAggregatedStatsDTO struct {

	// period stats
	PeriodStats []*RosterPeriodAggregatedStatsDTO `json:"periodStats"`

	// player stats
	PlayerStats map[string]RosterPlayerAggregatedStatsDTO `json:"playerStats,omitempty"`
}

// Validate validates this roster aggregated stats d t o
func (m *RosterAggregatedStatsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePeriodStats(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePlayerStats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RosterAggregatedStatsDTO) validatePeriodStats(formats strfmt.Registry) error {

	if swag.IsZero(m.PeriodStats) { // not required
		return nil
	}

	for i := 0; i < len(m.PeriodStats); i++ {
		if swag.IsZero(m.PeriodStats[i]) { // not required
			continue
		}

		if m.PeriodStats[i] != nil {
			if err := m.PeriodStats[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("periodStats" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *RosterAggregatedStatsDTO) validatePlayerStats(formats strfmt.Registry) error {

	if swag.IsZero(m.PlayerStats) { // not required
		return nil
	}

	for k := range m.PlayerStats {

		if err := validate.Required("playerStats"+"."+k, "body", m.PlayerStats[k]); err != nil {
			return err
		}
		if val, ok := m.PlayerStats[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *RosterAggregatedStatsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RosterAggregatedStatsDTO) UnmarshalBinary(b []byte) error {
	var res RosterAggregatedStatsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
