// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LolStorePageDTO lol store page d t o
// swagger:model LolStorePageDTO
type LolStorePageDTO struct {

	// player
	Player *LolStorePlayer `json:"Player,omitempty"`

	// catalog
	Catalog []*LolStoreCatalogItem `json:"catalog"`

	// group order
	GroupOrder []string `json:"groupOrder"`

	// item groups
	ItemGroups map[string]LolStorePageGroupingDTO `json:"itemGroups,omitempty"`
}

// Validate validates this lol store page d t o
func (m *LolStorePageDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePlayer(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateCatalog(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateItemGroups(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolStorePageDTO) validatePlayer(formats strfmt.Registry) error {

	if swag.IsZero(m.Player) { // not required
		return nil
	}

	if m.Player != nil {
		if err := m.Player.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("Player")
			}
			return err
		}
	}

	return nil
}

func (m *LolStorePageDTO) validateCatalog(formats strfmt.Registry) error {

	if swag.IsZero(m.Catalog) { // not required
		return nil
	}

	for i := 0; i < len(m.Catalog); i++ {
		if swag.IsZero(m.Catalog[i]) { // not required
			continue
		}

		if m.Catalog[i] != nil {
			if err := m.Catalog[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("catalog" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolStorePageDTO) validateItemGroups(formats strfmt.Registry) error {

	if swag.IsZero(m.ItemGroups) { // not required
		return nil
	}

	for k := range m.ItemGroups {

		if err := validate.Required("itemGroups"+"."+k, "body", m.ItemGroups[k]); err != nil {
			return err
		}
		if val, ok := m.ItemGroups[k]; ok {
			if err := val.Validate(formats); err != nil {
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolStorePageDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolStorePageDTO) UnmarshalBinary(b []byte) error {
	var res LolStorePageDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
