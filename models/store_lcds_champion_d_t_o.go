// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// StoreLcdsChampionDTO store lcds champion d t o
// swagger:model StoreLcdsChampionDTO
type StoreLcdsChampionDTO struct {

	// active
	Active bool `json:"active,omitempty"`

	// bot enabled
	BotEnabled bool `json:"botEnabled,omitempty"`

	// champion Id
	ChampionID int32 `json:"championId,omitempty"`

	// champion skins
	ChampionSkins []*StoreLcdsChampionSkinDTO `json:"championSkins"`

	// end date
	EndDate int64 `json:"endDate,omitempty"`

	// free to play
	FreeToPlay bool `json:"freeToPlay,omitempty"`

	// free to play reward
	FreeToPlayReward bool `json:"freeToPlayReward,omitempty"`

	// owned
	Owned bool `json:"owned,omitempty"`

	// purchase date
	PurchaseDate int64 `json:"purchaseDate,omitempty"`

	// ranked play enabled
	RankedPlayEnabled bool `json:"rankedPlayEnabled,omitempty"`

	// sources
	Sources []string `json:"sources"`

	// win count remaining
	WinCountRemaining int32 `json:"winCountRemaining,omitempty"`
}

// Validate validates this store lcds champion d t o
func (m *StoreLcdsChampionDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateChampionSkins(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *StoreLcdsChampionDTO) validateChampionSkins(formats strfmt.Registry) error {

	if swag.IsZero(m.ChampionSkins) { // not required
		return nil
	}

	for i := 0; i < len(m.ChampionSkins); i++ {
		if swag.IsZero(m.ChampionSkins[i]) { // not required
			continue
		}

		if m.ChampionSkins[i] != nil {
			if err := m.ChampionSkins[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("championSkins" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *StoreLcdsChampionDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *StoreLcdsChampionDTO) UnmarshalBinary(b []byte) error {
	var res StoreLcdsChampionDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
