// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolChampSelectLegacyGameflowPhase lol champ select legacy gameflow phase
// swagger:model LolChampSelectLegacyGameflowPhase
type LolChampSelectLegacyGameflowPhase string

const (

	// LolChampSelectLegacyGameflowPhaseNone captures enum value "None"
	LolChampSelectLegacyGameflowPhaseNone LolChampSelectLegacyGameflowPhase = "None"

	// LolChampSelectLegacyGameflowPhaseLobby captures enum value "Lobby"
	LolChampSelectLegacyGameflowPhaseLobby LolChampSelectLegacyGameflowPhase = "Lobby"

	// LolChampSelectLegacyGameflowPhaseMatchmaking captures enum value "Matchmaking"
	LolChampSelectLegacyGameflowPhaseMatchmaking LolChampSelectLegacyGameflowPhase = "Matchmaking"

	// LolChampSelectLegacyGameflowPhaseCheckedIntoTournament captures enum value "CheckedIntoTournament"
	LolChampSelectLegacyGameflowPhaseCheckedIntoTournament LolChampSelectLegacyGameflowPhase = "CheckedIntoTournament"

	// LolChampSelectLegacyGameflowPhaseReadyCheck captures enum value "ReadyCheck"
	LolChampSelectLegacyGameflowPhaseReadyCheck LolChampSelectLegacyGameflowPhase = "ReadyCheck"

	// LolChampSelectLegacyGameflowPhaseChampSelect captures enum value "ChampSelect"
	LolChampSelectLegacyGameflowPhaseChampSelect LolChampSelectLegacyGameflowPhase = "ChampSelect"

	// LolChampSelectLegacyGameflowPhaseGameStart captures enum value "GameStart"
	LolChampSelectLegacyGameflowPhaseGameStart LolChampSelectLegacyGameflowPhase = "GameStart"

	// LolChampSelectLegacyGameflowPhaseFailedToLaunch captures enum value "FailedToLaunch"
	LolChampSelectLegacyGameflowPhaseFailedToLaunch LolChampSelectLegacyGameflowPhase = "FailedToLaunch"

	// LolChampSelectLegacyGameflowPhaseInProgress captures enum value "InProgress"
	LolChampSelectLegacyGameflowPhaseInProgress LolChampSelectLegacyGameflowPhase = "InProgress"

	// LolChampSelectLegacyGameflowPhaseReconnect captures enum value "Reconnect"
	LolChampSelectLegacyGameflowPhaseReconnect LolChampSelectLegacyGameflowPhase = "Reconnect"

	// LolChampSelectLegacyGameflowPhaseWaitingForStats captures enum value "WaitingForStats"
	LolChampSelectLegacyGameflowPhaseWaitingForStats LolChampSelectLegacyGameflowPhase = "WaitingForStats"

	// LolChampSelectLegacyGameflowPhasePreEndOfGame captures enum value "PreEndOfGame"
	LolChampSelectLegacyGameflowPhasePreEndOfGame LolChampSelectLegacyGameflowPhase = "PreEndOfGame"

	// LolChampSelectLegacyGameflowPhaseEndOfGame captures enum value "EndOfGame"
	LolChampSelectLegacyGameflowPhaseEndOfGame LolChampSelectLegacyGameflowPhase = "EndOfGame"

	// LolChampSelectLegacyGameflowPhaseTerminatedInError captures enum value "TerminatedInError"
	LolChampSelectLegacyGameflowPhaseTerminatedInError LolChampSelectLegacyGameflowPhase = "TerminatedInError"
)

// for schema
var lolChampSelectLegacyGameflowPhaseEnum []interface{}

func init() {
	var res []LolChampSelectLegacyGameflowPhase
	if err := json.Unmarshal([]byte(`["None","Lobby","Matchmaking","CheckedIntoTournament","ReadyCheck","ChampSelect","GameStart","FailedToLaunch","InProgress","Reconnect","WaitingForStats","PreEndOfGame","EndOfGame","TerminatedInError"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolChampSelectLegacyGameflowPhaseEnum = append(lolChampSelectLegacyGameflowPhaseEnum, v)
	}
}

func (m LolChampSelectLegacyGameflowPhase) validateLolChampSelectLegacyGameflowPhaseEnum(path, location string, value LolChampSelectLegacyGameflowPhase) error {
	if err := validate.Enum(path, location, value, lolChampSelectLegacyGameflowPhaseEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol champ select legacy gameflow phase
func (m LolChampSelectLegacyGameflowPhase) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolChampSelectLegacyGameflowPhaseEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
