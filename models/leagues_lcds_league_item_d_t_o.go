// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LeaguesLcdsLeagueItemDTO leagues lcds league item d t o
// swagger:model LeaguesLcdsLeagueItemDTO
type LeaguesLcdsLeagueItemDTO struct {

	// league points
	LeaguePoints int32 `json:"leaguePoints,omitempty"`

	// losses
	Losses int64 `json:"losses,omitempty"`

	// mini series
	MiniSeries *LeaguesLcdsMiniSeriesDTO `json:"miniSeries,omitempty"`

	// player or team Id
	PlayerOrTeamID string `json:"playerOrTeamId,omitempty"`

	// player or team name
	PlayerOrTeamName string `json:"playerOrTeamName,omitempty"`

	// provisional games remaining
	ProvisionalGamesRemaining int32 `json:"provisionalGamesRemaining,omitempty"`

	// queue type
	QueueType string `json:"queueType,omitempty"`

	// rank
	Rank string `json:"rank,omitempty"`

	// tier
	Tier string `json:"tier,omitempty"`

	// time until inactivity status changes
	TimeUntilInactivityStatusChanges int64 `json:"timeUntilInactivityStatusChanges,omitempty"`

	// total played
	TotalPlayed int64 `json:"totalPlayed,omitempty"`

	// wins
	Wins int64 `json:"wins,omitempty"`
}

// Validate validates this leagues lcds league item d t o
func (m *LeaguesLcdsLeagueItemDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateMiniSeries(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LeaguesLcdsLeagueItemDTO) validateMiniSeries(formats strfmt.Registry) error {

	if swag.IsZero(m.MiniSeries) { // not required
		return nil
	}

	if m.MiniSeries != nil {
		if err := m.MiniSeries.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("miniSeries")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LeaguesLcdsLeagueItemDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LeaguesLcdsLeagueItemDTO) UnmarshalBinary(b []byte) error {
	var res LeaguesLcdsLeagueItemDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
