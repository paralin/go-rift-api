// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolCareerStatsStatsQueryRequest lol career stats stats query request
// swagger:model LolCareerStatsStatsQueryRequest
type LolCareerStatsStatsQueryRequest struct {

	// champion Id
	ChampionID int32 `json:"championId,omitempty"`

	// position
	Position LolCareerStatsSummonersRiftPosition `json:"position,omitempty"`

	// queue type
	QueueType LolCareerStatsCareerStatsQueueType `json:"queueType,omitempty"`

	// rank tier
	RankTier LolCareerStatsRankedTier `json:"rankTier,omitempty"`

	// season
	Season int32 `json:"season,omitempty"`
}

// Validate validates this lol career stats stats query request
func (m *LolCareerStatsStatsQueryRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePosition(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQueueType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRankTier(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolCareerStatsStatsQueryRequest) validatePosition(formats strfmt.Registry) error {

	if swag.IsZero(m.Position) { // not required
		return nil
	}

	if err := m.Position.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("position")
		}
		return err
	}

	return nil
}

func (m *LolCareerStatsStatsQueryRequest) validateQueueType(formats strfmt.Registry) error {

	if swag.IsZero(m.QueueType) { // not required
		return nil
	}

	if err := m.QueueType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("queueType")
		}
		return err
	}

	return nil
}

func (m *LolCareerStatsStatsQueryRequest) validateRankTier(formats strfmt.Registry) error {

	if swag.IsZero(m.RankTier) { // not required
		return nil
	}

	if err := m.RankTier.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("rankTier")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolCareerStatsStatsQueryRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolCareerStatsStatsQueryRequest) UnmarshalBinary(b []byte) error {
	var res LolCareerStatsStatsQueryRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
