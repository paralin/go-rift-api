// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolRegaliaRegalia lol regalia regalia
// swagger:model LolRegaliaRegalia
type LolRegaliaRegalia struct {

	// banner type
	BannerType string `json:"bannerType,omitempty"`

	// crest type
	CrestType string `json:"crestType,omitempty"`

	// highest ranked entry
	HighestRankedEntry *LolRegaliaRegaliaRankedEntry `json:"highestRankedEntry,omitempty"`

	// last season highest rank
	LastSeasonHighestRank LolRegaliaLeagueTier `json:"lastSeasonHighestRank,omitempty"`

	// profile icon Id
	ProfileIconID int32 `json:"profileIconId,omitempty"`

	// summoner level
	SummonerLevel int32 `json:"summonerLevel,omitempty"`
}

// Validate validates this lol regalia regalia
func (m *LolRegaliaRegalia) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateHighestRankedEntry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateLastSeasonHighestRank(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolRegaliaRegalia) validateHighestRankedEntry(formats strfmt.Registry) error {

	if swag.IsZero(m.HighestRankedEntry) { // not required
		return nil
	}

	if m.HighestRankedEntry != nil {
		if err := m.HighestRankedEntry.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("highestRankedEntry")
			}
			return err
		}
	}

	return nil
}

func (m *LolRegaliaRegalia) validateLastSeasonHighestRank(formats strfmt.Registry) error {

	if swag.IsZero(m.LastSeasonHighestRank) { // not required
		return nil
	}

	if err := m.LastSeasonHighestRank.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("lastSeasonHighestRank")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolRegaliaRegalia) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolRegaliaRegalia) UnmarshalBinary(b []byte) error {
	var res LolRegaliaRegalia
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
