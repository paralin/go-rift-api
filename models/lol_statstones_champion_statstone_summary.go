// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolStatstonesChampionStatstoneSummary lol statstones champion statstone summary
// swagger:model LolStatstonesChampionStatstoneSummary
type LolStatstonesChampionStatstoneSummary struct {

	// champion Id
	ChampionID int32 `json:"championId,omitempty"`

	// milestones passed
	MilestonesPassed int32 `json:"milestonesPassed,omitempty"`

	// sets
	Sets []*LolStatstonesChampionStatstoneSetSummary `json:"sets"`

	// stones available
	StonesAvailable int32 `json:"stonesAvailable,omitempty"`

	// stones illuminated
	StonesIlluminated int32 `json:"stonesIlluminated,omitempty"`

	// stones owned
	StonesOwned int32 `json:"stonesOwned,omitempty"`
}

// Validate validates this lol statstones champion statstone summary
func (m *LolStatstonesChampionStatstoneSummary) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateSets(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolStatstonesChampionStatstoneSummary) validateSets(formats strfmt.Registry) error {

	if swag.IsZero(m.Sets) { // not required
		return nil
	}

	for i := 0; i < len(m.Sets); i++ {
		if swag.IsZero(m.Sets[i]) { // not required
			continue
		}

		if m.Sets[i] != nil {
			if err := m.Sets[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("sets" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolStatstonesChampionStatstoneSummary) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolStatstonesChampionStatstoneSummary) UnmarshalBinary(b []byte) error {
	var res LolStatstonesChampionStatstoneSummary
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
