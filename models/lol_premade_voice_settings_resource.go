// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolPremadeVoiceSettingsResource lol premade voice settings resource
// swagger:model LolPremadeVoiceSettingsResource
type LolPremadeVoiceSettingsResource struct {

	// auto join
	AutoJoin bool `json:"autoJoin,omitempty"`

	// current capture device handle
	CurrentCaptureDeviceHandle string `json:"currentCaptureDeviceHandle,omitempty"`

	// input mode
	InputMode LolPremadeVoiceInputMode `json:"inputMode,omitempty"`

	// local mic muted
	LocalMicMuted bool `json:"localMicMuted,omitempty"`

	// loopback enabled
	LoopbackEnabled bool `json:"loopbackEnabled,omitempty"`

	// mic level
	MicLevel int32 `json:"micLevel,omitempty"`

	// mute on connect
	MuteOnConnect bool `json:"muteOnConnect,omitempty"`

	// ptt active
	PttActive bool `json:"pttActive,omitempty"`

	// ptt key
	PttKey string `json:"pttKey,omitempty"`

	// vad active
	VadActive bool `json:"vadActive,omitempty"`

	// vad hangover time
	VadHangoverTime int32 `json:"vadHangoverTime,omitempty"`

	// vad sensitivity
	VadSensitivity int32 `json:"vadSensitivity,omitempty"`
}

// Validate validates this lol premade voice settings resource
func (m *LolPremadeVoiceSettingsResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateInputMode(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolPremadeVoiceSettingsResource) validateInputMode(formats strfmt.Registry) error {

	if swag.IsZero(m.InputMode) { // not required
		return nil
	}

	if err := m.InputMode.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("inputMode")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolPremadeVoiceSettingsResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolPremadeVoiceSettingsResource) UnmarshalBinary(b []byte) error {
	var res LolPremadeVoiceSettingsResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
