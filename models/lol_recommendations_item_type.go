// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolRecommendationsItemType lol recommendations item type
// swagger:model LolRecommendationsItemType
type LolRecommendationsItemType string

const (

	// LolRecommendationsItemTypeCHAMPION captures enum value "CHAMPION"
	LolRecommendationsItemTypeCHAMPION LolRecommendationsItemType = "CHAMPION"

	// LolRecommendationsItemTypeCHAMPIONSKIN captures enum value "CHAMPION_SKIN"
	LolRecommendationsItemTypeCHAMPIONSKIN LolRecommendationsItemType = "CHAMPION_SKIN"

	// LolRecommendationsItemTypeBUNDLES captures enum value "BUNDLES"
	LolRecommendationsItemTypeBUNDLES LolRecommendationsItemType = "BUNDLES"

	// LolRecommendationsItemTypeHEXTECHCRAFTING captures enum value "HEXTECH_CRAFTING"
	LolRecommendationsItemTypeHEXTECHCRAFTING LolRecommendationsItemType = "HEXTECH_CRAFTING"

	// LolRecommendationsItemTypeSUMMONERICON captures enum value "SUMMONER_ICON"
	LolRecommendationsItemTypeSUMMONERICON LolRecommendationsItemType = "SUMMONER_ICON"

	// LolRecommendationsItemTypeWARDSKIN captures enum value "WARD_SKIN"
	LolRecommendationsItemTypeWARDSKIN LolRecommendationsItemType = "WARD_SKIN"

	// LolRecommendationsItemTypeEMOTE captures enum value "EMOTE"
	LolRecommendationsItemTypeEMOTE LolRecommendationsItemType = "EMOTE"
)

// for schema
var lolRecommendationsItemTypeEnum []interface{}

func init() {
	var res []LolRecommendationsItemType
	if err := json.Unmarshal([]byte(`["CHAMPION","CHAMPION_SKIN","BUNDLES","HEXTECH_CRAFTING","SUMMONER_ICON","WARD_SKIN","EMOTE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolRecommendationsItemTypeEnum = append(lolRecommendationsItemTypeEnum, v)
	}
}

func (m LolRecommendationsItemType) validateLolRecommendationsItemTypeEnum(path, location string, value LolRecommendationsItemType) error {
	if err := validate.Enum(path, location, value, lolRecommendationsItemTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol recommendations item type
func (m LolRecommendationsItemType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolRecommendationsItemTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
