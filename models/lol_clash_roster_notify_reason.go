// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolClashRosterNotifyReason lol clash roster notify reason
// swagger:model LolClashRosterNotifyReason
type LolClashRosterNotifyReason string

const (

	// LolClashRosterNotifyReasonROSTERSETTICKET captures enum value "ROSTER_SET_TICKET"
	LolClashRosterNotifyReasonROSTERSETTICKET LolClashRosterNotifyReason = "ROSTER_SET_TICKET"

	// LolClashRosterNotifyReasonROSTEROFFERTICKET captures enum value "ROSTER_OFFER_TICKET"
	LolClashRosterNotifyReasonROSTEROFFERTICKET LolClashRosterNotifyReason = "ROSTER_OFFER_TICKET"

	// LolClashRosterNotifyReasonROSTERACCEPTTICKET captures enum value "ROSTER_ACCEPT_TICKET"
	LolClashRosterNotifyReasonROSTERACCEPTTICKET LolClashRosterNotifyReason = "ROSTER_ACCEPT_TICKET"

	// LolClashRosterNotifyReasonROSTERDECLINETICKET captures enum value "ROSTER_DECLINE_TICKET"
	LolClashRosterNotifyReasonROSTERDECLINETICKET LolClashRosterNotifyReason = "ROSTER_DECLINE_TICKET"

	// LolClashRosterNotifyReasonROSTERREVOKEDTICKET captures enum value "ROSTER_REVOKED_TICKET"
	LolClashRosterNotifyReasonROSTERREVOKEDTICKET LolClashRosterNotifyReason = "ROSTER_REVOKED_TICKET"

	// LolClashRosterNotifyReasonBYEAUTOWIN captures enum value "BYE_AUTO_WIN"
	LolClashRosterNotifyReasonBYEAUTOWIN LolClashRosterNotifyReason = "BYE_AUTO_WIN"

	// LolClashRosterNotifyReasonBRACKETREADY captures enum value "BRACKET_READY"
	LolClashRosterNotifyReasonBRACKETREADY LolClashRosterNotifyReason = "BRACKET_READY"

	// LolClashRosterNotifyReasonCHANGEPOSITION captures enum value "CHANGE_POSITION"
	LolClashRosterNotifyReasonCHANGEPOSITION LolClashRosterNotifyReason = "CHANGE_POSITION"

	// LolClashRosterNotifyReasonEOGPLAYERUPDATE captures enum value "EOG_PLAYER_UPDATE"
	LolClashRosterNotifyReasonEOGPLAYERUPDATE LolClashRosterNotifyReason = "EOG_PLAYER_UPDATE"

	// LolClashRosterNotifyReasonREGISTERED captures enum value "REGISTERED"
	LolClashRosterNotifyReasonREGISTERED LolClashRosterNotifyReason = "REGISTERED"

	// LolClashRosterNotifyReasonRESTRICTIONAUTOWIN captures enum value "RESTRICTION_AUTO_WIN"
	LolClashRosterNotifyReasonRESTRICTIONAUTOWIN LolClashRosterNotifyReason = "RESTRICTION_AUTO_WIN"

	// LolClashRosterNotifyReasonPHASEUNREADY captures enum value "PHASE_UNREADY"
	LolClashRosterNotifyReasonPHASEUNREADY LolClashRosterNotifyReason = "PHASE_UNREADY"

	// LolClashRosterNotifyReasonPHASEREADY captures enum value "PHASE_READY"
	LolClashRosterNotifyReasonPHASEREADY LolClashRosterNotifyReason = "PHASE_READY"

	// LolClashRosterNotifyReasonPHASECHECKIN captures enum value "PHASE_CHECKIN"
	LolClashRosterNotifyReasonPHASECHECKIN LolClashRosterNotifyReason = "PHASE_CHECKIN"

	// LolClashRosterNotifyReasonPHASEBACKOUT captures enum value "PHASE_BACKOUT"
	LolClashRosterNotifyReasonPHASEBACKOUT LolClashRosterNotifyReason = "PHASE_BACKOUT"

	// LolClashRosterNotifyReasonPERIODCANCEL captures enum value "PERIOD_CANCEL"
	LolClashRosterNotifyReasonPERIODCANCEL LolClashRosterNotifyReason = "PERIOD_CANCEL"

	// LolClashRosterNotifyReasonPERIODSPLIT captures enum value "PERIOD_SPLIT"
	LolClashRosterNotifyReasonPERIODSPLIT LolClashRosterNotifyReason = "PERIOD_SPLIT"

	// LolClashRosterNotifyReasonGAMECOMPLETED captures enum value "GAME_COMPLETED"
	LolClashRosterNotifyReasonGAMECOMPLETED LolClashRosterNotifyReason = "GAME_COMPLETED"

	// LolClashRosterNotifyReasonGAMESCHEDULED captures enum value "GAME_SCHEDULED"
	LolClashRosterNotifyReasonGAMESCHEDULED LolClashRosterNotifyReason = "GAME_SCHEDULED"

	// LolClashRosterNotifyReasonGAMESTARTED captures enum value "GAME_STARTED"
	LolClashRosterNotifyReasonGAMESTARTED LolClashRosterNotifyReason = "GAME_STARTED"

	// LolClashRosterNotifyReasonGAMESTARTEDERROR captures enum value "GAME_STARTED_ERROR"
	LolClashRosterNotifyReasonGAMESTARTEDERROR LolClashRosterNotifyReason = "GAME_STARTED_ERROR"

	// LolClashRosterNotifyReasonGAMEENDERROR captures enum value "GAME_END_ERROR"
	LolClashRosterNotifyReasonGAMEENDERROR LolClashRosterNotifyReason = "GAME_END_ERROR"

	// LolClashRosterNotifyReasonQUEUEDODGE captures enum value "QUEUE_DODGE"
	LolClashRosterNotifyReasonQUEUEDODGE LolClashRosterNotifyReason = "QUEUE_DODGE"

	// LolClashRosterNotifyReasonLOSERROUNDCOMPLETE captures enum value "LOSER_ROUND_COMPLETE"
	LolClashRosterNotifyReasonLOSERROUNDCOMPLETE LolClashRosterNotifyReason = "LOSER_ROUND_COMPLETE"

	// LolClashRosterNotifyReasonOWNERTRANSFER captures enum value "OWNER_TRANSFER"
	LolClashRosterNotifyReasonOWNERTRANSFER LolClashRosterNotifyReason = "OWNER_TRANSFER"

	// LolClashRosterNotifyReasonSUBINVITE captures enum value "SUB_INVITE"
	LolClashRosterNotifyReasonSUBINVITE LolClashRosterNotifyReason = "SUB_INVITE"

	// LolClashRosterNotifyReasonSUBACCEPT captures enum value "SUB_ACCEPT"
	LolClashRosterNotifyReasonSUBACCEPT LolClashRosterNotifyReason = "SUB_ACCEPT"

	// LolClashRosterNotifyReasonSUBDECLINE captures enum value "SUB_DECLINE"
	LolClashRosterNotifyReasonSUBDECLINE LolClashRosterNotifyReason = "SUB_DECLINE"

	// LolClashRosterNotifyReasonSUBREVOKE captures enum value "SUB_REVOKE"
	LolClashRosterNotifyReasonSUBREVOKE LolClashRosterNotifyReason = "SUB_REVOKE"

	// LolClashRosterNotifyReasonSUBSUGGEST captures enum value "SUB_SUGGEST"
	LolClashRosterNotifyReasonSUBSUGGEST LolClashRosterNotifyReason = "SUB_SUGGEST"

	// LolClashRosterNotifyReasonSUBACCEPTSUGGEST captures enum value "SUB_ACCEPTSUGGEST"
	LolClashRosterNotifyReasonSUBACCEPTSUGGEST LolClashRosterNotifyReason = "SUB_ACCEPTSUGGEST"

	// LolClashRosterNotifyReasonSUBDECLINESUGGEST captures enum value "SUB_DECLINESUGGEST"
	LolClashRosterNotifyReasonSUBDECLINESUGGEST LolClashRosterNotifyReason = "SUB_DECLINESUGGEST"

	// LolClashRosterNotifyReasonSUBRECLAIM captures enum value "SUB_RECLAIM"
	LolClashRosterNotifyReasonSUBRECLAIM LolClashRosterNotifyReason = "SUB_RECLAIM"

	// LolClashRosterNotifyReasonSUBLEAVE captures enum value "SUB_LEAVE"
	LolClashRosterNotifyReasonSUBLEAVE LolClashRosterNotifyReason = "SUB_LEAVE"

	// LolClashRosterNotifyReasonMEMBERSUBBED captures enum value "MEMBER_SUBBED"
	LolClashRosterNotifyReasonMEMBERSUBBED LolClashRosterNotifyReason = "MEMBER_SUBBED"

	// LolClashRosterNotifyReasonMEMBERSUBREVOKE captures enum value "MEMBER_SUB_REVOKE"
	LolClashRosterNotifyReasonMEMBERSUBREVOKE LolClashRosterNotifyReason = "MEMBER_SUB_REVOKE"

	// LolClashRosterNotifyReasonMEMBERSUBRECLAIM captures enum value "MEMBER_SUB_RECLAIM"
	LolClashRosterNotifyReasonMEMBERSUBRECLAIM LolClashRosterNotifyReason = "MEMBER_SUB_RECLAIM"

	// LolClashRosterNotifyReasonVOTEWITHDRAWUPDATE captures enum value "VOTE_WITHDRAW_UPDATE"
	LolClashRosterNotifyReasonVOTEWITHDRAWUPDATE LolClashRosterNotifyReason = "VOTE_WITHDRAW_UPDATE"

	// LolClashRosterNotifyReasonVOTEWITHDRAWDISMISS captures enum value "VOTE_WITHDRAW_DISMISS"
	LolClashRosterNotifyReasonVOTEWITHDRAWDISMISS LolClashRosterNotifyReason = "VOTE_WITHDRAW_DISMISS"

	// LolClashRosterNotifyReasonWITHDRAW captures enum value "WITHDRAW"
	LolClashRosterNotifyReasonWITHDRAW LolClashRosterNotifyReason = "WITHDRAW"

	// LolClashRosterNotifyReasonWINNERROUNDCOMPLETE captures enum value "WINNER_ROUND_COMPLETE"
	LolClashRosterNotifyReasonWINNERROUNDCOMPLETE LolClashRosterNotifyReason = "WINNER_ROUND_COMPLETE"

	// LolClashRosterNotifyReasonNOSHOWPING captures enum value "NO_SHOW_PING"
	LolClashRosterNotifyReasonNOSHOWPING LolClashRosterNotifyReason = "NO_SHOW_PING"

	// LolClashRosterNotifyReasonTIERCHANGED captures enum value "TIER_CHANGED"
	LolClashRosterNotifyReasonTIERCHANGED LolClashRosterNotifyReason = "TIER_CHANGED"

	// LolClashRosterNotifyReasonBRACKETROSTERREMOVED captures enum value "BRACKET_ROSTER_REMOVED"
	LolClashRosterNotifyReasonBRACKETROSTERREMOVED LolClashRosterNotifyReason = "BRACKET_ROSTER_REMOVED"

	// LolClashRosterNotifyReasonBRACKETROSTERREPLACED captures enum value "BRACKET_ROSTER_REPLACED"
	LolClashRosterNotifyReasonBRACKETROSTERREPLACED LolClashRosterNotifyReason = "BRACKET_ROSTER_REPLACED"

	// LolClashRosterNotifyReasonCANNOTFINDMATCH captures enum value "CANNOT_FIND_MATCH"
	LolClashRosterNotifyReasonCANNOTFINDMATCH LolClashRosterNotifyReason = "CANNOT_FIND_MATCH"

	// LolClashRosterNotifyReasonBANNEDSMURF captures enum value "BANNED_SMURF"
	LolClashRosterNotifyReasonBANNEDSMURF LolClashRosterNotifyReason = "BANNED_SMURF"

	// LolClashRosterNotifyReasonBANNEDSMURFTEAMMATE captures enum value "BANNED_SMURF_TEAMMATE"
	LolClashRosterNotifyReasonBANNEDSMURFTEAMMATE LolClashRosterNotifyReason = "BANNED_SMURF_TEAMMATE"

	// LolClashRosterNotifyReasonBANNEDSMURFOPPONENT captures enum value "BANNED_SMURF_OPPONENT"
	LolClashRosterNotifyReasonBANNEDSMURFOPPONENT LolClashRosterNotifyReason = "BANNED_SMURF_OPPONENT"

	// LolClashRosterNotifyReasonTICKETCHARGED captures enum value "TICKET_CHARGED"
	LolClashRosterNotifyReasonTICKETCHARGED LolClashRosterNotifyReason = "TICKET_CHARGED"

	// LolClashRosterNotifyReasonTICKETREFUNDED captures enum value "TICKET_REFUNDED"
	LolClashRosterNotifyReasonTICKETREFUNDED LolClashRosterNotifyReason = "TICKET_REFUNDED"

	// LolClashRosterNotifyReasonSUBINVITESELF captures enum value "SUB_INVITE_SELF"
	LolClashRosterNotifyReasonSUBINVITESELF LolClashRosterNotifyReason = "SUB_INVITE_SELF"

	// LolClashRosterNotifyReasonGAMESTARTRETRY captures enum value "GAME_START_RETRY"
	LolClashRosterNotifyReasonGAMESTARTRETRY LolClashRosterNotifyReason = "GAME_START_RETRY"

	// LolClashRosterNotifyReasonGAMESTARTRETRYSUMMONERS captures enum value "GAME_START_RETRY_SUMMONERS"
	LolClashRosterNotifyReasonGAMESTARTRETRYSUMMONERS LolClashRosterNotifyReason = "GAME_START_RETRY_SUMMONERS"

	// LolClashRosterNotifyReasonGAMESTARTRETRYOPPONENT captures enum value "GAME_START_RETRY_OPPONENT"
	LolClashRosterNotifyReasonGAMESTARTRETRYOPPONENT LolClashRosterNotifyReason = "GAME_START_RETRY_OPPONENT"

	// LolClashRosterNotifyReasonGAMESTARTFAILED captures enum value "GAME_START_FAILED"
	LolClashRosterNotifyReasonGAMESTARTFAILED LolClashRosterNotifyReason = "GAME_START_FAILED"

	// LolClashRosterNotifyReasonGAMESTARTFAILEDSUMMONERS captures enum value "GAME_START_FAILED_SUMMONERS"
	LolClashRosterNotifyReasonGAMESTARTFAILEDSUMMONERS LolClashRosterNotifyReason = "GAME_START_FAILED_SUMMONERS"

	// LolClashRosterNotifyReasonGAMESTARTFAILEDOPPONENT captures enum value "GAME_START_FAILED_OPPONENT"
	LolClashRosterNotifyReasonGAMESTARTFAILEDOPPONENT LolClashRosterNotifyReason = "GAME_START_FAILED_OPPONENT"

	// LolClashRosterNotifyReasonGAMERESCHEDULED captures enum value "GAME_RESCHEDULED"
	LolClashRosterNotifyReasonGAMERESCHEDULED LolClashRosterNotifyReason = "GAME_RESCHEDULED"
)

// for schema
var lolClashRosterNotifyReasonEnum []interface{}

func init() {
	var res []LolClashRosterNotifyReason
	if err := json.Unmarshal([]byte(`["ROSTER_SET_TICKET","ROSTER_OFFER_TICKET","ROSTER_ACCEPT_TICKET","ROSTER_DECLINE_TICKET","ROSTER_REVOKED_TICKET","BYE_AUTO_WIN","BRACKET_READY","CHANGE_POSITION","EOG_PLAYER_UPDATE","REGISTERED","RESTRICTION_AUTO_WIN","PHASE_UNREADY","PHASE_READY","PHASE_CHECKIN","PHASE_BACKOUT","PERIOD_CANCEL","PERIOD_SPLIT","GAME_COMPLETED","GAME_SCHEDULED","GAME_STARTED","GAME_STARTED_ERROR","GAME_END_ERROR","QUEUE_DODGE","LOSER_ROUND_COMPLETE","OWNER_TRANSFER","SUB_INVITE","SUB_ACCEPT","SUB_DECLINE","SUB_REVOKE","SUB_SUGGEST","SUB_ACCEPTSUGGEST","SUB_DECLINESUGGEST","SUB_RECLAIM","SUB_LEAVE","MEMBER_SUBBED","MEMBER_SUB_REVOKE","MEMBER_SUB_RECLAIM","VOTE_WITHDRAW_UPDATE","VOTE_WITHDRAW_DISMISS","WITHDRAW","WINNER_ROUND_COMPLETE","NO_SHOW_PING","TIER_CHANGED","BRACKET_ROSTER_REMOVED","BRACKET_ROSTER_REPLACED","CANNOT_FIND_MATCH","BANNED_SMURF","BANNED_SMURF_TEAMMATE","BANNED_SMURF_OPPONENT","TICKET_CHARGED","TICKET_REFUNDED","SUB_INVITE_SELF","GAME_START_RETRY","GAME_START_RETRY_SUMMONERS","GAME_START_RETRY_OPPONENT","GAME_START_FAILED","GAME_START_FAILED_SUMMONERS","GAME_START_FAILED_OPPONENT","GAME_RESCHEDULED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolClashRosterNotifyReasonEnum = append(lolClashRosterNotifyReasonEnum, v)
	}
}

func (m LolClashRosterNotifyReason) validateLolClashRosterNotifyReasonEnum(path, location string, value LolClashRosterNotifyReason) error {
	if err := validate.Enum(path, location, value, lolClashRosterNotifyReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol clash roster notify reason
func (m LolClashRosterNotifyReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolClashRosterNotifyReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
