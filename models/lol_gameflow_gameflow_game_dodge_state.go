// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolGameflowGameflowGameDodgeState lol gameflow gameflow game dodge state
// swagger:model LolGameflowGameflowGameDodgeState
type LolGameflowGameflowGameDodgeState string

const (

	// LolGameflowGameflowGameDodgeStateInvalid captures enum value "Invalid"
	LolGameflowGameflowGameDodgeStateInvalid LolGameflowGameflowGameDodgeState = "Invalid"

	// LolGameflowGameflowGameDodgeStatePartyDodged captures enum value "PartyDodged"
	LolGameflowGameflowGameDodgeStatePartyDodged LolGameflowGameflowGameDodgeState = "PartyDodged"

	// LolGameflowGameflowGameDodgeStateStrangerDodged captures enum value "StrangerDodged"
	LolGameflowGameflowGameDodgeStateStrangerDodged LolGameflowGameflowGameDodgeState = "StrangerDodged"

	// LolGameflowGameflowGameDodgeStateTournamentDodged captures enum value "TournamentDodged"
	LolGameflowGameflowGameDodgeStateTournamentDodged LolGameflowGameflowGameDodgeState = "TournamentDodged"
)

// for schema
var lolGameflowGameflowGameDodgeStateEnum []interface{}

func init() {
	var res []LolGameflowGameflowGameDodgeState
	if err := json.Unmarshal([]byte(`["Invalid","PartyDodged","StrangerDodged","TournamentDodged"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolGameflowGameflowGameDodgeStateEnum = append(lolGameflowGameflowGameDodgeStateEnum, v)
	}
}

func (m LolGameflowGameflowGameDodgeState) validateLolGameflowGameflowGameDodgeStateEnum(path, location string, value LolGameflowGameflowGameDodgeState) error {
	if err := validate.Enum(path, location, value, lolGameflowGameflowGameDodgeStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol gameflow gameflow game dodge state
func (m LolGameflowGameflowGameDodgeState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolGameflowGameflowGameDodgeStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
