// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolLobbyPlayerDto lol lobby player dto
// swagger:model LolLobbyPlayerDto
type LolLobbyPlayerDto struct {

	// account Id
	AccountID int64 `json:"accountId,omitempty"`

	// created at
	CreatedAt int64 `json:"createdAt,omitempty"`

	// current party
	CurrentParty *LolLobbyPartyDto `json:"currentParty,omitempty"`

	// eligibility hash
	EligibilityHash int64 `json:"eligibilityHash,omitempty"`

	// parties
	Parties []*LolLobbyPartyMemberDto `json:"parties"`

	// platform Id
	PlatformID string `json:"platformId,omitempty"`

	// puuid
	Puuid string `json:"puuid,omitempty"`

	// registration
	Registration *LolLobbyRegistrationCredentials `json:"registration,omitempty"`

	// server utc millis
	ServerUtcMillis int64 `json:"serverUtcMillis,omitempty"`

	// summoner Id
	SummonerID int64 `json:"summonerId,omitempty"`

	// version
	Version int64 `json:"version,omitempty"`
}

// Validate validates this lol lobby player dto
func (m *LolLobbyPlayerDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCurrentParty(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateParties(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRegistration(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolLobbyPlayerDto) validateCurrentParty(formats strfmt.Registry) error {

	if swag.IsZero(m.CurrentParty) { // not required
		return nil
	}

	if m.CurrentParty != nil {
		if err := m.CurrentParty.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("currentParty")
			}
			return err
		}
	}

	return nil
}

func (m *LolLobbyPlayerDto) validateParties(formats strfmt.Registry) error {

	if swag.IsZero(m.Parties) { // not required
		return nil
	}

	for i := 0; i < len(m.Parties); i++ {
		if swag.IsZero(m.Parties[i]) { // not required
			continue
		}

		if m.Parties[i] != nil {
			if err := m.Parties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("parties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolLobbyPlayerDto) validateRegistration(formats strfmt.Registry) error {

	if swag.IsZero(m.Registration) { // not required
		return nil
	}

	if m.Registration != nil {
		if err := m.Registration.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("registration")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolLobbyPlayerDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolLobbyPlayerDto) UnmarshalBinary(b []byte) error {
	var res LolLobbyPlayerDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
