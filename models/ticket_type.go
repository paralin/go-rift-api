// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// TicketType ticket type
// swagger:model TicketType
type TicketType string

const (

	// TicketTypeBASIC captures enum value "BASIC"
	TicketTypeBASIC TicketType = "BASIC"

	// TicketTypePREMIUM captures enum value "PREMIUM"
	TicketTypePREMIUM TicketType = "PREMIUM"
)

// for schema
var ticketTypeEnum []interface{}

func init() {
	var res []TicketType
	if err := json.Unmarshal([]byte(`["BASIC","PREMIUM"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ticketTypeEnum = append(ticketTypeEnum, v)
	}
}

func (m TicketType) validateTicketTypeEnum(path, location string, value TicketType) error {
	if err := validate.Enum(path, location, value, ticketTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this ticket type
func (m TicketType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateTicketTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
