// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolNpeTutorialPathCollectionsChampion lol npe tutorial path collections champion
// swagger:model LolNpeTutorialPathCollectionsChampion
type LolNpeTutorialPathCollectionsChampion struct {

	// alias
	Alias string `json:"alias,omitempty"`

	// ban vo path
	BanVoPath string `json:"banVoPath,omitempty"`

	// choose vo path
	ChooseVoPath string `json:"chooseVoPath,omitempty"`

	// id
	ID int32 `json:"id,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// passive
	Passive *LolNpeTutorialPathCollectionsChampionSpell `json:"passive,omitempty"`

	// roles
	Roles []string `json:"roles"`

	// spells
	Spells []*LolNpeTutorialPathCollectionsChampionSpell `json:"spells"`

	// square portrait path
	SquarePortraitPath string `json:"squarePortraitPath,omitempty"`

	// stinger sfx path
	StingerSfxPath string `json:"stingerSfxPath,omitempty"`
}

// Validate validates this lol npe tutorial path collections champion
func (m *LolNpeTutorialPathCollectionsChampion) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePassive(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSpells(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolNpeTutorialPathCollectionsChampion) validatePassive(formats strfmt.Registry) error {

	if swag.IsZero(m.Passive) { // not required
		return nil
	}

	if m.Passive != nil {
		if err := m.Passive.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("passive")
			}
			return err
		}
	}

	return nil
}

func (m *LolNpeTutorialPathCollectionsChampion) validateSpells(formats strfmt.Registry) error {

	if swag.IsZero(m.Spells) { // not required
		return nil
	}

	for i := 0; i < len(m.Spells); i++ {
		if swag.IsZero(m.Spells[i]) { // not required
			continue
		}

		if m.Spells[i] != nil {
			if err := m.Spells[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("spells" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolNpeTutorialPathCollectionsChampion) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolNpeTutorialPathCollectionsChampion) UnmarshalBinary(b []byte) error {
	var res LolNpeTutorialPathCollectionsChampion
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
