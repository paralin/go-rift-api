// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ClientConfigDepInjectorEntitlementsUpdateType client config dep injector entitlements update type
// swagger:model ClientConfigDepInjectorEntitlementsUpdateType
type ClientConfigDepInjectorEntitlementsUpdateType string

const (

	// ClientConfigDepInjectorEntitlementsUpdateTypeCreate captures enum value "Create"
	ClientConfigDepInjectorEntitlementsUpdateTypeCreate ClientConfigDepInjectorEntitlementsUpdateType = "Create"

	// ClientConfigDepInjectorEntitlementsUpdateTypeUpdate captures enum value "Update"
	ClientConfigDepInjectorEntitlementsUpdateTypeUpdate ClientConfigDepInjectorEntitlementsUpdateType = "Update"

	// ClientConfigDepInjectorEntitlementsUpdateTypeDelete captures enum value "Delete"
	ClientConfigDepInjectorEntitlementsUpdateTypeDelete ClientConfigDepInjectorEntitlementsUpdateType = "Delete"
)

// for schema
var clientConfigDepInjectorEntitlementsUpdateTypeEnum []interface{}

func init() {
	var res []ClientConfigDepInjectorEntitlementsUpdateType
	if err := json.Unmarshal([]byte(`["Create","Update","Delete"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clientConfigDepInjectorEntitlementsUpdateTypeEnum = append(clientConfigDepInjectorEntitlementsUpdateTypeEnum, v)
	}
}

func (m ClientConfigDepInjectorEntitlementsUpdateType) validateClientConfigDepInjectorEntitlementsUpdateTypeEnum(path, location string, value ClientConfigDepInjectorEntitlementsUpdateType) error {
	if err := validate.Enum(path, location, value, clientConfigDepInjectorEntitlementsUpdateTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this client config dep injector entitlements update type
func (m ClientConfigDepInjectorEntitlementsUpdateType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClientConfigDepInjectorEntitlementsUpdateTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
