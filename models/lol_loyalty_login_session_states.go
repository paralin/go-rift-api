// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolLoyaltyLoginSessionStates lol loyalty login session states
// swagger:model LolLoyaltyLoginSessionStates
type LolLoyaltyLoginSessionStates string

const (

	// LolLoyaltyLoginSessionStatesINPROGRESS captures enum value "IN_PROGRESS"
	LolLoyaltyLoginSessionStatesINPROGRESS LolLoyaltyLoginSessionStates = "IN_PROGRESS"

	// LolLoyaltyLoginSessionStatesSUCCEEDED captures enum value "SUCCEEDED"
	LolLoyaltyLoginSessionStatesSUCCEEDED LolLoyaltyLoginSessionStates = "SUCCEEDED"

	// LolLoyaltyLoginSessionStatesLOGGINGOUT captures enum value "LOGGING_OUT"
	LolLoyaltyLoginSessionStatesLOGGINGOUT LolLoyaltyLoginSessionStates = "LOGGING_OUT"

	// LolLoyaltyLoginSessionStatesERROR captures enum value "ERROR"
	LolLoyaltyLoginSessionStatesERROR LolLoyaltyLoginSessionStates = "ERROR"
)

// for schema
var lolLoyaltyLoginSessionStatesEnum []interface{}

func init() {
	var res []LolLoyaltyLoginSessionStates
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","SUCCEEDED","LOGGING_OUT","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolLoyaltyLoginSessionStatesEnum = append(lolLoyaltyLoginSessionStatesEnum, v)
	}
}

func (m LolLoyaltyLoginSessionStates) validateLolLoyaltyLoginSessionStatesEnum(path, location string, value LolLoyaltyLoginSessionStates) error {
	if err := validate.Enum(path, location, value, lolLoyaltyLoginSessionStatesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol loyalty login session states
func (m LolLoyaltyLoginSessionStates) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolLoyaltyLoginSessionStatesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
