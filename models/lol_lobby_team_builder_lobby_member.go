// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolLobbyTeamBuilderLobbyMember lol lobby team builder lobby member
// swagger:model LolLobbyTeamBuilderLobbyMember
type LolLobbyTeamBuilderLobbyMember struct {

	// auto fill eligible
	AutoFillEligible bool `json:"autoFillEligible,omitempty"`

	// auto fill protected for promos
	AutoFillProtectedForPromos bool `json:"autoFillProtectedForPromos,omitempty"`

	// auto fill protected for soloing
	AutoFillProtectedForSoloing bool `json:"autoFillProtectedForSoloing,omitempty"`

	// auto fill protected for streaking
	AutoFillProtectedForStreaking bool `json:"autoFillProtectedForStreaking,omitempty"`

	// can invite others
	CanInviteOthers bool `json:"canInviteOthers,omitempty"`

	// excluded position preference
	ExcludedPositionPreference string `json:"excludedPositionPreference,omitempty"`

	// id
	ID int64 `json:"id,omitempty"`

	// is owner
	IsOwner bool `json:"isOwner,omitempty"`

	// position preferences
	PositionPreferences *LolLobbyTeamBuilderLobbyPositionPreferences `json:"positionPreferences,omitempty"`

	// show position excluder
	ShowPositionExcluder bool `json:"showPositionExcluder,omitempty"`
}

// Validate validates this lol lobby team builder lobby member
func (m *LolLobbyTeamBuilderLobbyMember) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePositionPreferences(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolLobbyTeamBuilderLobbyMember) validatePositionPreferences(formats strfmt.Registry) error {

	if swag.IsZero(m.PositionPreferences) { // not required
		return nil
	}

	if m.PositionPreferences != nil {
		if err := m.PositionPreferences.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("positionPreferences")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolLobbyTeamBuilderLobbyMember) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolLobbyTeamBuilderLobbyMember) UnmarshalBinary(b []byte) error {
	var res LolLobbyTeamBuilderLobbyMember
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
