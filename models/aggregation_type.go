// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// AggregationType aggregation type
// swagger:model AggregationType
type AggregationType string

const (

	// AggregationTypeNone captures enum value "none"
	AggregationTypeNone AggregationType = "none"

	// AggregationTypeSum captures enum value "sum"
	AggregationTypeSum AggregationType = "sum"

	// AggregationTypeAverage captures enum value "average"
	AggregationTypeAverage AggregationType = "average"
)

// for schema
var aggregationTypeEnum []interface{}

func init() {
	var res []AggregationType
	if err := json.Unmarshal([]byte(`["none","sum","average"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		aggregationTypeEnum = append(aggregationTypeEnum, v)
	}
}

func (m AggregationType) validateAggregationTypeEnum(path, location string, value AggregationType) error {
	if err := validate.Enum(path, location, value, aggregationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this aggregation type
func (m AggregationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateAggregationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
