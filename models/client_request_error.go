// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ClientRequestError client request error
// swagger:model ClientRequestError
type ClientRequestError string

const (

	// ClientRequestErrorALREADYINGAME captures enum value "ALREADY_IN_GAME"
	ClientRequestErrorALREADYINGAME ClientRequestError = "ALREADY_IN_GAME"

	// ClientRequestErrorALREADYMEMBER captures enum value "ALREADY_MEMBER"
	ClientRequestErrorALREADYMEMBER ClientRequestError = "ALREADY_MEMBER"

	// ClientRequestErrorALREADYINVITED captures enum value "ALREADY_INVITED"
	ClientRequestErrorALREADYINVITED ClientRequestError = "ALREADY_INVITED"

	// ClientRequestErrorALREADYSUGGESTED captures enum value "ALREADY_SUGGESTED"
	ClientRequestErrorALREADYSUGGESTED ClientRequestError = "ALREADY_SUGGESTED"

	// ClientRequestErrorALREADYDECLINEWITHDRAW captures enum value "ALREADY_DECLINE_WITHDRAW"
	ClientRequestErrorALREADYDECLINEWITHDRAW ClientRequestError = "ALREADY_DECLINE_WITHDRAW"

	// ClientRequestErrorALREADYVOTEWITHDRAW captures enum value "ALREADY_VOTE_WITHDRAW"
	ClientRequestErrorALREADYVOTEWITHDRAW ClientRequestError = "ALREADY_VOTE_WITHDRAW"

	// ClientRequestErrorALREADYINPHASE captures enum value "ALREADY_IN_PHASE"
	ClientRequestErrorALREADYINPHASE ClientRequestError = "ALREADY_IN_PHASE"

	// ClientRequestErrorCAPTAINNOTALLOWED captures enum value "CAPTAIN_NOT_ALLOWED"
	ClientRequestErrorCAPTAINNOTALLOWED ClientRequestError = "CAPTAIN_NOT_ALLOWED"

	// ClientRequestErrorCANNOTSUB captures enum value "CANNOT_SUB"
	ClientRequestErrorCANNOTSUB ClientRequestError = "CANNOT_SUB"

	// ClientRequestErrorCLASHBANNED captures enum value "CLASH_BANNED"
	ClientRequestErrorCLASHBANNED ClientRequestError = "CLASH_BANNED"

	// ClientRequestErrorCLASHBANNEDINVITEE captures enum value "CLASH_BANNED_INVITEE"
	ClientRequestErrorCLASHBANNEDINVITEE ClientRequestError = "CLASH_BANNED_INVITEE"

	// ClientRequestErrorELIGIBILITYSERVERERROR captures enum value "ELIGIBILITY_SERVER_ERROR"
	ClientRequestErrorELIGIBILITYSERVERERROR ClientRequestError = "ELIGIBILITY_SERVER_ERROR"

	// ClientRequestErrorFAILINVITE captures enum value "FAIL_INVITE"
	ClientRequestErrorFAILINVITE ClientRequestError = "FAIL_INVITE"

	// ClientRequestErrorFAILSUGGESTINVITE captures enum value "FAIL_SUGGESTINVITE"
	ClientRequestErrorFAILSUGGESTINVITE ClientRequestError = "FAIL_SUGGESTINVITE"

	// ClientRequestErrorHONORINELIGIBILITY captures enum value "HONOR_INELIGIBILITY"
	ClientRequestErrorHONORINELIGIBILITY ClientRequestError = "HONOR_INELIGIBILITY"

	// ClientRequestErrorLOGONOTALLOWED captures enum value "LOGO_NOT_ALLOWED"
	ClientRequestErrorLOGONOTALLOWED ClientRequestError = "LOGO_NOT_ALLOWED"

	// ClientRequestErrorLOGOCOLORNOTALLOWED captures enum value "LOGOCOLOR_NOT_ALLOWED"
	ClientRequestErrorLOGOCOLORNOTALLOWED ClientRequestError = "LOGOCOLOR_NOT_ALLOWED"

	// ClientRequestErrorINOTHERROSTER captures enum value "IN_OTHER_ROSTER"
	ClientRequestErrorINOTHERROSTER ClientRequestError = "IN_OTHER_ROSTER"

	// ClientRequestErrorINOTHERPENDINGROSTER captures enum value "IN_OTHER_PENDINGROSTER"
	ClientRequestErrorINOTHERPENDINGROSTER ClientRequestError = "IN_OTHER_PENDINGROSTER"

	// ClientRequestErrorINOTHERPENDINGSUB captures enum value "IN_OTHER_PENDINGSUB"
	ClientRequestErrorINOTHERPENDINGSUB ClientRequestError = "IN_OTHER_PENDINGSUB"

	// ClientRequestErrorINOTHERPHASEOFPERIOD captures enum value "IN_OTHER_PHASE_OF_PERIOD"
	ClientRequestErrorINOTHERPHASEOFPERIOD ClientRequestError = "IN_OTHER_PHASE_OF_PERIOD"

	// ClientRequestErrorINACTIVEREGISTRATION captures enum value "INACTIVE_REGISTRATION"
	ClientRequestErrorINACTIVEREGISTRATION ClientRequestError = "INACTIVE_REGISTRATION"

	// ClientRequestErrorINACTIVEPHASE captures enum value "INACTIVE_PHASE"
	ClientRequestErrorINACTIVEPHASE ClientRequestError = "INACTIVE_PHASE"

	// ClientRequestErrorINTERNALERROR captures enum value "INTERNAL_ERROR"
	ClientRequestErrorINTERNALERROR ClientRequestError = "INTERNAL_ERROR"

	// ClientRequestErrorINVALIDROSTER captures enum value "INVALID_ROSTER"
	ClientRequestErrorINVALIDROSTER ClientRequestError = "INVALID_ROSTER"

	// ClientRequestErrorINVALIDBUYBACK captures enum value "INVALID_BUY_BACK"
	ClientRequestErrorINVALIDBUYBACK ClientRequestError = "INVALID_BUY_BACK"

	// ClientRequestErrorINVALIDSUB captures enum value "INVALID_SUB"
	ClientRequestErrorINVALIDSUB ClientRequestError = "INVALID_SUB"

	// ClientRequestErrorINVALIDTOURNAMENT captures enum value "INVALID_TOURNAMENT"
	ClientRequestErrorINVALIDTOURNAMENT ClientRequestError = "INVALID_TOURNAMENT"

	// ClientRequestErrorINVALIDPHASE captures enum value "INVALID_PHASE"
	ClientRequestErrorINVALIDPHASE ClientRequestError = "INVALID_PHASE"

	// ClientRequestErrorINVALIDINVITEE captures enum value "INVALID_INVITEE"
	ClientRequestErrorINVALIDINVITEE ClientRequestError = "INVALID_INVITEE"

	// ClientRequestErrorINVALIDROSTERMEMBERSIZE captures enum value "INVALID_ROSTER_MEMBER_SIZE"
	ClientRequestErrorINVALIDROSTERMEMBERSIZE ClientRequestError = "INVALID_ROSTER_MEMBER_SIZE"

	// ClientRequestErrorINVALIDPOSITION captures enum value "INVALID_POSITION"
	ClientRequestErrorINVALIDPOSITION ClientRequestError = "INVALID_POSITION"

	// ClientRequestErrorINVALIDLOGO captures enum value "INVALID_LOGO"
	ClientRequestErrorINVALIDLOGO ClientRequestError = "INVALID_LOGO"

	// ClientRequestErrorINVALIDLOGOCOLOR captures enum value "INVALID_LOGOCOLOR"
	ClientRequestErrorINVALIDLOGOCOLOR ClientRequestError = "INVALID_LOGOCOLOR"

	// ClientRequestErrorINVALIDNAME captures enum value "INVALID_NAME"
	ClientRequestErrorINVALIDNAME ClientRequestError = "INVALID_NAME"

	// ClientRequestErrorINVALIDSHORTNAME captures enum value "INVALID_SHORTNAME"
	ClientRequestErrorINVALIDSHORTNAME ClientRequestError = "INVALID_SHORTNAME"

	// ClientRequestErrorINVALIDCHECKELIGIBILITYSIZE captures enum value "INVALID_CHECKELIGIBILITY_SIZE"
	ClientRequestErrorINVALIDCHECKELIGIBILITYSIZE ClientRequestError = "INVALID_CHECKELIGIBILITY_SIZE"

	// ClientRequestErrorINVALIDBRACKET captures enum value "INVALID_BRACKET"
	ClientRequestErrorINVALIDBRACKET ClientRequestError = "INVALID_BRACKET"

	// ClientRequestErrorINVALIDMATCHID captures enum value "INVALID_MATCHID"
	ClientRequestErrorINVALIDMATCHID ClientRequestError = "INVALID_MATCHID"

	// ClientRequestErrorINVALIDPLAYER captures enum value "INVALID_PLAYER"
	ClientRequestErrorINVALIDPLAYER ClientRequestError = "INVALID_PLAYER"

	// ClientRequestErrorINVALIDTier captures enum value "INVALID_Tier"
	ClientRequestErrorINVALIDTier ClientRequestError = "INVALID_Tier"

	// ClientRequestErrorINVALIDWITHDRAW captures enum value "INVALID_WITHDRAW"
	ClientRequestErrorINVALIDWITHDRAW ClientRequestError = "INVALID_WITHDRAW"

	// ClientRequestErrorINVALIDMATCHSTATUSFORGAMEEND captures enum value "INVALID_MATCHSTATUS_FORGAMEEND"
	ClientRequestErrorINVALIDMATCHSTATUSFORGAMEEND ClientRequestError = "INVALID_MATCHSTATUS_FORGAMEEND"

	// ClientRequestErrorINVALIDREWARDCONFIGNAME captures enum value "INVALID_REWARD_CONFIG_NAME"
	ClientRequestErrorINVALIDREWARDCONFIGNAME ClientRequestError = "INVALID_REWARD_CONFIG_NAME"

	// ClientRequestErrorINVALIDSEASON captures enum value "INVALID_SEASON"
	ClientRequestErrorINVALIDSEASON ClientRequestError = "INVALID_SEASON"

	// ClientRequestErrorMAXINVITED captures enum value "MAX_INVITED"
	ClientRequestErrorMAXINVITED ClientRequestError = "MAX_INVITED"

	// ClientRequestErrorMAXSUBED captures enum value "MAX_SUBED"
	ClientRequestErrorMAXSUBED ClientRequestError = "MAX_SUBED"

	// ClientRequestErrorMAXROSTERFETCHSIZE captures enum value "MAX_ROSTER_FETCHSIZE"
	ClientRequestErrorMAXROSTERFETCHSIZE ClientRequestError = "MAX_ROSTER_FETCHSIZE"

	// ClientRequestErrorMAXSUBSIZE captures enum value "MAX_SUB_SIZE"
	ClientRequestErrorMAXSUBSIZE ClientRequestError = "MAX_SUB_SIZE"

	// ClientRequestErrorSUBINOTHERROSTER captures enum value "SUB_IN_OTHER_ROSTER"
	ClientRequestErrorSUBINOTHERROSTER ClientRequestError = "SUB_IN_OTHER_ROSTER"

	// ClientRequestErrorNOSAMEPLAYER captures enum value "NO_SAME_PLAYER"
	ClientRequestErrorNOSAMEPLAYER ClientRequestError = "NO_SAME_PLAYER"

	// ClientRequestErrorNOAVAILABLEPHASE captures enum value "NO_AVAILABLE_PHASE"
	ClientRequestErrorNOAVAILABLEPHASE ClientRequestError = "NO_AVAILABLE_PHASE"

	// ClientRequestErrorNOTCAPTAIN captures enum value "NOT_CAPTAIN"
	ClientRequestErrorNOTCAPTAIN ClientRequestError = "NOT_CAPTAIN"

	// ClientRequestErrorNOTMEMBER captures enum value "NOT_MEMBER"
	ClientRequestErrorNOTMEMBER ClientRequestError = "NOT_MEMBER"

	// ClientRequestErrorNOTINVITEE captures enum value "NOT_INVITEE"
	ClientRequestErrorNOTINVITEE ClientRequestError = "NOT_INVITEE"

	// ClientRequestErrorNOTSEEDINTOLEAGUE captures enum value "NOT_SEED_INTO_LEAGUE"
	ClientRequestErrorNOTSEEDINTOLEAGUE ClientRequestError = "NOT_SEED_INTO_LEAGUE"

	// ClientRequestErrorNOTENOUGHTICKETS captures enum value "NOT_ENOUGH_TICKETS"
	ClientRequestErrorNOTENOUGHTICKETS ClientRequestError = "NOT_ENOUGH_TICKETS"

	// ClientRequestErrorNOTALLOWEDDELETETOURNAMENT captures enum value "NOT_ALLOWED_DELETE_TOURNAMENT"
	ClientRequestErrorNOTALLOWEDDELETETOURNAMENT ClientRequestError = "NOT_ALLOWED_DELETE_TOURNAMENT"

	// ClientRequestErrorNOTALLOWEDDELETETOURNAMENTREWARDCONFIG captures enum value "NOT_ALLOWED_DELETE_TOURNAMENT_REWARD_CONFIG"
	ClientRequestErrorNOTALLOWEDDELETETOURNAMENTREWARDCONFIG ClientRequestError = "NOT_ALLOWED_DELETE_TOURNAMENT_REWARD_CONFIG"

	// ClientRequestErrorNOPERMISSION captures enum value "NO_PERMISSION"
	ClientRequestErrorNOPERMISSION ClientRequestError = "NO_PERMISSION"

	// ClientRequestErrorNOMORERECOMMEND captures enum value "NO_MORE_RECOMMEND"
	ClientRequestErrorNOMORERECOMMEND ClientRequestError = "NO_MORE_RECOMMEND"

	// ClientRequestErrorOVERSUGGESTIONINVITE captures enum value "OVER_SUGGESTION_INVITE"
	ClientRequestErrorOVERSUGGESTIONINVITE ClientRequestError = "OVER_SUGGESTION_INVITE"

	// ClientRequestErrorOVERINVITE captures enum value "OVER_INVITE"
	ClientRequestErrorOVERINVITE ClientRequestError = "OVER_INVITE"

	// ClientRequestErrorPENDINGROSTERNOTREADY captures enum value "PENDING_ROSTER_NOT_READY"
	ClientRequestErrorPENDINGROSTERNOTREADY ClientRequestError = "PENDING_ROSTER_NOT_READY"

	// ClientRequestErrorPENDINGROSTERFULL captures enum value "PENDING_ROSTER_FULL"
	ClientRequestErrorPENDINGROSTERFULL ClientRequestError = "PENDING_ROSTER_FULL"

	// ClientRequestErrorPENDINGROSTERCLOSE captures enum value "PENDING_ROSTER_CLOSE"
	ClientRequestErrorPENDINGROSTERCLOSE ClientRequestError = "PENDING_ROSTER_CLOSE"

	// ClientRequestErrorPHASECANCELLED captures enum value "PHASE_CANCELLED"
	ClientRequestErrorPHASECANCELLED ClientRequestError = "PHASE_CANCELLED"

	// ClientRequestErrorPHASEFULL captures enum value "PHASE_FULL"
	ClientRequestErrorPHASEFULL ClientRequestError = "PHASE_FULL"

	// ClientRequestErrorROSTERELIMINATED captures enum value "ROSTER_ELIMINATED"
	ClientRequestErrorROSTERELIMINATED ClientRequestError = "ROSTER_ELIMINATED"

	// ClientRequestErrorROSTERDISBANDNOTALLOWED captures enum value "ROSTER_DISBAND_NOT_ALLOWED"
	ClientRequestErrorROSTERDISBANDNOTALLOWED ClientRequestError = "ROSTER_DISBAND_NOT_ALLOWED"

	// ClientRequestErrorSUGGESTINVITEENOTEXIST captures enum value "SUGGEST_INVITEE_NOT_EXIST"
	ClientRequestErrorSUGGESTINVITEENOTEXIST ClientRequestError = "SUGGEST_INVITEE_NOT_EXIST"

	// ClientRequestErrorSMSNOTVERIFIED captures enum value "SMS_NOT_VERIFIED"
	ClientRequestErrorSMSNOTVERIFIED ClientRequestError = "SMS_NOT_VERIFIED"

	// ClientRequestErrorTICKETALREADYSET captures enum value "TICKET_ALREADY_SET"
	ClientRequestErrorTICKETALREADYSET ClientRequestError = "TICKET_ALREADY_SET"

	// ClientRequestErrorTICKETOFFERNOTEXIST captures enum value "TICKET_OFFER_NOT_EXIST"
	ClientRequestErrorTICKETOFFERNOTEXIST ClientRequestError = "TICKET_OFFER_NOT_EXIST"

	// ClientRequestErrorTICKETOFFERINVALIDCOUNT captures enum value "TICKET_OFFER_INVALID_COUNT"
	ClientRequestErrorTICKETOFFERINVALIDCOUNT ClientRequestError = "TICKET_OFFER_INVALID_COUNT"

	// ClientRequestErrorTICKETNOTSET captures enum value "TICKET_NOT_SET"
	ClientRequestErrorTICKETNOTSET ClientRequestError = "TICKET_NOT_SET"

	// ClientRequestErrorVOICENOTAVAILABLE captures enum value "VOICE_NOT_AVAILABLE"
	ClientRequestErrorVOICENOTAVAILABLE ClientRequestError = "VOICE_NOT_AVAILABLE"

	// ClientRequestErrorWITHDRAWNOTALLOWED captures enum value "WITHDRAW_NOT_ALLOWED"
	ClientRequestErrorWITHDRAWNOTALLOWED ClientRequestError = "WITHDRAW_NOT_ALLOWED"

	// ClientRequestErrorWITHDRAWCANCELNOTALLOWED captures enum value "WITHDRAW_CANCEL_NOT_ALLOWED"
	ClientRequestErrorWITHDRAWCANCELNOTALLOWED ClientRequestError = "WITHDRAW_CANCEL_NOT_ALLOWED"

	// ClientRequestErrorWITHDRAWLOCKOUT captures enum value "WITHDRAW_LOCKOUT"
	ClientRequestErrorWITHDRAWLOCKOUT ClientRequestError = "WITHDRAW_LOCKOUT"
)

// for schema
var clientRequestErrorEnum []interface{}

func init() {
	var res []ClientRequestError
	if err := json.Unmarshal([]byte(`["ALREADY_IN_GAME","ALREADY_MEMBER","ALREADY_INVITED","ALREADY_SUGGESTED","ALREADY_DECLINE_WITHDRAW","ALREADY_VOTE_WITHDRAW","ALREADY_IN_PHASE","CAPTAIN_NOT_ALLOWED","CANNOT_SUB","CLASH_BANNED","CLASH_BANNED_INVITEE","ELIGIBILITY_SERVER_ERROR","FAIL_INVITE","FAIL_SUGGESTINVITE","HONOR_INELIGIBILITY","LOGO_NOT_ALLOWED","LOGOCOLOR_NOT_ALLOWED","IN_OTHER_ROSTER","IN_OTHER_PENDINGROSTER","IN_OTHER_PENDINGSUB","IN_OTHER_PHASE_OF_PERIOD","INACTIVE_REGISTRATION","INACTIVE_PHASE","INTERNAL_ERROR","INVALID_ROSTER","INVALID_BUY_BACK","INVALID_SUB","INVALID_TOURNAMENT","INVALID_PHASE","INVALID_INVITEE","INVALID_ROSTER_MEMBER_SIZE","INVALID_POSITION","INVALID_LOGO","INVALID_LOGOCOLOR","INVALID_NAME","INVALID_SHORTNAME","INVALID_CHECKELIGIBILITY_SIZE","INVALID_BRACKET","INVALID_MATCHID","INVALID_PLAYER","INVALID_Tier","INVALID_WITHDRAW","INVALID_MATCHSTATUS_FORGAMEEND","INVALID_REWARD_CONFIG_NAME","INVALID_SEASON","MAX_INVITED","MAX_SUBED","MAX_ROSTER_FETCHSIZE","MAX_SUB_SIZE","SUB_IN_OTHER_ROSTER","NO_SAME_PLAYER","NO_AVAILABLE_PHASE","NOT_CAPTAIN","NOT_MEMBER","NOT_INVITEE","NOT_SEED_INTO_LEAGUE","NOT_ENOUGH_TICKETS","NOT_ALLOWED_DELETE_TOURNAMENT","NOT_ALLOWED_DELETE_TOURNAMENT_REWARD_CONFIG","NO_PERMISSION","NO_MORE_RECOMMEND","OVER_SUGGESTION_INVITE","OVER_INVITE","PENDING_ROSTER_NOT_READY","PENDING_ROSTER_FULL","PENDING_ROSTER_CLOSE","PHASE_CANCELLED","PHASE_FULL","ROSTER_ELIMINATED","ROSTER_DISBAND_NOT_ALLOWED","SUGGEST_INVITEE_NOT_EXIST","SMS_NOT_VERIFIED","TICKET_ALREADY_SET","TICKET_OFFER_NOT_EXIST","TICKET_OFFER_INVALID_COUNT","TICKET_NOT_SET","VOICE_NOT_AVAILABLE","WITHDRAW_NOT_ALLOWED","WITHDRAW_CANCEL_NOT_ALLOWED","WITHDRAW_LOCKOUT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clientRequestErrorEnum = append(clientRequestErrorEnum, v)
	}
}

func (m ClientRequestError) validateClientRequestErrorEnum(path, location string, value ClientRequestError) error {
	if err := validate.Enum(path, location, value, clientRequestErrorEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this client request error
func (m ClientRequestError) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClientRequestErrorEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
