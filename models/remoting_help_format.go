// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// RemotingHelpFormat Help format for remoting functions and types.
// swagger:model RemotingHelpFormat
type RemotingHelpFormat string

const (

	// RemotingHelpFormatFull captures enum value "Full"
	RemotingHelpFormatFull RemotingHelpFormat = "Full"

	// RemotingHelpFormatEpytext captures enum value "Epytext"
	RemotingHelpFormatEpytext RemotingHelpFormat = "Epytext"

	// RemotingHelpFormatBrief captures enum value "Brief"
	RemotingHelpFormatBrief RemotingHelpFormat = "Brief"

	// RemotingHelpFormatConsole captures enum value "Console"
	RemotingHelpFormatConsole RemotingHelpFormat = "Console"
)

// for schema
var remotingHelpFormatEnum []interface{}

func init() {
	var res []RemotingHelpFormat
	if err := json.Unmarshal([]byte(`["Full","Epytext","Brief","Console"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		remotingHelpFormatEnum = append(remotingHelpFormatEnum, v)
	}
}

func (m RemotingHelpFormat) validateRemotingHelpFormatEnum(path, location string, value RemotingHelpFormat) error {
	if err := validate.Enum(path, location, value, remotingHelpFormatEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this remoting help format
func (m RemotingHelpFormat) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRemotingHelpFormatEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
