// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolCatalogCatalogPluginItemWithDetails lol catalog catalog plugin item with details
// swagger:model LolCatalogCatalogPluginItemWithDetails
type LolCatalogCatalogPluginItemWithDetails struct {

	// assets
	Assets *LolCatalogCatalogPluginItemAssets `json:"assets,omitempty"`

	// bundled discount prices
	BundledDiscountPrices []*LolCatalogCatalogPluginPrice `json:"bundledDiscountPrices"`

	// bundled items
	BundledItems []*LolCatalogCatalogPluginItemWithDetails `json:"bundledItems"`

	// item
	Item *LolCatalogCatalogPluginItem `json:"item,omitempty"`

	// minimum bundle prices
	MinimumBundlePrices []*LolCatalogCatalogPluginPrice `json:"minimumBundlePrices"`

	// quantity
	Quantity int32 `json:"quantity,omitempty"`

	// required items
	RequiredItems []*LolCatalogCatalogPluginItemWithDetails `json:"requiredItems"`
}

// Validate validates this lol catalog catalog plugin item with details
func (m *LolCatalogCatalogPluginItemWithDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAssets(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBundledDiscountPrices(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateBundledItems(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateItem(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMinimumBundlePrices(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequiredItems(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolCatalogCatalogPluginItemWithDetails) validateAssets(formats strfmt.Registry) error {

	if swag.IsZero(m.Assets) { // not required
		return nil
	}

	if m.Assets != nil {
		if err := m.Assets.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("assets")
			}
			return err
		}
	}

	return nil
}

func (m *LolCatalogCatalogPluginItemWithDetails) validateBundledDiscountPrices(formats strfmt.Registry) error {

	if swag.IsZero(m.BundledDiscountPrices) { // not required
		return nil
	}

	for i := 0; i < len(m.BundledDiscountPrices); i++ {
		if swag.IsZero(m.BundledDiscountPrices[i]) { // not required
			continue
		}

		if m.BundledDiscountPrices[i] != nil {
			if err := m.BundledDiscountPrices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("bundledDiscountPrices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolCatalogCatalogPluginItemWithDetails) validateBundledItems(formats strfmt.Registry) error {

	if swag.IsZero(m.BundledItems) { // not required
		return nil
	}

	for i := 0; i < len(m.BundledItems); i++ {
		if swag.IsZero(m.BundledItems[i]) { // not required
			continue
		}

		if m.BundledItems[i] != nil {
			if err := m.BundledItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("bundledItems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolCatalogCatalogPluginItemWithDetails) validateItem(formats strfmt.Registry) error {

	if swag.IsZero(m.Item) { // not required
		return nil
	}

	if m.Item != nil {
		if err := m.Item.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("item")
			}
			return err
		}
	}

	return nil
}

func (m *LolCatalogCatalogPluginItemWithDetails) validateMinimumBundlePrices(formats strfmt.Registry) error {

	if swag.IsZero(m.MinimumBundlePrices) { // not required
		return nil
	}

	for i := 0; i < len(m.MinimumBundlePrices); i++ {
		if swag.IsZero(m.MinimumBundlePrices[i]) { // not required
			continue
		}

		if m.MinimumBundlePrices[i] != nil {
			if err := m.MinimumBundlePrices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("minimumBundlePrices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolCatalogCatalogPluginItemWithDetails) validateRequiredItems(formats strfmt.Registry) error {

	if swag.IsZero(m.RequiredItems) { // not required
		return nil
	}

	for i := 0; i < len(m.RequiredItems); i++ {
		if swag.IsZero(m.RequiredItems[i]) { // not required
			continue
		}

		if m.RequiredItems[i] != nil {
			if err := m.RequiredItems[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("requiredItems" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolCatalogCatalogPluginItemWithDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolCatalogCatalogPluginItemWithDetails) UnmarshalBinary(b []byte) error {
	var res LolCatalogCatalogPluginItemWithDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
