// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolStatstonesStatstone lol statstones statstone
// swagger:model LolStatstonesStatstone
type LolStatstonesStatstone struct {

	// bound champion item Id
	BoundChampionItemID int32 `json:"boundChampionItemId,omitempty"`

	// category
	Category string `json:"category,omitempty"`

	// completion value
	CompletionValue float32 `json:"completionValue,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// formatted milestone level
	FormattedMilestoneLevel string `json:"formattedMilestoneLevel,omitempty"`

	// formatted personal best
	FormattedPersonalBest string `json:"formattedPersonalBest,omitempty"`

	// formatted value
	FormattedValue string `json:"formattedValue,omitempty"`

	// image Url
	ImageURL string `json:"imageUrl,omitempty"`

	// is complete
	IsComplete bool `json:"isComplete,omitempty"`

	// is epic
	IsEpic bool `json:"isEpic,omitempty"`

	// is featured
	IsFeatured bool `json:"isFeatured,omitempty"`

	// is retired
	IsRetired bool `json:"isRetired,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// next milestone
	NextMilestone string `json:"nextMilestone,omitempty"`

	// player record
	PlayerRecord *LolStatstonesStatstonePlayerRecord `json:"playerRecord,omitempty"`

	// statstone Id
	StatstoneID string `json:"statstoneId,omitempty"`
}

// Validate validates this lol statstones statstone
func (m *LolStatstonesStatstone) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePlayerRecord(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolStatstonesStatstone) validatePlayerRecord(formats strfmt.Registry) error {

	if swag.IsZero(m.PlayerRecord) { // not required
		return nil
	}

	if m.PlayerRecord != nil {
		if err := m.PlayerRecord.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("playerRecord")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolStatstonesStatstone) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolStatstonesStatstone) UnmarshalBinary(b []byte) error {
	var res LolStatstonesStatstone
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
