// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolPurchaseWidgetValidationResponseItem lol purchase widget validation response item
// swagger:model LolPurchaseWidgetValidationResponseItem
type LolPurchaseWidgetValidationResponseItem struct {

	// description
	Description string `json:"description,omitempty"`

	// item key
	ItemKey *LolPurchaseWidgetItemKey `json:"itemKey,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// quantity
	Quantity int32 `json:"quantity,omitempty"`

	// sale
	Sale *LolPurchaseWidgetSale `json:"sale,omitempty"`

	// validation currency info
	ValidationCurrencyInfo []*LolPurchaseWidgetItemPrice `json:"validationCurrencyInfo"`
}

// Validate validates this lol purchase widget validation response item
func (m *LolPurchaseWidgetValidationResponseItem) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateItemKey(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSale(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateValidationCurrencyInfo(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolPurchaseWidgetValidationResponseItem) validateItemKey(formats strfmt.Registry) error {

	if swag.IsZero(m.ItemKey) { // not required
		return nil
	}

	if m.ItemKey != nil {
		if err := m.ItemKey.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("itemKey")
			}
			return err
		}
	}

	return nil
}

func (m *LolPurchaseWidgetValidationResponseItem) validateSale(formats strfmt.Registry) error {

	if swag.IsZero(m.Sale) { // not required
		return nil
	}

	if m.Sale != nil {
		if err := m.Sale.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("sale")
			}
			return err
		}
	}

	return nil
}

func (m *LolPurchaseWidgetValidationResponseItem) validateValidationCurrencyInfo(formats strfmt.Registry) error {

	if swag.IsZero(m.ValidationCurrencyInfo) { // not required
		return nil
	}

	for i := 0; i < len(m.ValidationCurrencyInfo); i++ {
		if swag.IsZero(m.ValidationCurrencyInfo[i]) { // not required
			continue
		}

		if m.ValidationCurrencyInfo[i] != nil {
			if err := m.ValidationCurrencyInfo[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("validationCurrencyInfo" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolPurchaseWidgetValidationResponseItem) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolPurchaseWidgetValidationResponseItem) UnmarshalBinary(b []byte) error {
	var res LolPurchaseWidgetValidationResponseItem
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
