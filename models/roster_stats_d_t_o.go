// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// RosterStatsDTO roster stats d t o
// swagger:model RosterStatsDTO
type RosterStatsDTO struct {

	// roster Id
	RosterID int64 `json:"rosterId,omitempty"`

	// roster logo
	RosterLogo int32 `json:"rosterLogo,omitempty"`

	// roster logo color
	RosterLogoColor int32 `json:"rosterLogoColor,omitempty"`

	// roster name
	RosterName string `json:"rosterName,omitempty"`

	// roster short name
	RosterShortName string `json:"rosterShortName,omitempty"`

	// schedule end time
	ScheduleEndTime int64 `json:"scheduleEndTime,omitempty"`

	// schedule time
	ScheduleTime int64 `json:"scheduleTime,omitempty"`

	// stats
	Stats *RosterAggregatedStatsDTO `json:"stats,omitempty"`

	// tier
	Tier int32 `json:"tier,omitempty"`

	// tournament name loc key
	TournamentNameLocKey string `json:"tournamentNameLocKey,omitempty"`

	// tournament name loc key secondary
	TournamentNameLocKeySecondary string `json:"tournamentNameLocKeySecondary,omitempty"`

	// tournament periods
	TournamentPeriods int32 `json:"tournamentPeriods,omitempty"`

	// tournament theme Id
	TournamentThemeID int32 `json:"tournamentThemeId,omitempty"`
}

// Validate validates this roster stats d t o
func (m *RosterStatsDTO) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStats(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *RosterStatsDTO) validateStats(formats strfmt.Registry) error {

	if swag.IsZero(m.Stats) { // not required
		return nil
	}

	if m.Stats != nil {
		if err := m.Stats.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("stats")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *RosterStatsDTO) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *RosterStatsDTO) UnmarshalBinary(b []byte) error {
	var res RosterStatsDTO
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
