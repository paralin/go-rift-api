// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolCollectionsItemOwnershipType lol collections item ownership type
// swagger:model LolCollectionsItemOwnershipType
type LolCollectionsItemOwnershipType string

const (

	// LolCollectionsItemOwnershipTypeOWNED captures enum value "OWNED"
	LolCollectionsItemOwnershipTypeOWNED LolCollectionsItemOwnershipType = "OWNED"

	// LolCollectionsItemOwnershipTypeRENTED captures enum value "RENTED"
	LolCollectionsItemOwnershipTypeRENTED LolCollectionsItemOwnershipType = "RENTED"

	// LolCollectionsItemOwnershipTypeLOYALTY captures enum value "LOYALTY"
	LolCollectionsItemOwnershipTypeLOYALTY LolCollectionsItemOwnershipType = "LOYALTY"

	// LolCollectionsItemOwnershipTypeF2P captures enum value "F2P"
	LolCollectionsItemOwnershipTypeF2P LolCollectionsItemOwnershipType = "F2P"
)

// for schema
var lolCollectionsItemOwnershipTypeEnum []interface{}

func init() {
	var res []LolCollectionsItemOwnershipType
	if err := json.Unmarshal([]byte(`["OWNED","RENTED","LOYALTY","F2P"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolCollectionsItemOwnershipTypeEnum = append(lolCollectionsItemOwnershipTypeEnum, v)
	}
}

func (m LolCollectionsItemOwnershipType) validateLolCollectionsItemOwnershipTypeEnum(path, location string, value LolCollectionsItemOwnershipType) error {
	if err := validate.Enum(path, location, value, lolCollectionsItemOwnershipTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol collections item ownership type
func (m LolCollectionsItemOwnershipType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolCollectionsItemOwnershipTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
