// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolSettingsLoginSessionStates lol settings login session states
// swagger:model LolSettingsLoginSessionStates
type LolSettingsLoginSessionStates string

const (

	// LolSettingsLoginSessionStatesINPROGRESS captures enum value "IN_PROGRESS"
	LolSettingsLoginSessionStatesINPROGRESS LolSettingsLoginSessionStates = "IN_PROGRESS"

	// LolSettingsLoginSessionStatesSUCCEEDED captures enum value "SUCCEEDED"
	LolSettingsLoginSessionStatesSUCCEEDED LolSettingsLoginSessionStates = "SUCCEEDED"

	// LolSettingsLoginSessionStatesLOGGINGOUT captures enum value "LOGGING_OUT"
	LolSettingsLoginSessionStatesLOGGINGOUT LolSettingsLoginSessionStates = "LOGGING_OUT"

	// LolSettingsLoginSessionStatesERROR captures enum value "ERROR"
	LolSettingsLoginSessionStatesERROR LolSettingsLoginSessionStates = "ERROR"
)

// for schema
var lolSettingsLoginSessionStatesEnum []interface{}

func init() {
	var res []LolSettingsLoginSessionStates
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","SUCCEEDED","LOGGING_OUT","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolSettingsLoginSessionStatesEnum = append(lolSettingsLoginSessionStatesEnum, v)
	}
}

func (m LolSettingsLoginSessionStates) validateLolSettingsLoginSessionStatesEnum(path, location string, value LolSettingsLoginSessionStates) error {
	if err := validate.Enum(path, location, value, lolSettingsLoginSessionStatesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol settings login session states
func (m LolSettingsLoginSessionStates) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolSettingsLoginSessionStatesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
