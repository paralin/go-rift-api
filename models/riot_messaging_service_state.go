// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// RiotMessagingServiceState riot messaging service state
// swagger:model RiotMessagingServiceState
type RiotMessagingServiceState string

const (

	// RiotMessagingServiceStateDisconnecting captures enum value "Disconnecting"
	RiotMessagingServiceStateDisconnecting RiotMessagingServiceState = "Disconnecting"

	// RiotMessagingServiceStateDisconnected captures enum value "Disconnected"
	RiotMessagingServiceStateDisconnected RiotMessagingServiceState = "Disconnected"

	// RiotMessagingServiceStateConnecting captures enum value "Connecting"
	RiotMessagingServiceStateConnecting RiotMessagingServiceState = "Connecting"

	// RiotMessagingServiceStateConnected captures enum value "Connected"
	RiotMessagingServiceStateConnected RiotMessagingServiceState = "Connected"
)

// for schema
var riotMessagingServiceStateEnum []interface{}

func init() {
	var res []RiotMessagingServiceState
	if err := json.Unmarshal([]byte(`["Disconnecting","Disconnected","Connecting","Connected"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		riotMessagingServiceStateEnum = append(riotMessagingServiceStateEnum, v)
	}
}

func (m RiotMessagingServiceState) validateRiotMessagingServiceStateEnum(path, location string, value RiotMessagingServiceState) error {
	if err := validate.Enum(path, location, value, riotMessagingServiceStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this riot messaging service state
func (m RiotMessagingServiceState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRiotMessagingServiceStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
