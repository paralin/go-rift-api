// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ClientBracketMatchStatus client bracket match status
// swagger:model ClientBracketMatchStatus
type ClientBracketMatchStatus string

const (

	// ClientBracketMatchStatusUPCOMING captures enum value "UPCOMING"
	ClientBracketMatchStatusUPCOMING ClientBracketMatchStatus = "UPCOMING"

	// ClientBracketMatchStatusSTARTED captures enum value "STARTED"
	ClientBracketMatchStatusSTARTED ClientBracketMatchStatus = "STARTED"

	// ClientBracketMatchStatusCOMPLETED captures enum value "COMPLETED"
	ClientBracketMatchStatusCOMPLETED ClientBracketMatchStatus = "COMPLETED"
)

// for schema
var clientBracketMatchStatusEnum []interface{}

func init() {
	var res []ClientBracketMatchStatus
	if err := json.Unmarshal([]byte(`["UPCOMING","STARTED","COMPLETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clientBracketMatchStatusEnum = append(clientBracketMatchStatusEnum, v)
	}
}

func (m ClientBracketMatchStatus) validateClientBracketMatchStatusEnum(path, location string, value ClientBracketMatchStatus) error {
	if err := validate.Enum(path, location, value, clientBracketMatchStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this client bracket match status
func (m ClientBracketMatchStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClientBracketMatchStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
