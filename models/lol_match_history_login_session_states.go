// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolMatchHistoryLoginSessionStates lol match history login session states
// swagger:model LolMatchHistoryLoginSessionStates
type LolMatchHistoryLoginSessionStates string

const (

	// LolMatchHistoryLoginSessionStatesINPROGRESS captures enum value "IN_PROGRESS"
	LolMatchHistoryLoginSessionStatesINPROGRESS LolMatchHistoryLoginSessionStates = "IN_PROGRESS"

	// LolMatchHistoryLoginSessionStatesSUCCEEDED captures enum value "SUCCEEDED"
	LolMatchHistoryLoginSessionStatesSUCCEEDED LolMatchHistoryLoginSessionStates = "SUCCEEDED"

	// LolMatchHistoryLoginSessionStatesLOGGINGOUT captures enum value "LOGGING_OUT"
	LolMatchHistoryLoginSessionStatesLOGGINGOUT LolMatchHistoryLoginSessionStates = "LOGGING_OUT"

	// LolMatchHistoryLoginSessionStatesERROR captures enum value "ERROR"
	LolMatchHistoryLoginSessionStatesERROR LolMatchHistoryLoginSessionStates = "ERROR"
)

// for schema
var lolMatchHistoryLoginSessionStatesEnum []interface{}

func init() {
	var res []LolMatchHistoryLoginSessionStates
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","SUCCEEDED","LOGGING_OUT","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolMatchHistoryLoginSessionStatesEnum = append(lolMatchHistoryLoginSessionStatesEnum, v)
	}
}

func (m LolMatchHistoryLoginSessionStates) validateLolMatchHistoryLoginSessionStatesEnum(path, location string, value LolMatchHistoryLoginSessionStates) error {
	if err := validate.Enum(path, location, value, lolMatchHistoryLoginSessionStatesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol match history login session states
func (m LolMatchHistoryLoginSessionStates) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolMatchHistoryLoginSessionStatesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
