// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolGameflowQueueAvailability lol gameflow queue availability
// swagger:model LolGameflowQueueAvailability
type LolGameflowQueueAvailability string

const (

	// LolGameflowQueueAvailabilityAvailable captures enum value "Available"
	LolGameflowQueueAvailabilityAvailable LolGameflowQueueAvailability = "Available"

	// LolGameflowQueueAvailabilityPlatformDisabled captures enum value "PlatformDisabled"
	LolGameflowQueueAvailabilityPlatformDisabled LolGameflowQueueAvailability = "PlatformDisabled"

	// LolGameflowQueueAvailabilityDoesntMeetRequirements captures enum value "DoesntMeetRequirements"
	LolGameflowQueueAvailabilityDoesntMeetRequirements LolGameflowQueueAvailability = "DoesntMeetRequirements"
)

// for schema
var lolGameflowQueueAvailabilityEnum []interface{}

func init() {
	var res []LolGameflowQueueAvailability
	if err := json.Unmarshal([]byte(`["Available","PlatformDisabled","DoesntMeetRequirements"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolGameflowQueueAvailabilityEnum = append(lolGameflowQueueAvailabilityEnum, v)
	}
}

func (m LolGameflowQueueAvailability) validateLolGameflowQueueAvailabilityEnum(path, location string, value LolGameflowQueueAvailability) error {
	if err := validate.Enum(path, location, value, lolGameflowQueueAvailabilityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol gameflow queue availability
func (m LolGameflowQueueAvailability) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolGameflowQueueAvailabilityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
