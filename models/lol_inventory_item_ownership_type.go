// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolInventoryItemOwnershipType lol inventory item ownership type
// swagger:model LolInventoryItemOwnershipType
type LolInventoryItemOwnershipType string

const (

	// LolInventoryItemOwnershipTypeOWNED captures enum value "OWNED"
	LolInventoryItemOwnershipTypeOWNED LolInventoryItemOwnershipType = "OWNED"

	// LolInventoryItemOwnershipTypeRENTED captures enum value "RENTED"
	LolInventoryItemOwnershipTypeRENTED LolInventoryItemOwnershipType = "RENTED"

	// LolInventoryItemOwnershipTypeLOYALTY captures enum value "LOYALTY"
	LolInventoryItemOwnershipTypeLOYALTY LolInventoryItemOwnershipType = "LOYALTY"

	// LolInventoryItemOwnershipTypeF2P captures enum value "F2P"
	LolInventoryItemOwnershipTypeF2P LolInventoryItemOwnershipType = "F2P"
)

// for schema
var lolInventoryItemOwnershipTypeEnum []interface{}

func init() {
	var res []LolInventoryItemOwnershipType
	if err := json.Unmarshal([]byte(`["OWNED","RENTED","LOYALTY","F2P"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolInventoryItemOwnershipTypeEnum = append(lolInventoryItemOwnershipTypeEnum, v)
	}
}

func (m LolInventoryItemOwnershipType) validateLolInventoryItemOwnershipTypeEnum(path, location string, value LolInventoryItemOwnershipType) error {
	if err := validate.Enum(path, location, value, lolInventoryItemOwnershipTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol inventory item ownership type
func (m LolInventoryItemOwnershipType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolInventoryItemOwnershipTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
