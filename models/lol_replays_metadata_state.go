// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolReplaysMetadataState lol replays metadata state
// swagger:model LolReplaysMetadataState
type LolReplaysMetadataState string

const (

	// LolReplaysMetadataStateChecking captures enum value "checking"
	LolReplaysMetadataStateChecking LolReplaysMetadataState = "checking"

	// LolReplaysMetadataStateFound captures enum value "found"
	LolReplaysMetadataStateFound LolReplaysMetadataState = "found"

	// LolReplaysMetadataStateWatch captures enum value "watch"
	LolReplaysMetadataStateWatch LolReplaysMetadataState = "watch"

	// LolReplaysMetadataStateDownload captures enum value "download"
	LolReplaysMetadataStateDownload LolReplaysMetadataState = "download"

	// LolReplaysMetadataStateDownloading captures enum value "downloading"
	LolReplaysMetadataStateDownloading LolReplaysMetadataState = "downloading"

	// LolReplaysMetadataStateIncompatible captures enum value "incompatible"
	LolReplaysMetadataStateIncompatible LolReplaysMetadataState = "incompatible"

	// LolReplaysMetadataStateMissingOrExpired captures enum value "missingOrExpired"
	LolReplaysMetadataStateMissingOrExpired LolReplaysMetadataState = "missingOrExpired"

	// LolReplaysMetadataStateRetryDownload captures enum value "retryDownload"
	LolReplaysMetadataStateRetryDownload LolReplaysMetadataState = "retryDownload"

	// LolReplaysMetadataStateLost captures enum value "lost"
	LolReplaysMetadataStateLost LolReplaysMetadataState = "lost"

	// LolReplaysMetadataStateUnsupported captures enum value "unsupported"
	LolReplaysMetadataStateUnsupported LolReplaysMetadataState = "unsupported"

	// LolReplaysMetadataStateError captures enum value "error"
	LolReplaysMetadataStateError LolReplaysMetadataState = "error"
)

// for schema
var lolReplaysMetadataStateEnum []interface{}

func init() {
	var res []LolReplaysMetadataState
	if err := json.Unmarshal([]byte(`["checking","found","watch","download","downloading","incompatible","missingOrExpired","retryDownload","lost","unsupported","error"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolReplaysMetadataStateEnum = append(lolReplaysMetadataStateEnum, v)
	}
}

func (m LolReplaysMetadataState) validateLolReplaysMetadataStateEnum(path, location string, value LolReplaysMetadataState) error {
	if err := validate.Enum(path, location, value, lolReplaysMetadataStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol replays metadata state
func (m LolReplaysMetadataState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolReplaysMetadataStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
