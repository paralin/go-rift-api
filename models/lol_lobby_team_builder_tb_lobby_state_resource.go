// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolLobbyTeamBuilderTbLobbyStateResource lol lobby team builder tb lobby state resource
// swagger:model LolLobbyTeamBuilderTbLobbyStateResource
type LolLobbyTeamBuilderTbLobbyStateResource struct {

	// afk check state
	AfkCheckState *LolLobbyTeamBuilderAfkCheckStateV1 `json:"afkCheckState,omitempty"`

	// champion select state
	ChampionSelectState *LolLobbyTeamBuilderChampionSelectStateV1 `json:"championSelectState,omitempty"`

	// counter
	Counter int32 `json:"counter,omitempty"`

	// matchmaking state
	MatchmakingState *LolLobbyTeamBuilderTBDMatchmakingState `json:"matchmakingState,omitempty"`

	// phase name
	PhaseName string `json:"phaseName,omitempty"`

	// premade state
	PremadeState *LolLobbyTeamBuilderTbLobbyPremadeStateResource `json:"premadeState,omitempty"`

	// queue Id
	QueueID int32 `json:"queueId,omitempty"`
}

// Validate validates this lol lobby team builder tb lobby state resource
func (m *LolLobbyTeamBuilderTbLobbyStateResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateAfkCheckState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateChampionSelectState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMatchmakingState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePremadeState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolLobbyTeamBuilderTbLobbyStateResource) validateAfkCheckState(formats strfmt.Registry) error {

	if swag.IsZero(m.AfkCheckState) { // not required
		return nil
	}

	if m.AfkCheckState != nil {
		if err := m.AfkCheckState.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("afkCheckState")
			}
			return err
		}
	}

	return nil
}

func (m *LolLobbyTeamBuilderTbLobbyStateResource) validateChampionSelectState(formats strfmt.Registry) error {

	if swag.IsZero(m.ChampionSelectState) { // not required
		return nil
	}

	if m.ChampionSelectState != nil {
		if err := m.ChampionSelectState.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("championSelectState")
			}
			return err
		}
	}

	return nil
}

func (m *LolLobbyTeamBuilderTbLobbyStateResource) validateMatchmakingState(formats strfmt.Registry) error {

	if swag.IsZero(m.MatchmakingState) { // not required
		return nil
	}

	if m.MatchmakingState != nil {
		if err := m.MatchmakingState.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("matchmakingState")
			}
			return err
		}
	}

	return nil
}

func (m *LolLobbyTeamBuilderTbLobbyStateResource) validatePremadeState(formats strfmt.Registry) error {

	if swag.IsZero(m.PremadeState) { // not required
		return nil
	}

	if m.PremadeState != nil {
		if err := m.PremadeState.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("premadeState")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolLobbyTeamBuilderTbLobbyStateResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolLobbyTeamBuilderTbLobbyStateResource) UnmarshalBinary(b []byte) error {
	var res LolLobbyTeamBuilderTbLobbyStateResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
