// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolClashPlayerState lol clash player state
// swagger:model LolClashPlayerState
type LolClashPlayerState string

const (

	// LolClashPlayerStateNOROSTER captures enum value "NO_ROSTER"
	LolClashPlayerStateNOROSTER LolClashPlayerState = "NO_ROSTER"

	// LolClashPlayerStatePENDINGROSTER captures enum value "PENDING_ROSTER"
	LolClashPlayerStatePENDINGROSTER LolClashPlayerState = "PENDING_ROSTER"

	// LolClashPlayerStateREGISTEREDROSTER captures enum value "REGISTERED_ROSTER"
	LolClashPlayerStateREGISTEREDROSTER LolClashPlayerState = "REGISTERED_ROSTER"

	// LolClashPlayerStateBRACKETROSTER captures enum value "BRACKET_ROSTER"
	LolClashPlayerStateBRACKETROSTER LolClashPlayerState = "BRACKET_ROSTER"

	// LolClashPlayerStateELIMINATED captures enum value "ELIMINATED"
	LolClashPlayerStateELIMINATED LolClashPlayerState = "ELIMINATED"
)

// for schema
var lolClashPlayerStateEnum []interface{}

func init() {
	var res []LolClashPlayerState
	if err := json.Unmarshal([]byte(`["NO_ROSTER","PENDING_ROSTER","REGISTERED_ROSTER","BRACKET_ROSTER","ELIMINATED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolClashPlayerStateEnum = append(lolClashPlayerStateEnum, v)
	}
}

func (m LolClashPlayerState) validateLolClashPlayerStateEnum(path, location string, value LolClashPlayerState) error {
	if err := validate.Enum(path, location, value, lolClashPlayerStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol clash player state
func (m LolClashPlayerState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolClashPlayerStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
