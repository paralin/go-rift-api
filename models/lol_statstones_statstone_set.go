// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolStatstonesStatstoneSet lol statstones statstone set
// swagger:model LolStatstonesStatstoneSet
type LolStatstonesStatstoneSet struct {

	// inventory type
	InventoryType string `json:"inventoryType,omitempty"`

	// item Id
	ItemID int32 `json:"itemId,omitempty"`

	// item instance ID
	ItemInstanceID string `json:"itemInstanceID,omitempty"`

	// milestones passed
	MilestonesPassed int32 `json:"milestonesPassed,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// owned from packs
	OwnedFromPacks []*LolStatstonesGameDataStatstonePack `json:"ownedFromPacks"`

	// prices
	Prices []*LolStatstonesPriceInfo `json:"prices"`

	// statstones
	Statstones []*LolStatstonesStatstone `json:"statstones"`

	// stones owned
	StonesOwned int32 `json:"stonesOwned,omitempty"`

	// sub inventory type
	SubInventoryType string `json:"subInventoryType,omitempty"`
}

// Validate validates this lol statstones statstone set
func (m *LolStatstonesStatstoneSet) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOwnedFromPacks(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePrices(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateStatstones(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolStatstonesStatstoneSet) validateOwnedFromPacks(formats strfmt.Registry) error {

	if swag.IsZero(m.OwnedFromPacks) { // not required
		return nil
	}

	for i := 0; i < len(m.OwnedFromPacks); i++ {
		if swag.IsZero(m.OwnedFromPacks[i]) { // not required
			continue
		}

		if m.OwnedFromPacks[i] != nil {
			if err := m.OwnedFromPacks[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("ownedFromPacks" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolStatstonesStatstoneSet) validatePrices(formats strfmt.Registry) error {

	if swag.IsZero(m.Prices) { // not required
		return nil
	}

	for i := 0; i < len(m.Prices); i++ {
		if swag.IsZero(m.Prices[i]) { // not required
			continue
		}

		if m.Prices[i] != nil {
			if err := m.Prices[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("prices" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolStatstonesStatstoneSet) validateStatstones(formats strfmt.Registry) error {

	if swag.IsZero(m.Statstones) { // not required
		return nil
	}

	for i := 0; i < len(m.Statstones); i++ {
		if swag.IsZero(m.Statstones[i]) { // not required
			continue
		}

		if m.Statstones[i] != nil {
			if err := m.Statstones[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("statstones" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolStatstonesStatstoneSet) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolStatstonesStatstoneSet) UnmarshalBinary(b []byte) error {
	var res LolStatstonesStatstoneSet
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
