// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolRankedLeagueLadderInfo lol ranked league ladder info
// swagger:model LolRankedLeagueLadderInfo
type LolRankedLeagueLadderInfo struct {

	// divisions
	Divisions []*LolRankedLeagueDivisionInfo `json:"divisions"`

	// next apex update millis
	NextApexUpdateMillis int64 `json:"nextApexUpdateMillis,omitempty"`

	// provisional game threshold
	ProvisionalGameThreshold int32 `json:"provisionalGameThreshold,omitempty"`

	// queue type
	QueueType LolRankedLeagueQueueType `json:"queueType,omitempty"`

	// requested ranked entry
	RequestedRankedEntry *LolRankedLeagueStanding `json:"requestedRankedEntry,omitempty"`

	// tier
	Tier LolRankedLeagueTier `json:"tier,omitempty"`
}

// Validate validates this lol ranked league ladder info
func (m *LolRankedLeagueLadderInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDivisions(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateQueueType(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRequestedRankedEntry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTier(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolRankedLeagueLadderInfo) validateDivisions(formats strfmt.Registry) error {

	if swag.IsZero(m.Divisions) { // not required
		return nil
	}

	for i := 0; i < len(m.Divisions); i++ {
		if swag.IsZero(m.Divisions[i]) { // not required
			continue
		}

		if m.Divisions[i] != nil {
			if err := m.Divisions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("divisions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolRankedLeagueLadderInfo) validateQueueType(formats strfmt.Registry) error {

	if swag.IsZero(m.QueueType) { // not required
		return nil
	}

	if err := m.QueueType.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("queueType")
		}
		return err
	}

	return nil
}

func (m *LolRankedLeagueLadderInfo) validateRequestedRankedEntry(formats strfmt.Registry) error {

	if swag.IsZero(m.RequestedRankedEntry) { // not required
		return nil
	}

	if m.RequestedRankedEntry != nil {
		if err := m.RequestedRankedEntry.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("requestedRankedEntry")
			}
			return err
		}
	}

	return nil
}

func (m *LolRankedLeagueLadderInfo) validateTier(formats strfmt.Registry) error {

	if swag.IsZero(m.Tier) { // not required
		return nil
	}

	if err := m.Tier.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("tier")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolRankedLeagueLadderInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolRankedLeagueLadderInfo) UnmarshalBinary(b []byte) error {
	var res LolRankedLeagueLadderInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
