// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolPlayerLevelUpLoginSessionStates lol player level up login session states
// swagger:model LolPlayerLevelUpLoginSessionStates
type LolPlayerLevelUpLoginSessionStates string

const (

	// LolPlayerLevelUpLoginSessionStatesINPROGRESS captures enum value "IN_PROGRESS"
	LolPlayerLevelUpLoginSessionStatesINPROGRESS LolPlayerLevelUpLoginSessionStates = "IN_PROGRESS"

	// LolPlayerLevelUpLoginSessionStatesSUCCEEDED captures enum value "SUCCEEDED"
	LolPlayerLevelUpLoginSessionStatesSUCCEEDED LolPlayerLevelUpLoginSessionStates = "SUCCEEDED"

	// LolPlayerLevelUpLoginSessionStatesLOGGINGOUT captures enum value "LOGGING_OUT"
	LolPlayerLevelUpLoginSessionStatesLOGGINGOUT LolPlayerLevelUpLoginSessionStates = "LOGGING_OUT"

	// LolPlayerLevelUpLoginSessionStatesERROR captures enum value "ERROR"
	LolPlayerLevelUpLoginSessionStatesERROR LolPlayerLevelUpLoginSessionStates = "ERROR"
)

// for schema
var lolPlayerLevelUpLoginSessionStatesEnum []interface{}

func init() {
	var res []LolPlayerLevelUpLoginSessionStates
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","SUCCEEDED","LOGGING_OUT","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolPlayerLevelUpLoginSessionStatesEnum = append(lolPlayerLevelUpLoginSessionStatesEnum, v)
	}
}

func (m LolPlayerLevelUpLoginSessionStates) validateLolPlayerLevelUpLoginSessionStatesEnum(path, location string, value LolPlayerLevelUpLoginSessionStates) error {
	if err := validate.Enum(path, location, value, lolPlayerLevelUpLoginSessionStatesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol player level up login session states
func (m LolPlayerLevelUpLoginSessionStates) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolPlayerLevelUpLoginSessionStatesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
