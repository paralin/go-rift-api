// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// VoiceChatCaptureDevicePermissionStatus voice chat capture device permission status
// swagger:model VoiceChatCaptureDevicePermissionStatus
type VoiceChatCaptureDevicePermissionStatus string

const (

	// VoiceChatCaptureDevicePermissionStatusPromptForPermission captures enum value "promptForPermission"
	VoiceChatCaptureDevicePermissionStatusPromptForPermission VoiceChatCaptureDevicePermissionStatus = "promptForPermission"

	// VoiceChatCaptureDevicePermissionStatusPermissionDenied captures enum value "permissionDenied"
	VoiceChatCaptureDevicePermissionStatusPermissionDenied VoiceChatCaptureDevicePermissionStatus = "permissionDenied"

	// VoiceChatCaptureDevicePermissionStatusPermissionGranted captures enum value "permissionGranted"
	VoiceChatCaptureDevicePermissionStatusPermissionGranted VoiceChatCaptureDevicePermissionStatus = "permissionGranted"
)

// for schema
var voiceChatCaptureDevicePermissionStatusEnum []interface{}

func init() {
	var res []VoiceChatCaptureDevicePermissionStatus
	if err := json.Unmarshal([]byte(`["promptForPermission","permissionDenied","permissionGranted"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		voiceChatCaptureDevicePermissionStatusEnum = append(voiceChatCaptureDevicePermissionStatusEnum, v)
	}
}

func (m VoiceChatCaptureDevicePermissionStatus) validateVoiceChatCaptureDevicePermissionStatusEnum(path, location string, value VoiceChatCaptureDevicePermissionStatus) error {
	if err := validate.Enum(path, location, value, voiceChatCaptureDevicePermissionStatusEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this voice chat capture device permission status
func (m VoiceChatCaptureDevicePermissionStatus) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVoiceChatCaptureDevicePermissionStatusEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
