// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolClashNotifyReason lol clash notify reason
// swagger:model LolClashNotifyReason
type LolClashNotifyReason string

const (

	// LolClashNotifyReasonSUGGESTION captures enum value "SUGGESTION"
	LolClashNotifyReasonSUGGESTION LolClashNotifyReason = "SUGGESTION"

	// LolClashNotifyReasonDECLINESUGGESTION captures enum value "DECLINE_SUGGESTION"
	LolClashNotifyReasonDECLINESUGGESTION LolClashNotifyReason = "DECLINE_SUGGESTION"

	// LolClashNotifyReasonACCEPTSUGGESTION captures enum value "ACCEPT_SUGGESTION"
	LolClashNotifyReasonACCEPTSUGGESTION LolClashNotifyReason = "ACCEPT_SUGGESTION"

	// LolClashNotifyReasonREVOKESUGGESTION captures enum value "REVOKE_SUGGESTION"
	LolClashNotifyReasonREVOKESUGGESTION LolClashNotifyReason = "REVOKE_SUGGESTION"

	// LolClashNotifyReasonREADY captures enum value "READY"
	LolClashNotifyReasonREADY LolClashNotifyReason = "READY"

	// LolClashNotifyReasonUNREADY captures enum value "UNREADY"
	LolClashNotifyReasonUNREADY LolClashNotifyReason = "UNREADY"

	// LolClashNotifyReasonOWNERCLOSE captures enum value "OWNER_CLOSE"
	LolClashNotifyReasonOWNERCLOSE LolClashNotifyReason = "OWNER_CLOSE"

	// LolClashNotifyReasonDISMISS captures enum value "DISMISS"
	LolClashNotifyReasonDISMISS LolClashNotifyReason = "DISMISS"

	// LolClashNotifyReasonROSTERDELETE captures enum value "ROSTER_DELETE"
	LolClashNotifyReasonROSTERDELETE LolClashNotifyReason = "ROSTER_DELETE"

	// LolClashNotifyReasonOWNERTRANSFER captures enum value "OWNER_TRANSFER"
	LolClashNotifyReasonOWNERTRANSFER LolClashNotifyReason = "OWNER_TRANSFER"

	// LolClashNotifyReasonCHANGELOGO captures enum value "CHANGE_LOGO"
	LolClashNotifyReasonCHANGELOGO LolClashNotifyReason = "CHANGE_LOGO"

	// LolClashNotifyReasonCHANGENAME captures enum value "CHANGE_NAME"
	LolClashNotifyReasonCHANGENAME LolClashNotifyReason = "CHANGE_NAME"

	// LolClashNotifyReasonCHANGESHORTNAME captures enum value "CHANGE_SHORTNAME"
	LolClashNotifyReasonCHANGESHORTNAME LolClashNotifyReason = "CHANGE_SHORTNAME"

	// LolClashNotifyReasonCHANGEPOSITION captures enum value "CHANGE_POSITION"
	LolClashNotifyReasonCHANGEPOSITION LolClashNotifyReason = "CHANGE_POSITION"

	// LolClashNotifyReasonCHANGENAMETAGLOGO captures enum value "CHANGE_NAMETAGLOGO"
	LolClashNotifyReasonCHANGENAMETAGLOGO LolClashNotifyReason = "CHANGE_NAMETAGLOGO"

	// LolClashNotifyReasonINVITE captures enum value "INVITE"
	LolClashNotifyReasonINVITE LolClashNotifyReason = "INVITE"

	// LolClashNotifyReasonRESENTINVITE captures enum value "RESENT_INVITE"
	LolClashNotifyReasonRESENTINVITE LolClashNotifyReason = "RESENT_INVITE"

	// LolClashNotifyReasonDECLINEINVITE captures enum value "DECLINE_INVITE"
	LolClashNotifyReasonDECLINEINVITE LolClashNotifyReason = "DECLINE_INVITE"

	// LolClashNotifyReasonACCEPTINVITE captures enum value "ACCEPT_INVITE"
	LolClashNotifyReasonACCEPTINVITE LolClashNotifyReason = "ACCEPT_INVITE"

	// LolClashNotifyReasonREVOKEINVITE captures enum value "REVOKE_INVITE"
	LolClashNotifyReasonREVOKEINVITE LolClashNotifyReason = "REVOKE_INVITE"

	// LolClashNotifyReasonLEAVE captures enum value "LEAVE"
	LolClashNotifyReasonLEAVE LolClashNotifyReason = "LEAVE"

	// LolClashNotifyReasonCAPTAINLEAVE captures enum value "CAPTAIN_LEAVE"
	LolClashNotifyReasonCAPTAINLEAVE LolClashNotifyReason = "CAPTAIN_LEAVE"

	// LolClashNotifyReasonKICK captures enum value "KICK"
	LolClashNotifyReasonKICK LolClashNotifyReason = "KICK"

	// LolClashNotifyReasonSETTICKET captures enum value "SET_TICKET"
	LolClashNotifyReasonSETTICKET LolClashNotifyReason = "SET_TICKET"

	// LolClashNotifyReasonOFFERTICKET captures enum value "OFFER_TICKET"
	LolClashNotifyReasonOFFERTICKET LolClashNotifyReason = "OFFER_TICKET"

	// LolClashNotifyReasonREVOKEDTICKET captures enum value "REVOKED_TICKET"
	LolClashNotifyReasonREVOKEDTICKET LolClashNotifyReason = "REVOKED_TICKET"

	// LolClashNotifyReasonDECLINETICKET captures enum value "DECLINE_TICKET"
	LolClashNotifyReasonDECLINETICKET LolClashNotifyReason = "DECLINE_TICKET"

	// LolClashNotifyReasonACCEPTTICKET captures enum value "ACCEPT_TICKET"
	LolClashNotifyReasonACCEPTTICKET LolClashNotifyReason = "ACCEPT_TICKET"

	// LolClashNotifyReasonREWARDGRANTFAILED captures enum value "REWARD_GRANT_FAILED"
	LolClashNotifyReasonREWARDGRANTFAILED LolClashNotifyReason = "REWARD_GRANT_FAILED"

	// LolClashNotifyReasonREWARDGRANTRETRY captures enum value "REWARD_GRANT_RETRY"
	LolClashNotifyReasonREWARDGRANTRETRY LolClashNotifyReason = "REWARD_GRANT_RETRY"

	// LolClashNotifyReasonREVERTEDREGISTRATION captures enum value "REVERTED_REGISTRATION"
	LolClashNotifyReasonREVERTEDREGISTRATION LolClashNotifyReason = "REVERTED_REGISTRATION"
)

// for schema
var lolClashNotifyReasonEnum []interface{}

func init() {
	var res []LolClashNotifyReason
	if err := json.Unmarshal([]byte(`["SUGGESTION","DECLINE_SUGGESTION","ACCEPT_SUGGESTION","REVOKE_SUGGESTION","READY","UNREADY","OWNER_CLOSE","DISMISS","ROSTER_DELETE","OWNER_TRANSFER","CHANGE_LOGO","CHANGE_NAME","CHANGE_SHORTNAME","CHANGE_POSITION","CHANGE_NAMETAGLOGO","INVITE","RESENT_INVITE","DECLINE_INVITE","ACCEPT_INVITE","REVOKE_INVITE","LEAVE","CAPTAIN_LEAVE","KICK","SET_TICKET","OFFER_TICKET","REVOKED_TICKET","DECLINE_TICKET","ACCEPT_TICKET","REWARD_GRANT_FAILED","REWARD_GRANT_RETRY","REVERTED_REGISTRATION"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolClashNotifyReasonEnum = append(lolClashNotifyReasonEnum, v)
	}
}

func (m LolClashNotifyReason) validateLolClashNotifyReasonEnum(path, location string, value LolClashNotifyReason) error {
	if err := validate.Enum(path, location, value, lolClashNotifyReasonEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol clash notify reason
func (m LolClashNotifyReason) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolClashNotifyReasonEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
