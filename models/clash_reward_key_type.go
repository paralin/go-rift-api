// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ClashRewardKeyType clash reward key type
// swagger:model ClashRewardKeyType
type ClashRewardKeyType string

const (

	// ClashRewardKeyTypeTIER captures enum value "TIER"
	ClashRewardKeyTypeTIER ClashRewardKeyType = "TIER"

	// ClashRewardKeyTypeCUP captures enum value "CUP"
	ClashRewardKeyTypeCUP ClashRewardKeyType = "CUP"

	// ClashRewardKeyTypeTICKETCOUNT captures enum value "TICKET_COUNT"
	ClashRewardKeyTypeTICKETCOUNT ClashRewardKeyType = "TICKET_COUNT"

	// ClashRewardKeyTypeTICKETTYPE captures enum value "TICKET_TYPE"
	ClashRewardKeyTypeTICKETTYPE ClashRewardKeyType = "TICKET_TYPE"

	// ClashRewardKeyTypeLOWESTPOSITION captures enum value "LOWEST_POSITION"
	ClashRewardKeyTypeLOWESTPOSITION ClashRewardKeyType = "LOWEST_POSITION"

	// ClashRewardKeyTypeTOURNAMENTWINPOS captures enum value "TOURNAMENT_WIN_POS"
	ClashRewardKeyTypeTOURNAMENTWINPOS ClashRewardKeyType = "TOURNAMENT_WIN_POS"

	// ClashRewardKeyTypeWINS captures enum value "WINS"
	ClashRewardKeyTypeWINS ClashRewardKeyType = "WINS"

	// ClashRewardKeyTypePOINTS captures enum value "POINTS"
	ClashRewardKeyTypePOINTS ClashRewardKeyType = "POINTS"

	// ClashRewardKeyTypeTHEMEVP captures enum value "THEME_VP"
	ClashRewardKeyTypeTHEMEVP ClashRewardKeyType = "THEME_VP"

	// ClashRewardKeyTypeSEASONVP captures enum value "SEASON_VP"
	ClashRewardKeyTypeSEASONVP ClashRewardKeyType = "SEASON_VP"

	// ClashRewardKeyTypeSEASONFLAGCOUNT captures enum value "SEASON_FLAG_COUNT"
	ClashRewardKeyTypeSEASONFLAGCOUNT ClashRewardKeyType = "SEASON_FLAG_COUNT"

	// ClashRewardKeyTypeTOCSTATE captures enum value "TOC_STATE"
	ClashRewardKeyTypeTOCSTATE ClashRewardKeyType = "TOC_STATE"
)

// for schema
var clashRewardKeyTypeEnum []interface{}

func init() {
	var res []ClashRewardKeyType
	if err := json.Unmarshal([]byte(`["TIER","CUP","TICKET_COUNT","TICKET_TYPE","LOWEST_POSITION","TOURNAMENT_WIN_POS","WINS","POINTS","THEME_VP","SEASON_VP","SEASON_FLAG_COUNT","TOC_STATE"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clashRewardKeyTypeEnum = append(clashRewardKeyTypeEnum, v)
	}
}

func (m ClashRewardKeyType) validateClashRewardKeyTypeEnum(path, location string, value ClashRewardKeyType) error {
	if err := validate.Enum(path, location, value, clashRewardKeyTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this clash reward key type
func (m ClashRewardKeyType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClashRewardKeyTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
