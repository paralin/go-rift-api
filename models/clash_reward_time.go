// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// ClashRewardTime clash reward time
// swagger:model ClashRewardTime
type ClashRewardTime string

const (

	// ClashRewardTimeNONE captures enum value "NONE"
	ClashRewardTimeNONE ClashRewardTime = "NONE"

	// ClashRewardTimeEOG captures enum value "EOG"
	ClashRewardTimeEOG ClashRewardTime = "EOG"

	// ClashRewardTimeEOB captures enum value "EOB"
	ClashRewardTimeEOB ClashRewardTime = "EOB"

	// ClashRewardTimeEOT captures enum value "EOT"
	ClashRewardTimeEOT ClashRewardTime = "EOT"
)

// for schema
var clashRewardTimeEnum []interface{}

func init() {
	var res []ClashRewardTime
	if err := json.Unmarshal([]byte(`["NONE","EOG","EOB","EOT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		clashRewardTimeEnum = append(clashRewardTimeEnum, v)
	}
}

func (m ClashRewardTime) validateClashRewardTimeEnum(path, location string, value ClashRewardTime) error {
	if err := validate.Enum(path, location, value, clashRewardTimeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this clash reward time
func (m ClashRewardTime) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateClashRewardTimeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
