// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolLobbyInvitationType lol lobby invitation type
// swagger:model LolLobbyInvitationType
type LolLobbyInvitationType string

const (

	// LolLobbyInvitationTypeInvalid captures enum value "invalid"
	LolLobbyInvitationTypeInvalid LolLobbyInvitationType = "invalid"

	// LolLobbyInvitationTypeLobby captures enum value "lobby"
	LolLobbyInvitationTypeLobby LolLobbyInvitationType = "lobby"

	// LolLobbyInvitationTypeParty captures enum value "party"
	LolLobbyInvitationTypeParty LolLobbyInvitationType = "party"
)

// for schema
var lolLobbyInvitationTypeEnum []interface{}

func init() {
	var res []LolLobbyInvitationType
	if err := json.Unmarshal([]byte(`["invalid","lobby","party"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolLobbyInvitationTypeEnum = append(lolLobbyInvitationTypeEnum, v)
	}
}

func (m LolLobbyInvitationType) validateLolLobbyInvitationTypeEnum(path, location string, value LolLobbyInvitationType) error {
	if err := validate.Enum(path, location, value, lolLobbyInvitationTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol lobby invitation type
func (m LolLobbyInvitationType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolLobbyInvitationTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
