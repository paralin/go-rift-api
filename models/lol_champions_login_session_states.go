// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolChampionsLoginSessionStates lol champions login session states
// swagger:model LolChampionsLoginSessionStates
type LolChampionsLoginSessionStates string

const (

	// LolChampionsLoginSessionStatesINPROGRESS captures enum value "IN_PROGRESS"
	LolChampionsLoginSessionStatesINPROGRESS LolChampionsLoginSessionStates = "IN_PROGRESS"

	// LolChampionsLoginSessionStatesSUCCEEDED captures enum value "SUCCEEDED"
	LolChampionsLoginSessionStatesSUCCEEDED LolChampionsLoginSessionStates = "SUCCEEDED"

	// LolChampionsLoginSessionStatesLOGGINGOUT captures enum value "LOGGING_OUT"
	LolChampionsLoginSessionStatesLOGGINGOUT LolChampionsLoginSessionStates = "LOGGING_OUT"

	// LolChampionsLoginSessionStatesERROR captures enum value "ERROR"
	LolChampionsLoginSessionStatesERROR LolChampionsLoginSessionStates = "ERROR"
)

// for schema
var lolChampionsLoginSessionStatesEnum []interface{}

func init() {
	var res []LolChampionsLoginSessionStates
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","SUCCEEDED","LOGGING_OUT","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolChampionsLoginSessionStatesEnum = append(lolChampionsLoginSessionStatesEnum, v)
	}
}

func (m LolChampionsLoginSessionStates) validateLolChampionsLoginSessionStatesEnum(path, location string, value LolChampionsLoginSessionStates) error {
	if err := validate.Enum(path, location, value, lolChampionsLoginSessionStatesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol champions login session states
func (m LolChampionsLoginSessionStates) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolChampionsLoginSessionStatesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
