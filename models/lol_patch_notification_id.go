// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolPatchNotificationID lol patch notification Id
// swagger:model LolPatchNotificationId
type LolPatchNotificationID string

const (

	// LolPatchNotificationIDUnspecifiedError captures enum value "UnspecifiedError"
	LolPatchNotificationIDUnspecifiedError LolPatchNotificationID = "UnspecifiedError"

	// LolPatchNotificationIDConnectionError captures enum value "ConnectionError"
	LolPatchNotificationIDConnectionError LolPatchNotificationID = "ConnectionError"

	// LolPatchNotificationIDMissingFilesError captures enum value "MissingFilesError"
	LolPatchNotificationIDMissingFilesError LolPatchNotificationID = "MissingFilesError"

	// LolPatchNotificationIDFailedToWriteError captures enum value "FailedToWriteError"
	LolPatchNotificationIDFailedToWriteError LolPatchNotificationID = "FailedToWriteError"

	// LolPatchNotificationIDWillRestoreClientBackupOnRestart captures enum value "WillRestoreClientBackupOnRestart"
	LolPatchNotificationIDWillRestoreClientBackupOnRestart LolPatchNotificationID = "WillRestoreClientBackupOnRestart"

	// LolPatchNotificationIDDidRestoreClientBackup captures enum value "DidRestoreClientBackup"
	LolPatchNotificationIDDidRestoreClientBackup LolPatchNotificationID = "DidRestoreClientBackup"

	// LolPatchNotificationIDNotEnoughDiskSpace captures enum value "NotEnoughDiskSpace"
	LolPatchNotificationIDNotEnoughDiskSpace LolPatchNotificationID = "NotEnoughDiskSpace"

	// LolPatchNotificationIDBrokenPermissions captures enum value "BrokenPermissions"
	LolPatchNotificationIDBrokenPermissions LolPatchNotificationID = "BrokenPermissions"
)

// for schema
var lolPatchNotificationIdEnum []interface{}

func init() {
	var res []LolPatchNotificationID
	if err := json.Unmarshal([]byte(`["UnspecifiedError","ConnectionError","MissingFilesError","FailedToWriteError","WillRestoreClientBackupOnRestart","DidRestoreClientBackup","NotEnoughDiskSpace","BrokenPermissions"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolPatchNotificationIdEnum = append(lolPatchNotificationIdEnum, v)
	}
}

func (m LolPatchNotificationID) validateLolPatchNotificationIDEnum(path, location string, value LolPatchNotificationID) error {
	if err := validate.Enum(path, location, value, lolPatchNotificationIdEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol patch notification Id
func (m LolPatchNotificationID) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolPatchNotificationIDEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
