// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolChatLeagueQueueType lol chat league queue type
// swagger:model LolChatLeagueQueueType
type LolChatLeagueQueueType string

const (

	// LolChatLeagueQueueTypeNONE captures enum value "NONE"
	LolChatLeagueQueueTypeNONE LolChatLeagueQueueType = "NONE"

	// LolChatLeagueQueueTypeRANKEDSOLO5x5 captures enum value "RANKED_SOLO_5x5"
	LolChatLeagueQueueTypeRANKEDSOLO5x5 LolChatLeagueQueueType = "RANKED_SOLO_5x5"

	// LolChatLeagueQueueTypeRANKEDFLEXSR captures enum value "RANKED_FLEX_SR"
	LolChatLeagueQueueTypeRANKEDFLEXSR LolChatLeagueQueueType = "RANKED_FLEX_SR"

	// LolChatLeagueQueueTypeRANKEDFLEXTT captures enum value "RANKED_FLEX_TT"
	LolChatLeagueQueueTypeRANKEDFLEXTT LolChatLeagueQueueType = "RANKED_FLEX_TT"

	// LolChatLeagueQueueTypeRANKEDTFT captures enum value "RANKED_TFT"
	LolChatLeagueQueueTypeRANKEDTFT LolChatLeagueQueueType = "RANKED_TFT"
)

// for schema
var lolChatLeagueQueueTypeEnum []interface{}

func init() {
	var res []LolChatLeagueQueueType
	if err := json.Unmarshal([]byte(`["NONE","RANKED_SOLO_5x5","RANKED_FLEX_SR","RANKED_FLEX_TT","RANKED_TFT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolChatLeagueQueueTypeEnum = append(lolChatLeagueQueueTypeEnum, v)
	}
}

func (m LolChatLeagueQueueType) validateLolChatLeagueQueueTypeEnum(path, location string, value LolChatLeagueQueueType) error {
	if err := validate.Enum(path, location, value, lolChatLeagueQueueTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol chat league queue type
func (m LolChatLeagueQueueType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolChatLeagueQueueTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
