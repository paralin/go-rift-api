// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolPerksChampSelectTradeState lol perks champ select trade state
// swagger:model LolPerksChampSelectTradeState
type LolPerksChampSelectTradeState string

const (

	// LolPerksChampSelectTradeStateAVAILABLE captures enum value "AVAILABLE"
	LolPerksChampSelectTradeStateAVAILABLE LolPerksChampSelectTradeState = "AVAILABLE"

	// LolPerksChampSelectTradeStateBUSY captures enum value "BUSY"
	LolPerksChampSelectTradeStateBUSY LolPerksChampSelectTradeState = "BUSY"

	// LolPerksChampSelectTradeStateINVALID captures enum value "INVALID"
	LolPerksChampSelectTradeStateINVALID LolPerksChampSelectTradeState = "INVALID"

	// LolPerksChampSelectTradeStateRECEIVED captures enum value "RECEIVED"
	LolPerksChampSelectTradeStateRECEIVED LolPerksChampSelectTradeState = "RECEIVED"

	// LolPerksChampSelectTradeStateSENT captures enum value "SENT"
	LolPerksChampSelectTradeStateSENT LolPerksChampSelectTradeState = "SENT"
)

// for schema
var lolPerksChampSelectTradeStateEnum []interface{}

func init() {
	var res []LolPerksChampSelectTradeState
	if err := json.Unmarshal([]byte(`["AVAILABLE","BUSY","INVALID","RECEIVED","SENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolPerksChampSelectTradeStateEnum = append(lolPerksChampSelectTradeStateEnum, v)
	}
}

func (m LolPerksChampSelectTradeState) validateLolPerksChampSelectTradeStateEnum(path, location string, value LolPerksChampSelectTradeState) error {
	if err := validate.Enum(path, location, value, lolPerksChampSelectTradeStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol perks champ select trade state
func (m LolPerksChampSelectTradeState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolPerksChampSelectTradeStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
