// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolHeartbeatLoginSessionStates lol heartbeat login session states
// swagger:model LolHeartbeatLoginSessionStates
type LolHeartbeatLoginSessionStates string

const (

	// LolHeartbeatLoginSessionStatesINPROGRESS captures enum value "IN_PROGRESS"
	LolHeartbeatLoginSessionStatesINPROGRESS LolHeartbeatLoginSessionStates = "IN_PROGRESS"

	// LolHeartbeatLoginSessionStatesSUCCEEDED captures enum value "SUCCEEDED"
	LolHeartbeatLoginSessionStatesSUCCEEDED LolHeartbeatLoginSessionStates = "SUCCEEDED"

	// LolHeartbeatLoginSessionStatesLOGGINGOUT captures enum value "LOGGING_OUT"
	LolHeartbeatLoginSessionStatesLOGGINGOUT LolHeartbeatLoginSessionStates = "LOGGING_OUT"

	// LolHeartbeatLoginSessionStatesERROR captures enum value "ERROR"
	LolHeartbeatLoginSessionStatesERROR LolHeartbeatLoginSessionStates = "ERROR"
)

// for schema
var lolHeartbeatLoginSessionStatesEnum []interface{}

func init() {
	var res []LolHeartbeatLoginSessionStates
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","SUCCEEDED","LOGGING_OUT","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolHeartbeatLoginSessionStatesEnum = append(lolHeartbeatLoginSessionStatesEnum, v)
	}
}

func (m LolHeartbeatLoginSessionStates) validateLolHeartbeatLoginSessionStatesEnum(path, location string, value LolHeartbeatLoginSessionStates) error {
	if err := validate.Enum(path, location, value, lolHeartbeatLoginSessionStatesEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol heartbeat login session states
func (m LolHeartbeatLoginSessionStates) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolHeartbeatLoginSessionStatesEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
