// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolChatConversationResource lol chat conversation resource
// swagger:model LolChatConversationResource
type LolChatConversationResource struct {

	// game name
	GameName string `json:"gameName,omitempty"`

	// game tag
	GameTag string `json:"gameTag,omitempty"`

	// id
	ID string `json:"id,omitempty"`

	// inviter Id
	InviterID string `json:"inviterId,omitempty"`

	// is muted
	IsMuted bool `json:"isMuted,omitempty"`

	// last message
	LastMessage *LolChatConversationMessageResource `json:"lastMessage,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// pid
	Pid string `json:"pid,omitempty"`

	// target region
	TargetRegion string `json:"targetRegion,omitempty"`

	// type
	Type string `json:"type,omitempty"`

	// unread message count
	UnreadMessageCount int64 `json:"unreadMessageCount,omitempty"`
}

// Validate validates this lol chat conversation resource
func (m *LolChatConversationResource) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLastMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolChatConversationResource) validateLastMessage(formats strfmt.Registry) error {

	if swag.IsZero(m.LastMessage) { // not required
		return nil
	}

	if m.LastMessage != nil {
		if err := m.LastMessage.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("lastMessage")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolChatConversationResource) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolChatConversationResource) UnmarshalBinary(b []byte) error {
	var res LolChatConversationResource
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
