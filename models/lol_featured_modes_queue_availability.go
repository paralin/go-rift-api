// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolFeaturedModesQueueAvailability lol featured modes queue availability
// swagger:model LolFeaturedModesQueueAvailability
type LolFeaturedModesQueueAvailability string

const (

	// LolFeaturedModesQueueAvailabilityAvailable captures enum value "Available"
	LolFeaturedModesQueueAvailabilityAvailable LolFeaturedModesQueueAvailability = "Available"

	// LolFeaturedModesQueueAvailabilityPlatformDisabled captures enum value "PlatformDisabled"
	LolFeaturedModesQueueAvailabilityPlatformDisabled LolFeaturedModesQueueAvailability = "PlatformDisabled"

	// LolFeaturedModesQueueAvailabilityDoesntMeetRequirements captures enum value "DoesntMeetRequirements"
	LolFeaturedModesQueueAvailabilityDoesntMeetRequirements LolFeaturedModesQueueAvailability = "DoesntMeetRequirements"
)

// for schema
var lolFeaturedModesQueueAvailabilityEnum []interface{}

func init() {
	var res []LolFeaturedModesQueueAvailability
	if err := json.Unmarshal([]byte(`["Available","PlatformDisabled","DoesntMeetRequirements"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolFeaturedModesQueueAvailabilityEnum = append(lolFeaturedModesQueueAvailabilityEnum, v)
	}
}

func (m LolFeaturedModesQueueAvailability) validateLolFeaturedModesQueueAvailabilityEnum(path, location string, value LolFeaturedModesQueueAvailability) error {
	if err := validate.Enum(path, location, value, lolFeaturedModesQueueAvailabilityEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol featured modes queue availability
func (m LolFeaturedModesQueueAvailability) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolFeaturedModesQueueAvailabilityEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
