// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolPlayerBehaviorNotificationSource lol player behavior notification source
// swagger:model LolPlayerBehaviorNotificationSource
type LolPlayerBehaviorNotificationSource string

const (

	// LolPlayerBehaviorNotificationSourceInvalid captures enum value "Invalid"
	LolPlayerBehaviorNotificationSourceInvalid LolPlayerBehaviorNotificationSource = "Invalid"

	// LolPlayerBehaviorNotificationSourceLogin captures enum value "Login"
	LolPlayerBehaviorNotificationSourceLogin LolPlayerBehaviorNotificationSource = "Login"

	// LolPlayerBehaviorNotificationSourceForcedShutdown captures enum value "ForcedShutdown"
	LolPlayerBehaviorNotificationSourceForcedShutdown LolPlayerBehaviorNotificationSource = "ForcedShutdown"

	// LolPlayerBehaviorNotificationSourceMessage captures enum value "Message"
	LolPlayerBehaviorNotificationSourceMessage LolPlayerBehaviorNotificationSource = "Message"
)

// for schema
var lolPlayerBehaviorNotificationSourceEnum []interface{}

func init() {
	var res []LolPlayerBehaviorNotificationSource
	if err := json.Unmarshal([]byte(`["Invalid","Login","ForcedShutdown","Message"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolPlayerBehaviorNotificationSourceEnum = append(lolPlayerBehaviorNotificationSourceEnum, v)
	}
}

func (m LolPlayerBehaviorNotificationSource) validateLolPlayerBehaviorNotificationSourceEnum(path, location string, value LolPlayerBehaviorNotificationSource) error {
	if err := validate.Enum(path, location, value, lolPlayerBehaviorNotificationSourceEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol player behavior notification source
func (m LolPlayerBehaviorNotificationSource) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolPlayerBehaviorNotificationSourceEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
