// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolClashPlaymodeRestrictedInfo lol clash playmode restricted info
// swagger:model LolClashPlaymodeRestrictedInfo
type LolClashPlaymodeRestrictedInfo struct {

	// is restricted
	IsRestricted bool `json:"isRestricted,omitempty"`

	// phase Id
	PhaseID int64 `json:"phaseId,omitempty"`

	// presence state
	PresenceState LolClashPresenceState `json:"presenceState,omitempty"`

	// ready for voice
	ReadyForVoice bool `json:"readyForVoice,omitempty"`

	// roster Id
	RosterID string `json:"rosterId,omitempty"`

	// tournament Id
	TournamentID int64 `json:"tournamentId,omitempty"`
}

// Validate validates this lol clash playmode restricted info
func (m *LolClashPlaymodeRestrictedInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePresenceState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolClashPlaymodeRestrictedInfo) validatePresenceState(formats strfmt.Registry) error {

	if swag.IsZero(m.PresenceState) { // not required
		return nil
	}

	if err := m.PresenceState.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("presenceState")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolClashPlaymodeRestrictedInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolClashPlaymodeRestrictedInfo) UnmarshalBinary(b []byte) error {
	var res LolClashPlaymodeRestrictedInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
