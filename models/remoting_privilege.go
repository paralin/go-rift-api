// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// RemotingPrivilege Well-known privilege levels for bindable functions.
// swagger:model RemotingPrivilege
type RemotingPrivilege string

const (

	// RemotingPrivilegeNone captures enum value "None"
	RemotingPrivilegeNone RemotingPrivilege = "None"

	// RemotingPrivilegeUser captures enum value "User"
	RemotingPrivilegeUser RemotingPrivilege = "User"

	// RemotingPrivilegeAdmin captures enum value "Admin"
	RemotingPrivilegeAdmin RemotingPrivilege = "Admin"

	// RemotingPrivilegeLocal captures enum value "Local"
	RemotingPrivilegeLocal RemotingPrivilege = "Local"
)

// for schema
var remotingPrivilegeEnum []interface{}

func init() {
	var res []RemotingPrivilege
	if err := json.Unmarshal([]byte(`["None","User","Admin","Local"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		remotingPrivilegeEnum = append(remotingPrivilegeEnum, v)
	}
}

func (m RemotingPrivilege) validateRemotingPrivilegeEnum(path, location string, value RemotingPrivilege) error {
	if err := validate.Enum(path, location, value, remotingPrivilegeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this remoting privilege
func (m RemotingPrivilege) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateRemotingPrivilegeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
