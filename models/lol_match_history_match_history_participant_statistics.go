// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// LolMatchHistoryMatchHistoryParticipantStatistics lol match history match history participant statistics
// swagger:model LolMatchHistoryMatchHistoryParticipantStatistics
type LolMatchHistoryMatchHistoryParticipantStatistics struct {

	// assists
	Assists int64 `json:"assists,omitempty"`

	// caused early surrender
	CausedEarlySurrender bool `json:"causedEarlySurrender,omitempty"`

	// champ level
	ChampLevel int64 `json:"champLevel,omitempty"`

	// combat player score
	CombatPlayerScore int64 `json:"combatPlayerScore,omitempty"`

	// damage dealt to objectives
	DamageDealtToObjectives int64 `json:"damageDealtToObjectives,omitempty"`

	// damage dealt to turrets
	DamageDealtToTurrets int64 `json:"damageDealtToTurrets,omitempty"`

	// damage self mitigated
	DamageSelfMitigated int64 `json:"damageSelfMitigated,omitempty"`

	// deaths
	Deaths int64 `json:"deaths,omitempty"`

	// double kills
	DoubleKills int64 `json:"doubleKills,omitempty"`

	// early surrender accomplice
	EarlySurrenderAccomplice bool `json:"earlySurrenderAccomplice,omitempty"`

	// first blood assist
	FirstBloodAssist bool `json:"firstBloodAssist,omitempty"`

	// first blood kill
	FirstBloodKill bool `json:"firstBloodKill,omitempty"`

	// first inhibitor assist
	FirstInhibitorAssist bool `json:"firstInhibitorAssist,omitempty"`

	// first inhibitor kill
	FirstInhibitorKill bool `json:"firstInhibitorKill,omitempty"`

	// first tower assist
	FirstTowerAssist bool `json:"firstTowerAssist,omitempty"`

	// first tower kill
	FirstTowerKill bool `json:"firstTowerKill,omitempty"`

	// game ended in early surrender
	GameEndedInEarlySurrender bool `json:"gameEndedInEarlySurrender,omitempty"`

	// game ended in surrender
	GameEndedInSurrender bool `json:"gameEndedInSurrender,omitempty"`

	// gold earned
	GoldEarned int64 `json:"goldEarned,omitempty"`

	// gold spent
	GoldSpent int64 `json:"goldSpent,omitempty"`

	// inhibitor kills
	InhibitorKills int64 `json:"inhibitorKills,omitempty"`

	// item0
	Item0 int64 `json:"item0,omitempty"`

	// item1
	Item1 int64 `json:"item1,omitempty"`

	// item2
	Item2 int64 `json:"item2,omitempty"`

	// item3
	Item3 int64 `json:"item3,omitempty"`

	// item4
	Item4 int64 `json:"item4,omitempty"`

	// item5
	Item5 int64 `json:"item5,omitempty"`

	// item6
	Item6 int64 `json:"item6,omitempty"`

	// killing sprees
	KillingSprees int64 `json:"killingSprees,omitempty"`

	// kills
	Kills int64 `json:"kills,omitempty"`

	// largest critical strike
	LargestCriticalStrike int64 `json:"largestCriticalStrike,omitempty"`

	// largest killing spree
	LargestKillingSpree int64 `json:"largestKillingSpree,omitempty"`

	// largest multi kill
	LargestMultiKill int64 `json:"largestMultiKill,omitempty"`

	// longest time spent living
	LongestTimeSpentLiving int64 `json:"longestTimeSpentLiving,omitempty"`

	// magic damage dealt
	MagicDamageDealt int64 `json:"magicDamageDealt,omitempty"`

	// magic damage dealt to champions
	MagicDamageDealtToChampions int64 `json:"magicDamageDealtToChampions,omitempty"`

	// magical damage taken
	MagicalDamageTaken int64 `json:"magicalDamageTaken,omitempty"`

	// neutral minions killed
	NeutralMinionsKilled int64 `json:"neutralMinionsKilled,omitempty"`

	// neutral minions killed enemy jungle
	NeutralMinionsKilledEnemyJungle int64 `json:"neutralMinionsKilledEnemyJungle,omitempty"`

	// neutral minions killed team jungle
	NeutralMinionsKilledTeamJungle int64 `json:"neutralMinionsKilledTeamJungle,omitempty"`

	// objective player score
	ObjectivePlayerScore int64 `json:"objectivePlayerScore,omitempty"`

	// participant Id
	ParticipantID int64 `json:"participantId,omitempty"`

	// penta kills
	PentaKills int64 `json:"pentaKills,omitempty"`

	// perk0
	Perk0 int64 `json:"perk0,omitempty"`

	// perk0 var1
	Perk0Var1 int64 `json:"perk0Var1,omitempty"`

	// perk0 var2
	Perk0Var2 int64 `json:"perk0Var2,omitempty"`

	// perk0 var3
	Perk0Var3 int64 `json:"perk0Var3,omitempty"`

	// perk1
	Perk1 int64 `json:"perk1,omitempty"`

	// perk1 var1
	Perk1Var1 int64 `json:"perk1Var1,omitempty"`

	// perk1 var2
	Perk1Var2 int64 `json:"perk1Var2,omitempty"`

	// perk1 var3
	Perk1Var3 int64 `json:"perk1Var3,omitempty"`

	// perk2
	Perk2 int64 `json:"perk2,omitempty"`

	// perk2 var1
	Perk2Var1 int64 `json:"perk2Var1,omitempty"`

	// perk2 var2
	Perk2Var2 int64 `json:"perk2Var2,omitempty"`

	// perk2 var3
	Perk2Var3 int64 `json:"perk2Var3,omitempty"`

	// perk3
	Perk3 int64 `json:"perk3,omitempty"`

	// perk3 var1
	Perk3Var1 int64 `json:"perk3Var1,omitempty"`

	// perk3 var2
	Perk3Var2 int64 `json:"perk3Var2,omitempty"`

	// perk3 var3
	Perk3Var3 int64 `json:"perk3Var3,omitempty"`

	// perk4
	Perk4 int64 `json:"perk4,omitempty"`

	// perk4 var1
	Perk4Var1 int64 `json:"perk4Var1,omitempty"`

	// perk4 var2
	Perk4Var2 int64 `json:"perk4Var2,omitempty"`

	// perk4 var3
	Perk4Var3 int64 `json:"perk4Var3,omitempty"`

	// perk5
	Perk5 int64 `json:"perk5,omitempty"`

	// perk5 var1
	Perk5Var1 int64 `json:"perk5Var1,omitempty"`

	// perk5 var2
	Perk5Var2 int64 `json:"perk5Var2,omitempty"`

	// perk5 var3
	Perk5Var3 int64 `json:"perk5Var3,omitempty"`

	// perk primary style
	PerkPrimaryStyle int64 `json:"perkPrimaryStyle,omitempty"`

	// perk sub style
	PerkSubStyle int64 `json:"perkSubStyle,omitempty"`

	// physical damage dealt
	PhysicalDamageDealt int64 `json:"physicalDamageDealt,omitempty"`

	// physical damage dealt to champions
	PhysicalDamageDealtToChampions int64 `json:"physicalDamageDealtToChampions,omitempty"`

	// physical damage taken
	PhysicalDamageTaken int64 `json:"physicalDamageTaken,omitempty"`

	// player score0
	PlayerScore0 int64 `json:"playerScore0,omitempty"`

	// player score1
	PlayerScore1 int64 `json:"playerScore1,omitempty"`

	// player score2
	PlayerScore2 int64 `json:"playerScore2,omitempty"`

	// player score3
	PlayerScore3 int64 `json:"playerScore3,omitempty"`

	// player score4
	PlayerScore4 int64 `json:"playerScore4,omitempty"`

	// player score5
	PlayerScore5 int64 `json:"playerScore5,omitempty"`

	// player score6
	PlayerScore6 int64 `json:"playerScore6,omitempty"`

	// player score7
	PlayerScore7 int64 `json:"playerScore7,omitempty"`

	// player score8
	PlayerScore8 int64 `json:"playerScore8,omitempty"`

	// player score9
	PlayerScore9 int64 `json:"playerScore9,omitempty"`

	// quadra kills
	QuadraKills int64 `json:"quadraKills,omitempty"`

	// sight wards bought in game
	SightWardsBoughtInGame int64 `json:"sightWardsBoughtInGame,omitempty"`

	// team early surrendered
	TeamEarlySurrendered bool `json:"teamEarlySurrendered,omitempty"`

	// time c cing others
	TimeCCingOthers int64 `json:"timeCCingOthers,omitempty"`

	// total damage dealt
	TotalDamageDealt int64 `json:"totalDamageDealt,omitempty"`

	// total damage dealt to champions
	TotalDamageDealtToChampions int64 `json:"totalDamageDealtToChampions,omitempty"`

	// total damage taken
	TotalDamageTaken int64 `json:"totalDamageTaken,omitempty"`

	// total heal
	TotalHeal int64 `json:"totalHeal,omitempty"`

	// total minions killed
	TotalMinionsKilled int64 `json:"totalMinionsKilled,omitempty"`

	// total player score
	TotalPlayerScore int64 `json:"totalPlayerScore,omitempty"`

	// total score rank
	TotalScoreRank int64 `json:"totalScoreRank,omitempty"`

	// total time crowd control dealt
	TotalTimeCrowdControlDealt int64 `json:"totalTimeCrowdControlDealt,omitempty"`

	// total units healed
	TotalUnitsHealed int64 `json:"totalUnitsHealed,omitempty"`

	// triple kills
	TripleKills int64 `json:"tripleKills,omitempty"`

	// true damage dealt
	TrueDamageDealt int64 `json:"trueDamageDealt,omitempty"`

	// true damage dealt to champions
	TrueDamageDealtToChampions int64 `json:"trueDamageDealtToChampions,omitempty"`

	// true damage taken
	TrueDamageTaken int64 `json:"trueDamageTaken,omitempty"`

	// turret kills
	TurretKills int64 `json:"turretKills,omitempty"`

	// unreal kills
	UnrealKills int64 `json:"unrealKills,omitempty"`

	// vision score
	VisionScore int64 `json:"visionScore,omitempty"`

	// vision wards bought in game
	VisionWardsBoughtInGame int64 `json:"visionWardsBoughtInGame,omitempty"`

	// wards killed
	WardsKilled int64 `json:"wardsKilled,omitempty"`

	// wards placed
	WardsPlaced int64 `json:"wardsPlaced,omitempty"`

	// win
	Win bool `json:"win,omitempty"`
}

// Validate validates this lol match history match history participant statistics
func (m *LolMatchHistoryMatchHistoryParticipantStatistics) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *LolMatchHistoryMatchHistoryParticipantStatistics) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolMatchHistoryMatchHistoryParticipantStatistics) UnmarshalBinary(b []byte) error {
	var res LolMatchHistoryMatchHistoryParticipantStatistics
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
