// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolMatchHistoryMatchHistoryParticipantFrame lol match history match history participant frame
// swagger:model LolMatchHistoryMatchHistoryParticipantFrame
type LolMatchHistoryMatchHistoryParticipantFrame struct {

	// current gold
	CurrentGold int32 `json:"currentGold,omitempty"`

	// dominion score
	DominionScore int64 `json:"dominionScore,omitempty"`

	// jungle minions killed
	JungleMinionsKilled int64 `json:"jungleMinionsKilled,omitempty"`

	// level
	Level int64 `json:"level,omitempty"`

	// minions killed
	MinionsKilled int64 `json:"minionsKilled,omitempty"`

	// participant Id
	ParticipantID int64 `json:"participantId,omitempty"`

	// position
	Position *LolMatchHistoryMatchHistoryPosition `json:"position,omitempty"`

	// team score
	TeamScore int64 `json:"teamScore,omitempty"`

	// total gold
	TotalGold int32 `json:"totalGold,omitempty"`

	// xp
	Xp int32 `json:"xp,omitempty"`
}

// Validate validates this lol match history match history participant frame
func (m *LolMatchHistoryMatchHistoryParticipantFrame) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePosition(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolMatchHistoryMatchHistoryParticipantFrame) validatePosition(formats strfmt.Registry) error {

	if swag.IsZero(m.Position) { // not required
		return nil
	}

	if m.Position != nil {
		if err := m.Position.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("position")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolMatchHistoryMatchHistoryParticipantFrame) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolMatchHistoryMatchHistoryParticipantFrame) UnmarshalBinary(b []byte) error {
	var res LolMatchHistoryMatchHistoryParticipantFrame
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
