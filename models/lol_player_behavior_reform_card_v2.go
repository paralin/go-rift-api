// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolPlayerBehaviorReformCardV2 lol player behavior reform card v2
// swagger:model LolPlayerBehaviorReformCardV2
type LolPlayerBehaviorReformCardV2 struct {

	// id
	ID int64 `json:"id,omitempty"`

	// player facing message
	PlayerFacingMessage string `json:"playerFacingMessage,omitempty"`

	// punished for game ids
	PunishedForGameIds []int64 `json:"punishedForGameIds"`

	// punished for reform card chat logs
	PunishedForReformCardChatLogs []*LolPlayerBehaviorReformCardChatLogs `json:"punishedForReformCardChatLogs"`

	// punished until date millis
	PunishedUntilDateMillis int64 `json:"punishedUntilDateMillis,omitempty"`

	// punishment length games
	PunishmentLengthGames int64 `json:"punishmentLengthGames,omitempty"`

	// punishment length millis
	PunishmentLengthMillis int64 `json:"punishmentLengthMillis,omitempty"`

	// punishment reason
	PunishmentReason string `json:"punishmentReason,omitempty"`

	// punishment type
	PunishmentType string `json:"punishmentType,omitempty"`
}

// Validate validates this lol player behavior reform card v2
func (m *LolPlayerBehaviorReformCardV2) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePunishedForReformCardChatLogs(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolPlayerBehaviorReformCardV2) validatePunishedForReformCardChatLogs(formats strfmt.Registry) error {

	if swag.IsZero(m.PunishedForReformCardChatLogs) { // not required
		return nil
	}

	for i := 0; i < len(m.PunishedForReformCardChatLogs); i++ {
		if swag.IsZero(m.PunishedForReformCardChatLogs[i]) { // not required
			continue
		}

		if m.PunishedForReformCardChatLogs[i] != nil {
			if err := m.PunishedForReformCardChatLogs[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("punishedForReformCardChatLogs" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolPlayerBehaviorReformCardV2) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolPlayerBehaviorReformCardV2) UnmarshalBinary(b []byte) error {
	var res LolPlayerBehaviorReformCardV2
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
