// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolPurchaseWidgetItemChoiceDetails lol purchase widget item choice details
// swagger:model LolPurchaseWidgetItemChoiceDetails
type LolPurchaseWidgetItemChoiceDetails struct {

	// background image
	BackgroundImage string `json:"backgroundImage,omitempty"`

	// contents
	Contents []*LolPurchaseWidgetItemDetails `json:"contents"`

	// discount
	Discount string `json:"discount,omitempty"`

	// display type
	DisplayType string `json:"displayType,omitempty"`

	// full price
	FullPrice int32 `json:"fullPrice,omitempty"`

	// item
	Item *LolPurchaseWidgetCatalogPluginItem `json:"item,omitempty"`

	// purchase options
	PurchaseOptions []*LolPurchaseWidgetPurchaseOption `json:"purchaseOptions"`
}

// Validate validates this lol purchase widget item choice details
func (m *LolPurchaseWidgetItemChoiceDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateContents(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateItem(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validatePurchaseOptions(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolPurchaseWidgetItemChoiceDetails) validateContents(formats strfmt.Registry) error {

	if swag.IsZero(m.Contents) { // not required
		return nil
	}

	for i := 0; i < len(m.Contents); i++ {
		if swag.IsZero(m.Contents[i]) { // not required
			continue
		}

		if m.Contents[i] != nil {
			if err := m.Contents[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("contents" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolPurchaseWidgetItemChoiceDetails) validateItem(formats strfmt.Registry) error {

	if swag.IsZero(m.Item) { // not required
		return nil
	}

	if m.Item != nil {
		if err := m.Item.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("item")
			}
			return err
		}
	}

	return nil
}

func (m *LolPurchaseWidgetItemChoiceDetails) validatePurchaseOptions(formats strfmt.Registry) error {

	if swag.IsZero(m.PurchaseOptions) { // not required
		return nil
	}

	for i := 0; i < len(m.PurchaseOptions); i++ {
		if swag.IsZero(m.PurchaseOptions[i]) { // not required
			continue
		}

		if m.PurchaseOptions[i] != nil {
			if err := m.PurchaseOptions[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("purchaseOptions" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolPurchaseWidgetItemChoiceDetails) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolPurchaseWidgetItemChoiceDetails) UnmarshalBinary(b []byte) error {
	var res LolPurchaseWidgetItemChoiceDetails
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
