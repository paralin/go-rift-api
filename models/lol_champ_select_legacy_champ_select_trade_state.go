// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolChampSelectLegacyChampSelectTradeState lol champ select legacy champ select trade state
// swagger:model LolChampSelectLegacyChampSelectTradeState
type LolChampSelectLegacyChampSelectTradeState string

const (

	// LolChampSelectLegacyChampSelectTradeStateAVAILABLE captures enum value "AVAILABLE"
	LolChampSelectLegacyChampSelectTradeStateAVAILABLE LolChampSelectLegacyChampSelectTradeState = "AVAILABLE"

	// LolChampSelectLegacyChampSelectTradeStateBUSY captures enum value "BUSY"
	LolChampSelectLegacyChampSelectTradeStateBUSY LolChampSelectLegacyChampSelectTradeState = "BUSY"

	// LolChampSelectLegacyChampSelectTradeStateINVALID captures enum value "INVALID"
	LolChampSelectLegacyChampSelectTradeStateINVALID LolChampSelectLegacyChampSelectTradeState = "INVALID"

	// LolChampSelectLegacyChampSelectTradeStateRECEIVED captures enum value "RECEIVED"
	LolChampSelectLegacyChampSelectTradeStateRECEIVED LolChampSelectLegacyChampSelectTradeState = "RECEIVED"

	// LolChampSelectLegacyChampSelectTradeStateSENT captures enum value "SENT"
	LolChampSelectLegacyChampSelectTradeStateSENT LolChampSelectLegacyChampSelectTradeState = "SENT"
)

// for schema
var lolChampSelectLegacyChampSelectTradeStateEnum []interface{}

func init() {
	var res []LolChampSelectLegacyChampSelectTradeState
	if err := json.Unmarshal([]byte(`["AVAILABLE","BUSY","INVALID","RECEIVED","SENT"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolChampSelectLegacyChampSelectTradeStateEnum = append(lolChampSelectLegacyChampSelectTradeStateEnum, v)
	}
}

func (m LolChampSelectLegacyChampSelectTradeState) validateLolChampSelectLegacyChampSelectTradeStateEnum(path, location string, value LolChampSelectLegacyChampSelectTradeState) error {
	if err := validate.Enum(path, location, value, lolChampSelectLegacyChampSelectTradeStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol champ select legacy champ select trade state
func (m LolChampSelectLegacyChampSelectTradeState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolChampSelectLegacyChampSelectTradeStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
