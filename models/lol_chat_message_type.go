// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolChatMessageType lol chat message type
// swagger:model LolChatMessageType
type LolChatMessageType string

const (

	// LolChatMessageTypeChat captures enum value "chat"
	LolChatMessageTypeChat LolChatMessageType = "chat"

	// LolChatMessageTypeGroupchat captures enum value "groupchat"
	LolChatMessageTypeGroupchat LolChatMessageType = "groupchat"

	// LolChatMessageTypeDm captures enum value "dm"
	LolChatMessageTypeDm LolChatMessageType = "dm"

	// LolChatMessageTypeSystem captures enum value "system"
	LolChatMessageTypeSystem LolChatMessageType = "system"
)

// for schema
var lolChatMessageTypeEnum []interface{}

func init() {
	var res []LolChatMessageType
	if err := json.Unmarshal([]byte(`["chat","groupchat","dm","system"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolChatMessageTypeEnum = append(lolChatMessageTypeEnum, v)
	}
}

func (m LolChatMessageType) validateLolChatMessageTypeEnum(path, location string, value LolChatMessageType) error {
	if err := validate.Enum(path, location, value, lolChatMessageTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol chat message type
func (m LolChatMessageType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolChatMessageTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
