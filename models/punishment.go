// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/swag"
)

// Punishment punishment
// swagger:model Punishment
type Punishment struct {

	// perma ban
	PermaBan bool `json:"permaBan,omitempty"`

	// player facing message
	PlayerFacingMessage string `json:"playerFacingMessage,omitempty"`

	// punished for chat logs
	PunishedForChatLogs []string `json:"punishedForChatLogs"`

	// punished for game ids
	PunishedForGameIds []int64 `json:"punishedForGameIds"`

	// punished until date millis
	PunishedUntilDateMillis int64 `json:"punishedUntilDateMillis,omitempty"`

	// punishment length games
	PunishmentLengthGames int64 `json:"punishmentLengthGames,omitempty"`

	// punishment length millis
	PunishmentLengthMillis int64 `json:"punishmentLengthMillis,omitempty"`

	// punishment reason
	PunishmentReason string `json:"punishmentReason,omitempty"`

	// punishment type
	PunishmentType string `json:"punishmentType,omitempty"`
}

// Validate validates this punishment
func (m *Punishment) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Punishment) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Punishment) UnmarshalBinary(b []byte) error {
	var res Punishment
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
