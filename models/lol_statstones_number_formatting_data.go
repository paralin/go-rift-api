// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolStatstonesNumberFormattingData lol statstones number formatting data
// swagger:model LolStatstonesNumberFormattingData
type LolStatstonesNumberFormattingData struct {

	// billion abbreviation
	BillionAbbreviation string `json:"billionAbbreviation,omitempty"`

	// decimal seperator
	DecimalSeperator string `json:"decimalSeperator,omitempty"`

	// hour abbreviation
	HourAbbreviation string `json:"hourAbbreviation,omitempty"`

	// million abbreviation
	MillionAbbreviation string `json:"millionAbbreviation,omitempty"`

	// minute abbreviation
	MinuteAbbreviation string `json:"minuteAbbreviation,omitempty"`

	// number formatting behavior
	NumberFormattingBehavior *LolStatstonesNumberFormattingBehavior `json:"numberFormattingBehavior,omitempty"`

	// one hundred million abbreviation
	OneHundredMillionAbbreviation string `json:"oneHundredMillionAbbreviation,omitempty"`

	// second abbreviation
	SecondAbbreviation string `json:"secondAbbreviation,omitempty"`

	// ten thousand abbreviation
	TenThousandAbbreviation string `json:"tenThousandAbbreviation,omitempty"`

	// thousand abbreviation
	ThousandAbbreviation string `json:"thousandAbbreviation,omitempty"`

	// thousand seperator
	ThousandSeperator string `json:"thousandSeperator,omitempty"`

	// trillion abbreviation
	TrillionAbbreviation string `json:"trillionAbbreviation,omitempty"`
}

// Validate validates this lol statstones number formatting data
func (m *LolStatstonesNumberFormattingData) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateNumberFormattingBehavior(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolStatstonesNumberFormattingData) validateNumberFormattingBehavior(formats strfmt.Registry) error {

	if swag.IsZero(m.NumberFormattingBehavior) { // not required
		return nil
	}

	if m.NumberFormattingBehavior != nil {
		if err := m.NumberFormattingBehavior.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("numberFormattingBehavior")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolStatstonesNumberFormattingData) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolStatstonesNumberFormattingData) UnmarshalBinary(b []byte) error {
	var res LolStatstonesNumberFormattingData
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
