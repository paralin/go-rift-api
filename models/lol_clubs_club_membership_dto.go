// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolClubsClubMembershipDto lol clubs club membership dto
// swagger:model LolClubsClubMembershipDto
type LolClubsClubMembershipDto struct {

	// active members
	ActiveMembers []*LolClubsMemberSinceDto `json:"activeMembers"`

	// club key
	ClubKey string `json:"clubKey,omitempty"`

	// invited members
	InvitedMembers []*LolClubsMemberSinceDto `json:"invitedMembers"`

	// nominated members
	NominatedMembers []*LolClubsMemberSinceDto `json:"nominatedMembers"`

	// removed members
	RemovedMembers []*LolClubsMemberSinceDto `json:"removedMembers"`
}

// Validate validates this lol clubs club membership dto
func (m *LolClubsClubMembershipDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateActiveMembers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateInvitedMembers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNominatedMembers(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRemovedMembers(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolClubsClubMembershipDto) validateActiveMembers(formats strfmt.Registry) error {

	if swag.IsZero(m.ActiveMembers) { // not required
		return nil
	}

	for i := 0; i < len(m.ActiveMembers); i++ {
		if swag.IsZero(m.ActiveMembers[i]) { // not required
			continue
		}

		if m.ActiveMembers[i] != nil {
			if err := m.ActiveMembers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("activeMembers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolClubsClubMembershipDto) validateInvitedMembers(formats strfmt.Registry) error {

	if swag.IsZero(m.InvitedMembers) { // not required
		return nil
	}

	for i := 0; i < len(m.InvitedMembers); i++ {
		if swag.IsZero(m.InvitedMembers[i]) { // not required
			continue
		}

		if m.InvitedMembers[i] != nil {
			if err := m.InvitedMembers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("invitedMembers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolClubsClubMembershipDto) validateNominatedMembers(formats strfmt.Registry) error {

	if swag.IsZero(m.NominatedMembers) { // not required
		return nil
	}

	for i := 0; i < len(m.NominatedMembers); i++ {
		if swag.IsZero(m.NominatedMembers[i]) { // not required
			continue
		}

		if m.NominatedMembers[i] != nil {
			if err := m.NominatedMembers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("nominatedMembers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (m *LolClubsClubMembershipDto) validateRemovedMembers(formats strfmt.Registry) error {

	if swag.IsZero(m.RemovedMembers) { // not required
		return nil
	}

	for i := 0; i < len(m.RemovedMembers); i++ {
		if swag.IsZero(m.RemovedMembers[i]) { // not required
			continue
		}

		if m.RemovedMembers[i] != nil {
			if err := m.RemovedMembers[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("removedMembers" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolClubsClubMembershipDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolClubsClubMembershipDto) UnmarshalBinary(b []byte) error {
	var res LolClubsClubMembershipDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
