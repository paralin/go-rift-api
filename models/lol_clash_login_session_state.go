// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolClashLoginSessionState lol clash login session state
// swagger:model LolClashLoginSessionState
type LolClashLoginSessionState string

const (

	// LolClashLoginSessionStateINPROGRESS captures enum value "IN_PROGRESS"
	LolClashLoginSessionStateINPROGRESS LolClashLoginSessionState = "IN_PROGRESS"

	// LolClashLoginSessionStateSUCCEEDED captures enum value "SUCCEEDED"
	LolClashLoginSessionStateSUCCEEDED LolClashLoginSessionState = "SUCCEEDED"

	// LolClashLoginSessionStateLOGGINGOUT captures enum value "LOGGING_OUT"
	LolClashLoginSessionStateLOGGINGOUT LolClashLoginSessionState = "LOGGING_OUT"

	// LolClashLoginSessionStateERROR captures enum value "ERROR"
	LolClashLoginSessionStateERROR LolClashLoginSessionState = "ERROR"
)

// for schema
var lolClashLoginSessionStateEnum []interface{}

func init() {
	var res []LolClashLoginSessionState
	if err := json.Unmarshal([]byte(`["IN_PROGRESS","SUCCEEDED","LOGGING_OUT","ERROR"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolClashLoginSessionStateEnum = append(lolClashLoginSessionStateEnum, v)
	}
}

func (m LolClashLoginSessionState) validateLolClashLoginSessionStateEnum(path, location string, value LolClashLoginSessionState) error {
	if err := validate.Enum(path, location, value, lolClashLoginSessionStateEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol clash login session state
func (m LolClashLoginSessionState) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolClashLoginSessionStateEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
