// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolClubsClubInvite lol clubs club invite
// swagger:model LolClubsClubInvite
type LolClubsClubInvite struct {

	// club key
	ClubKey string `json:"clubKey,omitempty"`

	// club name
	ClubName string `json:"clubName,omitempty"`

	// invitee account Id
	InviteeAccountID int64 `json:"inviteeAccountId,omitempty"`

	// invitee summoner Id
	InviteeSummonerID int64 `json:"inviteeSummonerId,omitempty"`

	// inviter account Id
	InviterAccountID int64 `json:"inviterAccountId,omitempty"`

	// inviter summoner Id
	InviterSummonerID int64 `json:"inviterSummonerId,omitempty"`

	// inviter summoner name
	InviterSummonerName string `json:"inviterSummonerName,omitempty"`

	// status
	Status LolClubsClubInviteStatus `json:"status,omitempty"`
}

// Validate validates this lol clubs club invite
func (m *LolClubsClubInvite) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolClubsClubInvite) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(m.Status) { // not required
		return nil
	}

	if err := m.Status.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("status")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolClubsClubInvite) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolClubsClubInvite) UnmarshalBinary(b []byte) error {
	var res LolClubsClubInvite
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
