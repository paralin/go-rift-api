// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// LolPatchComponentStateAction lol patch component state action
// swagger:model LolPatchComponentStateAction
type LolPatchComponentStateAction string

const (

	// LolPatchComponentStateActionIdle captures enum value "Idle"
	LolPatchComponentStateActionIdle LolPatchComponentStateAction = "Idle"

	// LolPatchComponentStateActionCheckingForUpdates captures enum value "CheckingForUpdates"
	LolPatchComponentStateActionCheckingForUpdates LolPatchComponentStateAction = "CheckingForUpdates"

	// LolPatchComponentStateActionPatching captures enum value "Patching"
	LolPatchComponentStateActionPatching LolPatchComponentStateAction = "Patching"

	// LolPatchComponentStateActionRepairing captures enum value "Repairing"
	LolPatchComponentStateActionRepairing LolPatchComponentStateAction = "Repairing"

	// LolPatchComponentStateActionMigrating captures enum value "Migrating"
	LolPatchComponentStateActionMigrating LolPatchComponentStateAction = "Migrating"
)

// for schema
var lolPatchComponentStateActionEnum []interface{}

func init() {
	var res []LolPatchComponentStateAction
	if err := json.Unmarshal([]byte(`["Idle","CheckingForUpdates","Patching","Repairing","Migrating"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		lolPatchComponentStateActionEnum = append(lolPatchComponentStateActionEnum, v)
	}
}

func (m LolPatchComponentStateAction) validateLolPatchComponentStateActionEnum(path, location string, value LolPatchComponentStateAction) error {
	if err := validate.Enum(path, location, value, lolPatchComponentStateActionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this lol patch component state action
func (m LolPatchComponentStateAction) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateLolPatchComponentStateActionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
