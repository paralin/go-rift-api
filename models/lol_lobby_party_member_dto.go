// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolLobbyPartyMemberDto lol lobby party member dto
// swagger:model LolLobbyPartyMemberDto
type LolLobbyPartyMemberDto struct {

	// account Id
	AccountID int64 `json:"accountId,omitempty"`

	// can invite
	CanInvite bool `json:"canInvite,omitempty"`

	// game mode
	GameMode *LolLobbyGameModeDto `json:"gameMode,omitempty"`

	// invite timestamp
	InviteTimestamp int64 `json:"inviteTimestamp,omitempty"`

	// invited by summoner Id
	InvitedBySummonerID int64 `json:"invitedBySummonerId,omitempty"`

	// metadata
	Metadata *LolLobbyPartyMemberMetadataDto `json:"metadata,omitempty"`

	// party Id
	PartyID string `json:"partyId,omitempty"`

	// party version
	PartyVersion int64 `json:"partyVersion,omitempty"`

	// platform Id
	PlatformID string `json:"platformId,omitempty"`

	// puuid
	Puuid string `json:"puuid,omitempty"`

	// ready
	Ready bool `json:"ready,omitempty"`

	// role
	Role LolLobbyPartyMemberRoleEnum `json:"role,omitempty"`

	// summoner Id
	SummonerID int64 `json:"summonerId,omitempty"`
}

// Validate validates this lol lobby party member dto
func (m *LolLobbyPartyMemberDto) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateGameMode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMetadata(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolLobbyPartyMemberDto) validateGameMode(formats strfmt.Registry) error {

	if swag.IsZero(m.GameMode) { // not required
		return nil
	}

	if m.GameMode != nil {
		if err := m.GameMode.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("gameMode")
			}
			return err
		}
	}

	return nil
}

func (m *LolLobbyPartyMemberDto) validateMetadata(formats strfmt.Registry) error {

	if swag.IsZero(m.Metadata) { // not required
		return nil
	}

	if m.Metadata != nil {
		if err := m.Metadata.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("metadata")
			}
			return err
		}
	}

	return nil
}

func (m *LolLobbyPartyMemberDto) validateRole(formats strfmt.Registry) error {

	if swag.IsZero(m.Role) { // not required
		return nil
	}

	if err := m.Role.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("role")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolLobbyPartyMemberDto) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolLobbyPartyMemberDto) UnmarshalBinary(b []byte) error {
	var res LolLobbyPartyMemberDto
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
