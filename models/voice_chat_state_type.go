// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// VoiceChatStateType voice chat state type
// swagger:model VoiceChatStateType
type VoiceChatStateType string

const (

	// VoiceChatStateTypeDisconnected captures enum value "disconnected"
	VoiceChatStateTypeDisconnected VoiceChatStateType = "disconnected"

	// VoiceChatStateTypeConnecting captures enum value "connecting"
	VoiceChatStateTypeConnecting VoiceChatStateType = "connecting"

	// VoiceChatStateTypeConnected captures enum value "connected"
	VoiceChatStateTypeConnected VoiceChatStateType = "connected"

	// VoiceChatStateTypeDisconnecting captures enum value "disconnecting"
	VoiceChatStateTypeDisconnecting VoiceChatStateType = "disconnecting"

	// VoiceChatStateTypeInitialized captures enum value "initialized"
	VoiceChatStateTypeInitialized VoiceChatStateType = "initialized"

	// VoiceChatStateTypeShuttingdown captures enum value "shuttingdown"
	VoiceChatStateTypeShuttingdown VoiceChatStateType = "shuttingdown"
)

// for schema
var voiceChatStateTypeEnum []interface{}

func init() {
	var res []VoiceChatStateType
	if err := json.Unmarshal([]byte(`["disconnected","connecting","connected","disconnecting","initialized","shuttingdown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		voiceChatStateTypeEnum = append(voiceChatStateTypeEnum, v)
	}
}

func (m VoiceChatStateType) validateVoiceChatStateTypeEnum(path, location string, value VoiceChatStateType) error {
	if err := validate.Enum(path, location, value, voiceChatStateTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this voice chat state type
func (m VoiceChatStateType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateVoiceChatStateTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
