// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// LolClashPlayerChatRoster lol clash player chat roster
// swagger:model LolClashPlayerChatRoster
type LolClashPlayerChatRoster struct {

	// end time ms
	EndTimeMs int64 `json:"endTimeMs,omitempty"`

	// icon color Id
	IconColorID int32 `json:"iconColorId,omitempty"`

	// icon Id
	IconID int32 `json:"iconId,omitempty"`

	// invitation Id
	InvitationID string `json:"invitationId,omitempty"`

	// is registered
	IsRegistered bool `json:"isRegistered,omitempty"`

	// key
	Key string `json:"key,omitempty"`

	// logo Url
	LogoURL string `json:"logoUrl,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// player state
	PlayerState LolClashPlayerState `json:"playerState,omitempty"`

	// short name
	ShortName string `json:"shortName,omitempty"`

	// start time ms
	StartTimeMs int64 `json:"startTimeMs,omitempty"`

	// tournament Id
	TournamentID int64 `json:"tournamentId,omitempty"`

	// tournament state
	TournamentState LolClashTournamentState `json:"tournamentState,omitempty"`
}

// Validate validates this lol clash player chat roster
func (m *LolClashPlayerChatRoster) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePlayerState(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateTournamentState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LolClashPlayerChatRoster) validatePlayerState(formats strfmt.Registry) error {

	if swag.IsZero(m.PlayerState) { // not required
		return nil
	}

	if err := m.PlayerState.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("playerState")
		}
		return err
	}

	return nil
}

func (m *LolClashPlayerChatRoster) validateTournamentState(formats strfmt.Registry) error {

	if swag.IsZero(m.TournamentState) { // not required
		return nil
	}

	if err := m.TournamentState.Validate(formats); err != nil {
		if ve, ok := err.(*errors.Validation); ok {
			return ve.ValidateName("tournamentState")
		}
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LolClashPlayerChatRoster) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LolClashPlayerChatRoster) UnmarshalBinary(b []byte) error {
	var res LolClashPlayerChatRoster
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
