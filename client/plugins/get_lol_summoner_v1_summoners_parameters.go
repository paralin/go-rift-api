// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLolSummonerV1SummonersParams creates a new GetLolSummonerV1SummonersParams object
// with the default values initialized.
func NewGetLolSummonerV1SummonersParams() *GetLolSummonerV1SummonersParams {
	var ()
	return &GetLolSummonerV1SummonersParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLolSummonerV1SummonersParamsWithTimeout creates a new GetLolSummonerV1SummonersParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLolSummonerV1SummonersParamsWithTimeout(timeout time.Duration) *GetLolSummonerV1SummonersParams {
	var ()
	return &GetLolSummonerV1SummonersParams{

		timeout: timeout,
	}
}

// NewGetLolSummonerV1SummonersParamsWithContext creates a new GetLolSummonerV1SummonersParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLolSummonerV1SummonersParamsWithContext(ctx context.Context) *GetLolSummonerV1SummonersParams {
	var ()
	return &GetLolSummonerV1SummonersParams{

		Context: ctx,
	}
}

// NewGetLolSummonerV1SummonersParamsWithHTTPClient creates a new GetLolSummonerV1SummonersParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLolSummonerV1SummonersParamsWithHTTPClient(client *http.Client) *GetLolSummonerV1SummonersParams {
	var ()
	return &GetLolSummonerV1SummonersParams{
		HTTPClient: client,
	}
}

/*GetLolSummonerV1SummonersParams contains all the parameters to send to the API endpoint
for the get lol summoner v1 summoners operation typically these are written to a http.Request
*/
type GetLolSummonerV1SummonersParams struct {

	/*Name*/
	Name string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get lol summoner v1 summoners params
func (o *GetLolSummonerV1SummonersParams) WithTimeout(timeout time.Duration) *GetLolSummonerV1SummonersParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get lol summoner v1 summoners params
func (o *GetLolSummonerV1SummonersParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get lol summoner v1 summoners params
func (o *GetLolSummonerV1SummonersParams) WithContext(ctx context.Context) *GetLolSummonerV1SummonersParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get lol summoner v1 summoners params
func (o *GetLolSummonerV1SummonersParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get lol summoner v1 summoners params
func (o *GetLolSummonerV1SummonersParams) WithHTTPClient(client *http.Client) *GetLolSummonerV1SummonersParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get lol summoner v1 summoners params
func (o *GetLolSummonerV1SummonersParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithName adds the name to the get lol summoner v1 summoners params
func (o *GetLolSummonerV1SummonersParams) WithName(name string) *GetLolSummonerV1SummonersParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get lol summoner v1 summoners params
func (o *GetLolSummonerV1SummonersParams) SetName(name string) {
	o.Name = name
}

// WriteToRequest writes these params to a swagger request
func (o *GetLolSummonerV1SummonersParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param name
	qrName := o.Name
	qName := qrName
	if qName != "" {
		if err := r.SetQueryParam("name", qName); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
