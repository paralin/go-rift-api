// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/paralin/go-rift-api/models"
)

// NewPutLolMissionsV1PlayerByMissionIDParams creates a new PutLolMissionsV1PlayerByMissionIDParams object
// with the default values initialized.
func NewPutLolMissionsV1PlayerByMissionIDParams() *PutLolMissionsV1PlayerByMissionIDParams {
	var ()
	return &PutLolMissionsV1PlayerByMissionIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutLolMissionsV1PlayerByMissionIDParamsWithTimeout creates a new PutLolMissionsV1PlayerByMissionIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutLolMissionsV1PlayerByMissionIDParamsWithTimeout(timeout time.Duration) *PutLolMissionsV1PlayerByMissionIDParams {
	var ()
	return &PutLolMissionsV1PlayerByMissionIDParams{

		timeout: timeout,
	}
}

// NewPutLolMissionsV1PlayerByMissionIDParamsWithContext creates a new PutLolMissionsV1PlayerByMissionIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutLolMissionsV1PlayerByMissionIDParamsWithContext(ctx context.Context) *PutLolMissionsV1PlayerByMissionIDParams {
	var ()
	return &PutLolMissionsV1PlayerByMissionIDParams{

		Context: ctx,
	}
}

// NewPutLolMissionsV1PlayerByMissionIDParamsWithHTTPClient creates a new PutLolMissionsV1PlayerByMissionIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutLolMissionsV1PlayerByMissionIDParamsWithHTTPClient(client *http.Client) *PutLolMissionsV1PlayerByMissionIDParams {
	var ()
	return &PutLolMissionsV1PlayerByMissionIDParams{
		HTTPClient: client,
	}
}

/*PutLolMissionsV1PlayerByMissionIDParams contains all the parameters to send to the API endpoint
for the put lol missions v1 player by mission Id operation typically these are written to a http.Request
*/
type PutLolMissionsV1PlayerByMissionIDParams struct {

	/*MissionID*/
	MissionID string
	/*RewardGroups*/
	RewardGroups *models.LolMissionsRewardGroupsSelection

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) WithTimeout(timeout time.Duration) *PutLolMissionsV1PlayerByMissionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) WithContext(ctx context.Context) *PutLolMissionsV1PlayerByMissionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) WithHTTPClient(client *http.Client) *PutLolMissionsV1PlayerByMissionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithMissionID adds the missionID to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) WithMissionID(missionID string) *PutLolMissionsV1PlayerByMissionIDParams {
	o.SetMissionID(missionID)
	return o
}

// SetMissionID adds the missionId to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) SetMissionID(missionID string) {
	o.MissionID = missionID
}

// WithRewardGroups adds the rewardGroups to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) WithRewardGroups(rewardGroups *models.LolMissionsRewardGroupsSelection) *PutLolMissionsV1PlayerByMissionIDParams {
	o.SetRewardGroups(rewardGroups)
	return o
}

// SetRewardGroups adds the rewardGroups to the put lol missions v1 player by mission Id params
func (o *PutLolMissionsV1PlayerByMissionIDParams) SetRewardGroups(rewardGroups *models.LolMissionsRewardGroupsSelection) {
	o.RewardGroups = rewardGroups
}

// WriteToRequest writes these params to a swagger request
func (o *PutLolMissionsV1PlayerByMissionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param missionId
	if err := r.SetPathParam("missionId", o.MissionID); err != nil {
		return err
	}

	if o.RewardGroups != nil {
		if err := r.SetBodyParam(o.RewardGroups); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
