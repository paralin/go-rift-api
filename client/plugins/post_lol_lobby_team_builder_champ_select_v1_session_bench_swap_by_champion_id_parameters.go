// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams creates a new PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams object
// with the default values initialized.
func NewPostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams() *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams {
	var ()
	return &PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParamsWithTimeout creates a new PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParamsWithTimeout(timeout time.Duration) *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams {
	var ()
	return &PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams{

		timeout: timeout,
	}
}

// NewPostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParamsWithContext creates a new PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParamsWithContext(ctx context.Context) *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams {
	var ()
	return &PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams{

		Context: ctx,
	}
}

// NewPostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParamsWithHTTPClient creates a new PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParamsWithHTTPClient(client *http.Client) *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams {
	var ()
	return &PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams{
		HTTPClient: client,
	}
}

/*PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams contains all the parameters to send to the API endpoint
for the post lol lobby team builder champ select v1 session bench swap by champion Id operation typically these are written to a http.Request
*/
type PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams struct {

	/*ChampionID*/
	ChampionID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post lol lobby team builder champ select v1 session bench swap by champion Id params
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) WithTimeout(timeout time.Duration) *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post lol lobby team builder champ select v1 session bench swap by champion Id params
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post lol lobby team builder champ select v1 session bench swap by champion Id params
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) WithContext(ctx context.Context) *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post lol lobby team builder champ select v1 session bench swap by champion Id params
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post lol lobby team builder champ select v1 session bench swap by champion Id params
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) WithHTTPClient(client *http.Client) *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post lol lobby team builder champ select v1 session bench swap by champion Id params
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChampionID adds the championID to the post lol lobby team builder champ select v1 session bench swap by champion Id params
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) WithChampionID(championID int32) *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams {
	o.SetChampionID(championID)
	return o
}

// SetChampionID adds the championId to the post lol lobby team builder champ select v1 session bench swap by champion Id params
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) SetChampionID(championID int32) {
	o.ChampionID = championID
}

// WriteToRequest writes these params to a swagger request
func (o *PostLolLobbyTeamBuilderChampSelectV1SessionBenchSwapByChampionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param championId
	if err := r.SetPathParam("championId", swag.FormatInt32(o.ChampionID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
