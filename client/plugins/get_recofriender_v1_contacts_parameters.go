// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetRecofrienderV1ContactsParams creates a new GetRecofrienderV1ContactsParams object
// with the default values initialized.
func NewGetRecofrienderV1ContactsParams() *GetRecofrienderV1ContactsParams {
	var ()
	return &GetRecofrienderV1ContactsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetRecofrienderV1ContactsParamsWithTimeout creates a new GetRecofrienderV1ContactsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetRecofrienderV1ContactsParamsWithTimeout(timeout time.Duration) *GetRecofrienderV1ContactsParams {
	var ()
	return &GetRecofrienderV1ContactsParams{

		timeout: timeout,
	}
}

// NewGetRecofrienderV1ContactsParamsWithContext creates a new GetRecofrienderV1ContactsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetRecofrienderV1ContactsParamsWithContext(ctx context.Context) *GetRecofrienderV1ContactsParams {
	var ()
	return &GetRecofrienderV1ContactsParams{

		Context: ctx,
	}
}

// NewGetRecofrienderV1ContactsParamsWithHTTPClient creates a new GetRecofrienderV1ContactsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetRecofrienderV1ContactsParamsWithHTTPClient(client *http.Client) *GetRecofrienderV1ContactsParams {
	var ()
	return &GetRecofrienderV1ContactsParams{
		HTTPClient: client,
	}
}

/*GetRecofrienderV1ContactsParams contains all the parameters to send to the API endpoint
for the get recofriender v1 contacts operation typically these are written to a http.Request
*/
type GetRecofrienderV1ContactsParams struct {

	/*AccountID*/
	AccountID *int64
	/*FriendState*/
	FriendState *string
	/*Source*/
	Source *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) WithTimeout(timeout time.Duration) *GetRecofrienderV1ContactsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) WithContext(ctx context.Context) *GetRecofrienderV1ContactsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) WithHTTPClient(client *http.Client) *GetRecofrienderV1ContactsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) WithAccountID(accountID *int64) *GetRecofrienderV1ContactsParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) SetAccountID(accountID *int64) {
	o.AccountID = accountID
}

// WithFriendState adds the friendState to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) WithFriendState(friendState *string) *GetRecofrienderV1ContactsParams {
	o.SetFriendState(friendState)
	return o
}

// SetFriendState adds the friendState to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) SetFriendState(friendState *string) {
	o.FriendState = friendState
}

// WithSource adds the source to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) WithSource(source *string) *GetRecofrienderV1ContactsParams {
	o.SetSource(source)
	return o
}

// SetSource adds the source to the get recofriender v1 contacts params
func (o *GetRecofrienderV1ContactsParams) SetSource(source *string) {
	o.Source = source
}

// WriteToRequest writes these params to a swagger request
func (o *GetRecofrienderV1ContactsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AccountID != nil {

		// query param accountId
		var qrAccountID int64
		if o.AccountID != nil {
			qrAccountID = *o.AccountID
		}
		qAccountID := swag.FormatInt64(qrAccountID)
		if qAccountID != "" {
			if err := r.SetQueryParam("accountId", qAccountID); err != nil {
				return err
			}
		}

	}

	if o.FriendState != nil {

		// query param friendState
		var qrFriendState string
		if o.FriendState != nil {
			qrFriendState = *o.FriendState
		}
		qFriendState := qrFriendState
		if qFriendState != "" {
			if err := r.SetQueryParam("friendState", qFriendState); err != nil {
				return err
			}
		}

	}

	if o.Source != nil {

		// query param source
		var qrSource string
		if o.Source != nil {
			qrSource = *o.Source
		}
		qSource := qrSource
		if qSource != "" {
			if err := r.SetQueryParam("source", qSource); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
