// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutLolMissionsV1PlayerOptParams creates a new PutLolMissionsV1PlayerOptParams object
// with the default values initialized.
func NewPutLolMissionsV1PlayerOptParams() *PutLolMissionsV1PlayerOptParams {
	var ()
	return &PutLolMissionsV1PlayerOptParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutLolMissionsV1PlayerOptParamsWithTimeout creates a new PutLolMissionsV1PlayerOptParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutLolMissionsV1PlayerOptParamsWithTimeout(timeout time.Duration) *PutLolMissionsV1PlayerOptParams {
	var ()
	return &PutLolMissionsV1PlayerOptParams{

		timeout: timeout,
	}
}

// NewPutLolMissionsV1PlayerOptParamsWithContext creates a new PutLolMissionsV1PlayerOptParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutLolMissionsV1PlayerOptParamsWithContext(ctx context.Context) *PutLolMissionsV1PlayerOptParams {
	var ()
	return &PutLolMissionsV1PlayerOptParams{

		Context: ctx,
	}
}

// NewPutLolMissionsV1PlayerOptParamsWithHTTPClient creates a new PutLolMissionsV1PlayerOptParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutLolMissionsV1PlayerOptParamsWithHTTPClient(client *http.Client) *PutLolMissionsV1PlayerOptParams {
	var ()
	return &PutLolMissionsV1PlayerOptParams{
		HTTPClient: client,
	}
}

/*PutLolMissionsV1PlayerOptParams contains all the parameters to send to the API endpoint
for the put lol missions v1 player opt operation typically these are written to a http.Request
*/
type PutLolMissionsV1PlayerOptParams struct {

	/*SeriesOpts*/
	SeriesOpts map[string]string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put lol missions v1 player opt params
func (o *PutLolMissionsV1PlayerOptParams) WithTimeout(timeout time.Duration) *PutLolMissionsV1PlayerOptParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put lol missions v1 player opt params
func (o *PutLolMissionsV1PlayerOptParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put lol missions v1 player opt params
func (o *PutLolMissionsV1PlayerOptParams) WithContext(ctx context.Context) *PutLolMissionsV1PlayerOptParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put lol missions v1 player opt params
func (o *PutLolMissionsV1PlayerOptParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put lol missions v1 player opt params
func (o *PutLolMissionsV1PlayerOptParams) WithHTTPClient(client *http.Client) *PutLolMissionsV1PlayerOptParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put lol missions v1 player opt params
func (o *PutLolMissionsV1PlayerOptParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSeriesOpts adds the seriesOpts to the put lol missions v1 player opt params
func (o *PutLolMissionsV1PlayerOptParams) WithSeriesOpts(seriesOpts map[string]string) *PutLolMissionsV1PlayerOptParams {
	o.SetSeriesOpts(seriesOpts)
	return o
}

// SetSeriesOpts adds the seriesOpts to the put lol missions v1 player opt params
func (o *PutLolMissionsV1PlayerOptParams) SetSeriesOpts(seriesOpts map[string]string) {
	o.SeriesOpts = seriesOpts
}

// WriteToRequest writes these params to a swagger request
func (o *PutLolMissionsV1PlayerOptParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SeriesOpts != nil {
		if err := r.SetBodyParam(o.SeriesOpts); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
