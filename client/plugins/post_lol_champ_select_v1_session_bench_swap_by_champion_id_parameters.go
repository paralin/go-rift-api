// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostLolChampSelectV1SessionBenchSwapByChampionIDParams creates a new PostLolChampSelectV1SessionBenchSwapByChampionIDParams object
// with the default values initialized.
func NewPostLolChampSelectV1SessionBenchSwapByChampionIDParams() *PostLolChampSelectV1SessionBenchSwapByChampionIDParams {
	var ()
	return &PostLolChampSelectV1SessionBenchSwapByChampionIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostLolChampSelectV1SessionBenchSwapByChampionIDParamsWithTimeout creates a new PostLolChampSelectV1SessionBenchSwapByChampionIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostLolChampSelectV1SessionBenchSwapByChampionIDParamsWithTimeout(timeout time.Duration) *PostLolChampSelectV1SessionBenchSwapByChampionIDParams {
	var ()
	return &PostLolChampSelectV1SessionBenchSwapByChampionIDParams{

		timeout: timeout,
	}
}

// NewPostLolChampSelectV1SessionBenchSwapByChampionIDParamsWithContext creates a new PostLolChampSelectV1SessionBenchSwapByChampionIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostLolChampSelectV1SessionBenchSwapByChampionIDParamsWithContext(ctx context.Context) *PostLolChampSelectV1SessionBenchSwapByChampionIDParams {
	var ()
	return &PostLolChampSelectV1SessionBenchSwapByChampionIDParams{

		Context: ctx,
	}
}

// NewPostLolChampSelectV1SessionBenchSwapByChampionIDParamsWithHTTPClient creates a new PostLolChampSelectV1SessionBenchSwapByChampionIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostLolChampSelectV1SessionBenchSwapByChampionIDParamsWithHTTPClient(client *http.Client) *PostLolChampSelectV1SessionBenchSwapByChampionIDParams {
	var ()
	return &PostLolChampSelectV1SessionBenchSwapByChampionIDParams{
		HTTPClient: client,
	}
}

/*PostLolChampSelectV1SessionBenchSwapByChampionIDParams contains all the parameters to send to the API endpoint
for the post lol champ select v1 session bench swap by champion Id operation typically these are written to a http.Request
*/
type PostLolChampSelectV1SessionBenchSwapByChampionIDParams struct {

	/*ChampionID*/
	ChampionID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post lol champ select v1 session bench swap by champion Id params
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) WithTimeout(timeout time.Duration) *PostLolChampSelectV1SessionBenchSwapByChampionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post lol champ select v1 session bench swap by champion Id params
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post lol champ select v1 session bench swap by champion Id params
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) WithContext(ctx context.Context) *PostLolChampSelectV1SessionBenchSwapByChampionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post lol champ select v1 session bench swap by champion Id params
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post lol champ select v1 session bench swap by champion Id params
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) WithHTTPClient(client *http.Client) *PostLolChampSelectV1SessionBenchSwapByChampionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post lol champ select v1 session bench swap by champion Id params
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithChampionID adds the championID to the post lol champ select v1 session bench swap by champion Id params
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) WithChampionID(championID int32) *PostLolChampSelectV1SessionBenchSwapByChampionIDParams {
	o.SetChampionID(championID)
	return o
}

// SetChampionID adds the championId to the post lol champ select v1 session bench swap by champion Id params
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) SetChampionID(championID int32) {
	o.ChampionID = championID
}

// WriteToRequest writes these params to a swagger request
func (o *PostLolChampSelectV1SessionBenchSwapByChampionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param championId
	if err := r.SetPathParam("championId", swag.FormatInt32(o.ChampionID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
