// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/paralin/go-rift-api/models"
)

// NewPutLolMissionsV2PlayerOptParams creates a new PutLolMissionsV2PlayerOptParams object
// with the default values initialized.
func NewPutLolMissionsV2PlayerOptParams() *PutLolMissionsV2PlayerOptParams {
	var ()
	return &PutLolMissionsV2PlayerOptParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutLolMissionsV2PlayerOptParamsWithTimeout creates a new PutLolMissionsV2PlayerOptParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutLolMissionsV2PlayerOptParamsWithTimeout(timeout time.Duration) *PutLolMissionsV2PlayerOptParams {
	var ()
	return &PutLolMissionsV2PlayerOptParams{

		timeout: timeout,
	}
}

// NewPutLolMissionsV2PlayerOptParamsWithContext creates a new PutLolMissionsV2PlayerOptParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutLolMissionsV2PlayerOptParamsWithContext(ctx context.Context) *PutLolMissionsV2PlayerOptParams {
	var ()
	return &PutLolMissionsV2PlayerOptParams{

		Context: ctx,
	}
}

// NewPutLolMissionsV2PlayerOptParamsWithHTTPClient creates a new PutLolMissionsV2PlayerOptParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutLolMissionsV2PlayerOptParamsWithHTTPClient(client *http.Client) *PutLolMissionsV2PlayerOptParams {
	var ()
	return &PutLolMissionsV2PlayerOptParams{
		HTTPClient: client,
	}
}

/*PutLolMissionsV2PlayerOptParams contains all the parameters to send to the API endpoint
for the put lol missions v2 player opt operation typically these are written to a http.Request
*/
type PutLolMissionsV2PlayerOptParams struct {

	/*SeriesOpt*/
	SeriesOpt *models.LolMissionsSeriesOpt

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put lol missions v2 player opt params
func (o *PutLolMissionsV2PlayerOptParams) WithTimeout(timeout time.Duration) *PutLolMissionsV2PlayerOptParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put lol missions v2 player opt params
func (o *PutLolMissionsV2PlayerOptParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put lol missions v2 player opt params
func (o *PutLolMissionsV2PlayerOptParams) WithContext(ctx context.Context) *PutLolMissionsV2PlayerOptParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put lol missions v2 player opt params
func (o *PutLolMissionsV2PlayerOptParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put lol missions v2 player opt params
func (o *PutLolMissionsV2PlayerOptParams) WithHTTPClient(client *http.Client) *PutLolMissionsV2PlayerOptParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put lol missions v2 player opt params
func (o *PutLolMissionsV2PlayerOptParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSeriesOpt adds the seriesOpt to the put lol missions v2 player opt params
func (o *PutLolMissionsV2PlayerOptParams) WithSeriesOpt(seriesOpt *models.LolMissionsSeriesOpt) *PutLolMissionsV2PlayerOptParams {
	o.SetSeriesOpt(seriesOpt)
	return o
}

// SetSeriesOpt adds the seriesOpt to the put lol missions v2 player opt params
func (o *PutLolMissionsV2PlayerOptParams) SetSeriesOpt(seriesOpt *models.LolMissionsSeriesOpt) {
	o.SeriesOpt = seriesOpt
}

// WriteToRequest writes these params to a swagger request
func (o *PutLolMissionsV2PlayerOptParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.SeriesOpt != nil {
		if err := r.SetBodyParam(o.SeriesOpt); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
