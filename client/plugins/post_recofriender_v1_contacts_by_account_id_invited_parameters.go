// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostRecofrienderV1ContactsByAccountIDInvitedParams creates a new PostRecofrienderV1ContactsByAccountIDInvitedParams object
// with the default values initialized.
func NewPostRecofrienderV1ContactsByAccountIDInvitedParams() *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	var ()
	return &PostRecofrienderV1ContactsByAccountIDInvitedParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostRecofrienderV1ContactsByAccountIDInvitedParamsWithTimeout creates a new PostRecofrienderV1ContactsByAccountIDInvitedParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostRecofrienderV1ContactsByAccountIDInvitedParamsWithTimeout(timeout time.Duration) *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	var ()
	return &PostRecofrienderV1ContactsByAccountIDInvitedParams{

		timeout: timeout,
	}
}

// NewPostRecofrienderV1ContactsByAccountIDInvitedParamsWithContext creates a new PostRecofrienderV1ContactsByAccountIDInvitedParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostRecofrienderV1ContactsByAccountIDInvitedParamsWithContext(ctx context.Context) *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	var ()
	return &PostRecofrienderV1ContactsByAccountIDInvitedParams{

		Context: ctx,
	}
}

// NewPostRecofrienderV1ContactsByAccountIDInvitedParamsWithHTTPClient creates a new PostRecofrienderV1ContactsByAccountIDInvitedParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostRecofrienderV1ContactsByAccountIDInvitedParamsWithHTTPClient(client *http.Client) *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	var ()
	return &PostRecofrienderV1ContactsByAccountIDInvitedParams{
		HTTPClient: client,
	}
}

/*PostRecofrienderV1ContactsByAccountIDInvitedParams contains all the parameters to send to the API endpoint
for the post recofriender v1 contacts by account Id invited operation typically these are written to a http.Request
*/
type PostRecofrienderV1ContactsByAccountIDInvitedParams struct {

	/*AccountID*/
	AccountID int64
	/*RetainInCache*/
	RetainInCache *bool

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) WithTimeout(timeout time.Duration) *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) WithContext(ctx context.Context) *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) WithHTTPClient(client *http.Client) *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAccountID adds the accountID to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) WithAccountID(accountID int64) *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	o.SetAccountID(accountID)
	return o
}

// SetAccountID adds the accountId to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) SetAccountID(accountID int64) {
	o.AccountID = accountID
}

// WithRetainInCache adds the retainInCache to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) WithRetainInCache(retainInCache *bool) *PostRecofrienderV1ContactsByAccountIDInvitedParams {
	o.SetRetainInCache(retainInCache)
	return o
}

// SetRetainInCache adds the retainInCache to the post recofriender v1 contacts by account Id invited params
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) SetRetainInCache(retainInCache *bool) {
	o.RetainInCache = retainInCache
}

// WriteToRequest writes these params to a swagger request
func (o *PostRecofrienderV1ContactsByAccountIDInvitedParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param accountId
	if err := r.SetPathParam("accountId", swag.FormatInt64(o.AccountID)); err != nil {
		return err
	}

	if o.RetainInCache != nil {

		// query param retainInCache
		var qrRetainInCache bool
		if o.RetainInCache != nil {
			qrRetainInCache = *o.RetainInCache
		}
		qRetainInCache := swag.FormatBool(qrRetainInCache)
		if qRetainInCache != "" {
			if err := r.SetQueryParam("retainInCache", qRetainInCache); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
