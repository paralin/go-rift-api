// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLolQueueEligibilityV3EligibilityParams creates a new GetLolQueueEligibilityV3EligibilityParams object
// with the default values initialized.
func NewGetLolQueueEligibilityV3EligibilityParams() *GetLolQueueEligibilityV3EligibilityParams {
	var ()
	return &GetLolQueueEligibilityV3EligibilityParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLolQueueEligibilityV3EligibilityParamsWithTimeout creates a new GetLolQueueEligibilityV3EligibilityParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLolQueueEligibilityV3EligibilityParamsWithTimeout(timeout time.Duration) *GetLolQueueEligibilityV3EligibilityParams {
	var ()
	return &GetLolQueueEligibilityV3EligibilityParams{

		timeout: timeout,
	}
}

// NewGetLolQueueEligibilityV3EligibilityParamsWithContext creates a new GetLolQueueEligibilityV3EligibilityParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLolQueueEligibilityV3EligibilityParamsWithContext(ctx context.Context) *GetLolQueueEligibilityV3EligibilityParams {
	var ()
	return &GetLolQueueEligibilityV3EligibilityParams{

		Context: ctx,
	}
}

// NewGetLolQueueEligibilityV3EligibilityParamsWithHTTPClient creates a new GetLolQueueEligibilityV3EligibilityParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLolQueueEligibilityV3EligibilityParamsWithHTTPClient(client *http.Client) *GetLolQueueEligibilityV3EligibilityParams {
	var ()
	return &GetLolQueueEligibilityV3EligibilityParams{
		HTTPClient: client,
	}
}

/*GetLolQueueEligibilityV3EligibilityParams contains all the parameters to send to the API endpoint
for the get lol queue eligibility v3 eligibility operation typically these are written to a http.Request
*/
type GetLolQueueEligibilityV3EligibilityParams struct {

	/*QueueIds*/
	QueueIds []int32
	/*SummonerIds*/
	SummonerIds []int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) WithTimeout(timeout time.Duration) *GetLolQueueEligibilityV3EligibilityParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) WithContext(ctx context.Context) *GetLolQueueEligibilityV3EligibilityParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) WithHTTPClient(client *http.Client) *GetLolQueueEligibilityV3EligibilityParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithQueueIds adds the queueIds to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) WithQueueIds(queueIds []int32) *GetLolQueueEligibilityV3EligibilityParams {
	o.SetQueueIds(queueIds)
	return o
}

// SetQueueIds adds the queueIds to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) SetQueueIds(queueIds []int32) {
	o.QueueIds = queueIds
}

// WithSummonerIds adds the summonerIds to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) WithSummonerIds(summonerIds []int64) *GetLolQueueEligibilityV3EligibilityParams {
	o.SetSummonerIds(summonerIds)
	return o
}

// SetSummonerIds adds the summonerIds to the get lol queue eligibility v3 eligibility params
func (o *GetLolQueueEligibilityV3EligibilityParams) SetSummonerIds(summonerIds []int64) {
	o.SummonerIds = summonerIds
}

// WriteToRequest writes these params to a swagger request
func (o *GetLolQueueEligibilityV3EligibilityParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	var valuesQueueIds []string
	for _, v := range o.QueueIds {
		valuesQueueIds = append(valuesQueueIds, swag.FormatInt32(v))
	}

	joinedQueueIds := swag.JoinByFormat(valuesQueueIds, "")
	// query array param queueIds
	if err := r.SetQueryParam("queueIds", joinedQueueIds...); err != nil {
		return err
	}

	var valuesSummonerIds []string
	for _, v := range o.SummonerIds {
		valuesSummonerIds = append(valuesSummonerIds, swag.FormatInt64(v))
	}

	joinedSummonerIds := swag.JoinByFormat(valuesSummonerIds, "")
	// query array param summonerIds
	if err := r.SetQueryParam("summonerIds", joinedSummonerIds...); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
