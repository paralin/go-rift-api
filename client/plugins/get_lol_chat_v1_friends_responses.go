// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/paralin/go-rift-api/models"
)

// GetLolChatV1FriendsReader is a Reader for the GetLolChatV1Friends structure.
type GetLolChatV1FriendsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLolChatV1FriendsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLolChatV1FriendsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLolChatV1FriendsOK creates a GetLolChatV1FriendsOK with default headers values
func NewGetLolChatV1FriendsOK() *GetLolChatV1FriendsOK {
	return &GetLolChatV1FriendsOK{}
}

/*GetLolChatV1FriendsOK handles this case with default header values.

Successful response
*/
type GetLolChatV1FriendsOK struct {
	Payload []*models.LolChatFriendResource
}

func (o *GetLolChatV1FriendsOK) Error() string {
	return fmt.Sprintf("[GET /lol-chat/v1/friends][%d] getLolChatV1FriendsOK  %+v", 200, o.Payload)
}

func (o *GetLolChatV1FriendsOK) GetPayload() []*models.LolChatFriendResource {
	return o.Payload
}

func (o *GetLolChatV1FriendsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
