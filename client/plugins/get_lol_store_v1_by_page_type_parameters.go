// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetLolStoreV1ByPageTypeParams creates a new GetLolStoreV1ByPageTypeParams object
// with the default values initialized.
func NewGetLolStoreV1ByPageTypeParams() *GetLolStoreV1ByPageTypeParams {
	var ()
	return &GetLolStoreV1ByPageTypeParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetLolStoreV1ByPageTypeParamsWithTimeout creates a new GetLolStoreV1ByPageTypeParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetLolStoreV1ByPageTypeParamsWithTimeout(timeout time.Duration) *GetLolStoreV1ByPageTypeParams {
	var ()
	return &GetLolStoreV1ByPageTypeParams{

		timeout: timeout,
	}
}

// NewGetLolStoreV1ByPageTypeParamsWithContext creates a new GetLolStoreV1ByPageTypeParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetLolStoreV1ByPageTypeParamsWithContext(ctx context.Context) *GetLolStoreV1ByPageTypeParams {
	var ()
	return &GetLolStoreV1ByPageTypeParams{

		Context: ctx,
	}
}

// NewGetLolStoreV1ByPageTypeParamsWithHTTPClient creates a new GetLolStoreV1ByPageTypeParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetLolStoreV1ByPageTypeParamsWithHTTPClient(client *http.Client) *GetLolStoreV1ByPageTypeParams {
	var ()
	return &GetLolStoreV1ByPageTypeParams{
		HTTPClient: client,
	}
}

/*GetLolStoreV1ByPageTypeParams contains all the parameters to send to the API endpoint
for the get lol store v1 by page type operation typically these are written to a http.Request
*/
type GetLolStoreV1ByPageTypeParams struct {

	/*PageType*/
	PageType string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get lol store v1 by page type params
func (o *GetLolStoreV1ByPageTypeParams) WithTimeout(timeout time.Duration) *GetLolStoreV1ByPageTypeParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get lol store v1 by page type params
func (o *GetLolStoreV1ByPageTypeParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get lol store v1 by page type params
func (o *GetLolStoreV1ByPageTypeParams) WithContext(ctx context.Context) *GetLolStoreV1ByPageTypeParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get lol store v1 by page type params
func (o *GetLolStoreV1ByPageTypeParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get lol store v1 by page type params
func (o *GetLolStoreV1ByPageTypeParams) WithHTTPClient(client *http.Client) *GetLolStoreV1ByPageTypeParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get lol store v1 by page type params
func (o *GetLolStoreV1ByPageTypeParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPageType adds the pageType to the get lol store v1 by page type params
func (o *GetLolStoreV1ByPageTypeParams) WithPageType(pageType string) *GetLolStoreV1ByPageTypeParams {
	o.SetPageType(pageType)
	return o
}

// SetPageType adds the pageType to the get lol store v1 by page type params
func (o *GetLolStoreV1ByPageTypeParams) SetPageType(pageType string) {
	o.PageType = pageType
}

// WriteToRequest writes these params to a swagger request
func (o *GetLolStoreV1ByPageTypeParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param pageType
	if err := r.SetPathParam("pageType", o.PageType); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
