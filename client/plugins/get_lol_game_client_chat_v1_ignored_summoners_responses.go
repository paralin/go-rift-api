// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetLolGameClientChatV1IgnoredSummonersReader is a Reader for the GetLolGameClientChatV1IgnoredSummoners structure.
type GetLolGameClientChatV1IgnoredSummonersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetLolGameClientChatV1IgnoredSummonersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetLolGameClientChatV1IgnoredSummonersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetLolGameClientChatV1IgnoredSummonersOK creates a GetLolGameClientChatV1IgnoredSummonersOK with default headers values
func NewGetLolGameClientChatV1IgnoredSummonersOK() *GetLolGameClientChatV1IgnoredSummonersOK {
	return &GetLolGameClientChatV1IgnoredSummonersOK{}
}

/*GetLolGameClientChatV1IgnoredSummonersOK handles this case with default header values.

Successful response
*/
type GetLolGameClientChatV1IgnoredSummonersOK struct {
	Payload []int64
}

func (o *GetLolGameClientChatV1IgnoredSummonersOK) Error() string {
	return fmt.Sprintf("[GET /lol-game-client-chat/v1/ignored-summoners][%d] getLolGameClientChatV1IgnoredSummonersOK  %+v", 200, o.Payload)
}

func (o *GetLolGameClientChatV1IgnoredSummonersOK) GetPayload() []int64 {
	return o.Payload
}

func (o *GetLolGameClientChatV1IgnoredSummonersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
