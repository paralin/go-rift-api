// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams creates a new PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams object
// with the default values initialized.
func NewPostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams() *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	var ()
	return &PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParamsWithTimeout creates a new PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParamsWithTimeout(timeout time.Duration) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	var ()
	return &PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams{

		timeout: timeout,
	}
}

// NewPostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParamsWithContext creates a new PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParamsWithContext(ctx context.Context) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	var ()
	return &PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams{

		Context: ctx,
	}
}

// NewPostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParamsWithHTTPClient creates a new PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParamsWithHTTPClient(client *http.Client) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	var ()
	return &PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams{
		HTTPClient: client,
	}
}

/*PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams contains all the parameters to send to the API endpoint
for the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id operation typically these are written to a http.Request
*/
type PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams struct {

	/*GameID*/
	GameID int64
	/*GameType*/
	GameType string
	/*GameVersion*/
	GameVersion string
	/*QueueID*/
	QueueID int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) WithTimeout(timeout time.Duration) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) WithContext(ctx context.Context) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) WithHTTPClient(client *http.Client) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGameID adds the gameID to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) WithGameID(gameID int64) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	o.SetGameID(gameID)
	return o
}

// SetGameID adds the gameId to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) SetGameID(gameID int64) {
	o.GameID = gameID
}

// WithGameType adds the gameType to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) WithGameType(gameType string) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	o.SetGameType(gameType)
	return o
}

// SetGameType adds the gameType to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) SetGameType(gameType string) {
	o.GameType = gameType
}

// WithGameVersion adds the gameVersion to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) WithGameVersion(gameVersion string) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	o.SetGameVersion(gameVersion)
	return o
}

// SetGameVersion adds the gameVersion to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) SetGameVersion(gameVersion string) {
	o.GameVersion = gameVersion
}

// WithQueueID adds the queueID to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) WithQueueID(queueID int32) *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams {
	o.SetQueueID(queueID)
	return o
}

// SetQueueID adds the queueId to the post lol replays v1 metadata by game Id create game version by game version game type by game type queue Id by queue Id params
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) SetQueueID(queueID int32) {
	o.QueueID = queueID
}

// WriteToRequest writes these params to a swagger request
func (o *PostLolReplaysV1MetadataByGameIDCreateGameVersionByGameVersionGameTypeByGameTypeQueueIDByQueueIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param gameId
	if err := r.SetPathParam("gameId", swag.FormatInt64(o.GameID)); err != nil {
		return err
	}

	// path param gameType
	if err := r.SetPathParam("gameType", o.GameType); err != nil {
		return err
	}

	// path param gameVersion
	if err := r.SetPathParam("gameVersion", o.GameVersion); err != nil {
		return err
	}

	// path param queueId
	if err := r.SetPathParam("queueId", swag.FormatInt32(o.QueueID)); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
