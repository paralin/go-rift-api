// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPostLolLootV1RecipesByRecipeNameCraftParams creates a new PostLolLootV1RecipesByRecipeNameCraftParams object
// with the default values initialized.
func NewPostLolLootV1RecipesByRecipeNameCraftParams() *PostLolLootV1RecipesByRecipeNameCraftParams {
	var ()
	return &PostLolLootV1RecipesByRecipeNameCraftParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostLolLootV1RecipesByRecipeNameCraftParamsWithTimeout creates a new PostLolLootV1RecipesByRecipeNameCraftParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostLolLootV1RecipesByRecipeNameCraftParamsWithTimeout(timeout time.Duration) *PostLolLootV1RecipesByRecipeNameCraftParams {
	var ()
	return &PostLolLootV1RecipesByRecipeNameCraftParams{

		timeout: timeout,
	}
}

// NewPostLolLootV1RecipesByRecipeNameCraftParamsWithContext creates a new PostLolLootV1RecipesByRecipeNameCraftParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostLolLootV1RecipesByRecipeNameCraftParamsWithContext(ctx context.Context) *PostLolLootV1RecipesByRecipeNameCraftParams {
	var ()
	return &PostLolLootV1RecipesByRecipeNameCraftParams{

		Context: ctx,
	}
}

// NewPostLolLootV1RecipesByRecipeNameCraftParamsWithHTTPClient creates a new PostLolLootV1RecipesByRecipeNameCraftParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostLolLootV1RecipesByRecipeNameCraftParamsWithHTTPClient(client *http.Client) *PostLolLootV1RecipesByRecipeNameCraftParams {
	var ()
	return &PostLolLootV1RecipesByRecipeNameCraftParams{
		HTTPClient: client,
	}
}

/*PostLolLootV1RecipesByRecipeNameCraftParams contains all the parameters to send to the API endpoint
for the post lol loot v1 recipes by recipe name craft operation typically these are written to a http.Request
*/
type PostLolLootV1RecipesByRecipeNameCraftParams struct {

	/*PlayerLootList*/
	PlayerLootList []string
	/*RecipeName*/
	RecipeName string
	/*Repeat*/
	Repeat *int32

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) WithTimeout(timeout time.Duration) *PostLolLootV1RecipesByRecipeNameCraftParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) WithContext(ctx context.Context) *PostLolLootV1RecipesByRecipeNameCraftParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) WithHTTPClient(client *http.Client) *PostLolLootV1RecipesByRecipeNameCraftParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithPlayerLootList adds the playerLootList to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) WithPlayerLootList(playerLootList []string) *PostLolLootV1RecipesByRecipeNameCraftParams {
	o.SetPlayerLootList(playerLootList)
	return o
}

// SetPlayerLootList adds the playerLootList to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) SetPlayerLootList(playerLootList []string) {
	o.PlayerLootList = playerLootList
}

// WithRecipeName adds the recipeName to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) WithRecipeName(recipeName string) *PostLolLootV1RecipesByRecipeNameCraftParams {
	o.SetRecipeName(recipeName)
	return o
}

// SetRecipeName adds the recipeName to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) SetRecipeName(recipeName string) {
	o.RecipeName = recipeName
}

// WithRepeat adds the repeat to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) WithRepeat(repeat *int32) *PostLolLootV1RecipesByRecipeNameCraftParams {
	o.SetRepeat(repeat)
	return o
}

// SetRepeat adds the repeat to the post lol loot v1 recipes by recipe name craft params
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) SetRepeat(repeat *int32) {
	o.Repeat = repeat
}

// WriteToRequest writes these params to a swagger request
func (o *PostLolLootV1RecipesByRecipeNameCraftParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.PlayerLootList != nil {
		if err := r.SetBodyParam(o.PlayerLootList); err != nil {
			return err
		}
	}

	// path param recipeName
	if err := r.SetPathParam("recipeName", o.RecipeName); err != nil {
		return err
	}

	if o.Repeat != nil {

		// query param repeat
		var qrRepeat int32
		if o.Repeat != nil {
			qrRepeat = *o.Repeat
		}
		qRepeat := swag.FormatInt32(qrRepeat)
		if qRepeat != "" {
			if err := r.SetQueryParam("repeat", qRepeat); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
