// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameReader is a Reader for the PostLolPlayerLevelUpV1LevelUpNotificationsByPluginName structure.
type PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewPostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent creates a PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent with default headers values
func NewPostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent() *PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent {
	return &PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent{}
}

/*PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent handles this case with default header values.

No content
*/
type PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent struct {
}

func (o *PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent) Error() string {
	return fmt.Sprintf("[POST /lol-player-level-up/v1/level-up-notifications/{pluginName}][%d] postLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent ", 204)
}

func (o *PostLolPlayerLevelUpV1LevelUpNotificationsByPluginNameNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
