// Code generated by go-swagger; DO NOT EDIT.

package plugins

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetClientConfigV1ConfigByNameParams creates a new GetClientConfigV1ConfigByNameParams object
// with the default values initialized.
func NewGetClientConfigV1ConfigByNameParams() *GetClientConfigV1ConfigByNameParams {
	var ()
	return &GetClientConfigV1ConfigByNameParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetClientConfigV1ConfigByNameParamsWithTimeout creates a new GetClientConfigV1ConfigByNameParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetClientConfigV1ConfigByNameParamsWithTimeout(timeout time.Duration) *GetClientConfigV1ConfigByNameParams {
	var ()
	return &GetClientConfigV1ConfigByNameParams{

		timeout: timeout,
	}
}

// NewGetClientConfigV1ConfigByNameParamsWithContext creates a new GetClientConfigV1ConfigByNameParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetClientConfigV1ConfigByNameParamsWithContext(ctx context.Context) *GetClientConfigV1ConfigByNameParams {
	var ()
	return &GetClientConfigV1ConfigByNameParams{

		Context: ctx,
	}
}

// NewGetClientConfigV1ConfigByNameParamsWithHTTPClient creates a new GetClientConfigV1ConfigByNameParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetClientConfigV1ConfigByNameParamsWithHTTPClient(client *http.Client) *GetClientConfigV1ConfigByNameParams {
	var ()
	return &GetClientConfigV1ConfigByNameParams{
		HTTPClient: client,
	}
}

/*GetClientConfigV1ConfigByNameParams contains all the parameters to send to the API endpoint
for the get client config v1 config by name operation typically these are written to a http.Request
*/
type GetClientConfigV1ConfigByNameParams struct {

	/*App*/
	App *string
	/*Name*/
	Name string
	/*Patchline*/
	Patchline *string
	/*Region*/
	Region *string
	/*Type*/
	Type string
	/*Version*/
	Version *string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithTimeout(timeout time.Duration) *GetClientConfigV1ConfigByNameParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithContext(ctx context.Context) *GetClientConfigV1ConfigByNameParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithHTTPClient(client *http.Client) *GetClientConfigV1ConfigByNameParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithApp adds the app to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithApp(app *string) *GetClientConfigV1ConfigByNameParams {
	o.SetApp(app)
	return o
}

// SetApp adds the app to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetApp(app *string) {
	o.App = app
}

// WithName adds the name to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithName(name string) *GetClientConfigV1ConfigByNameParams {
	o.SetName(name)
	return o
}

// SetName adds the name to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetName(name string) {
	o.Name = name
}

// WithPatchline adds the patchline to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithPatchline(patchline *string) *GetClientConfigV1ConfigByNameParams {
	o.SetPatchline(patchline)
	return o
}

// SetPatchline adds the patchline to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetPatchline(patchline *string) {
	o.Patchline = patchline
}

// WithRegion adds the region to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithRegion(region *string) *GetClientConfigV1ConfigByNameParams {
	o.SetRegion(region)
	return o
}

// SetRegion adds the region to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetRegion(region *string) {
	o.Region = region
}

// WithType adds the typeVar to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithType(typeVar string) *GetClientConfigV1ConfigByNameParams {
	o.SetType(typeVar)
	return o
}

// SetType adds the type to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetType(typeVar string) {
	o.Type = typeVar
}

// WithVersion adds the version to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) WithVersion(version *string) *GetClientConfigV1ConfigByNameParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the get client config v1 config by name params
func (o *GetClientConfigV1ConfigByNameParams) SetVersion(version *string) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *GetClientConfigV1ConfigByNameParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.App != nil {

		// query param app
		var qrApp string
		if o.App != nil {
			qrApp = *o.App
		}
		qApp := qrApp
		if qApp != "" {
			if err := r.SetQueryParam("app", qApp); err != nil {
				return err
			}
		}

	}

	// path param name
	if err := r.SetPathParam("name", o.Name); err != nil {
		return err
	}

	if o.Patchline != nil {

		// query param patchline
		var qrPatchline string
		if o.Patchline != nil {
			qrPatchline = *o.Patchline
		}
		qPatchline := qrPatchline
		if qPatchline != "" {
			if err := r.SetQueryParam("patchline", qPatchline); err != nil {
				return err
			}
		}

	}

	if o.Region != nil {

		// query param region
		var qrRegion string
		if o.Region != nil {
			qrRegion = *o.Region
		}
		qRegion := qrRegion
		if qRegion != "" {
			if err := r.SetQueryParam("region", qRegion); err != nil {
				return err
			}
		}

	}

	// query param type
	qrType := o.Type
	qType := qrType
	if qType != "" {
		if err := r.SetQueryParam("type", qType); err != nil {
			return err
		}
	}

	if o.Version != nil {

		// query param version
		var qrVersion string
		if o.Version != nil {
			qrVersion = *o.Version
		}
		qVersion := qrVersion
		if qVersion != "" {
			if err := r.SetQueryParam("version", qVersion); err != nil {
				return err
			}
		}

	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
